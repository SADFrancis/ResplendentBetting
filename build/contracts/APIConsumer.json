{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "ChainlinkCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "ChainlinkFulfilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "ChainlinkRequested",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "api_data",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_bytes32",
          "type": "bytes32"
        }
      ],
      "name": "bytes32ToString",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_api_data",
          "type": "bytes32"
        }
      ],
      "name": "fulfill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "callBackContract",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "functionSelector",
          "type": "bytes4"
        }
      ],
      "name": "requestData",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_str",
          "type": "string"
        }
      ],
      "name": "strToUint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "res",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "err",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "/Users/seanfrancis/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.1/contracts/src/v0.8/vendor/BufferChainlink.sol",
    "12": "/Users/seanfrancis/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.1/contracts/src/v0.8/vendor/CBORChainlink.sol",
    "14": "contracts/APIConsumer.sol",
    "2": "/Users/seanfrancis/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.1/contracts/src/v0.8/Chainlink.sol",
    "3": "/Users/seanfrancis/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.1/contracts/src/v0.8/ChainlinkClient.sol"
  },
  "ast": {
    "absolutePath": "contracts/APIConsumer.sol",
    "exportedSymbols": {
      "APIConsumer": [
        257
      ],
      "BufferChainlink": [
        2805
      ],
      "CBORChainlink": [
        3252
      ],
      "Chainlink": [
        1955
      ],
      "ChainlinkClient": [
        1527
      ],
      "ChainlinkRequestInterface": [
        1988
      ],
      "ENSInterface": [
        2068
      ],
      "ENSResolver_Chainlink": [
        2261
      ],
      "LinkTokenInterface": [
        2163
      ],
      "OperatorInterface": [
        2243
      ],
      "OracleInterface": [
        3291
      ],
      "PointerInterface": [
        2251
      ]
    },
    "id": 258,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:14"
      },
      {
        "absolutePath": "/Users/seanfrancis/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.1/contracts/src/v0.8/ChainlinkClient.sol",
        "file": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 258,
        "sourceUnit": 1528,
        "src": "57:59:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "ChainlinkClient",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1527,
              "src": "484:15:14"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "484:15:14"
          }
        ],
        "canonicalName": "APIConsumer",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "334:125:14",
          "text": " THIS IS AN EXAMPLE CONTRACT WHICH USES HARDCODED VALUES FOR CLARITY.\n PLEASE DO NOT USE THIS CODE IN PRODUCTION."
        },
        "fullyImplemented": true,
        "id": 257,
        "linearizedBaseContracts": [
          257,
          1527
        ],
        "name": "APIConsumer",
        "nameLocation": "469:11:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 9,
            "libraryName": {
              "id": 6,
              "name": "Chainlink",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1955,
              "src": "512:9:14"
            },
            "nodeType": "UsingForDirective",
            "src": "506:38:14",
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "Chainlink.Request",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1712,
                "src": "526:17:14"
              },
              "referencedDeclaration": 1712,
              "src": "526:17:14",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Request_$1712_storage_ptr",
                "typeString": "struct Chainlink.Request"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "dd151ec7",
            "id": 11,
            "mutability": "mutable",
            "name": "api_data",
            "nameLocation": "567:8:14",
            "nodeType": "VariableDeclaration",
            "scope": 257,
            "src": "552:23:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 10,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "552:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "597:6:14",
            "nodeType": "VariableDeclaration",
            "scope": 257,
            "src": "581:22:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "581:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "jobId",
            "nameLocation": "625:5:14",
            "nodeType": "VariableDeclaration",
            "scope": 257,
            "src": "609:21:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 14,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "609:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "652:3:14",
            "nodeType": "VariableDeclaration",
            "scope": 257,
            "src": "636:19:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "636:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "879:260:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 21,
                      "name": "setPublicChainlinkToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1348,
                      "src": "889:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "889:25:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "889:25:14"
                },
                {
                  "expression": {
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "924:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307833413536614534613238333143336433353134623544374166353537384534356542446237613430",
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "933:42:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x3A56aE4a2831C3d3514b5D7Af5578E45eBDb7a40"
                    },
                    "src": "924:51:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "924:51:14"
                },
                {
                  "expression": {
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28,
                      "name": "jobId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1006:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3265386336623638666630363464333261663962313031396435643539626164",
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1014:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_b5c7871750ee9b04a673eb6fff264156bdbda0afac34f2b4084c8549c31718c3",
                        "typeString": "literal_string \"2e8c6b68ff064d32af9b1019d5d59bad\""
                      },
                      "value": "2e8c6b68ff064d32af9b1019d5d59bad"
                    },
                    "src": "1006:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:42:14"
                },
                {
                  "expression": {
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1081:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "302e31",
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1087:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_10",
                          "typeString": "rational_const 1 / 10"
                        },
                        "value": "0.1"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1093:2:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3138",
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1099:2:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "1093:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "1087:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      }
                    },
                    "src": "1081:20:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:20:14"
                }
              ]
            },
            "documentation": {
              "id": 18,
              "nodeType": "StructuredDocumentation",
              "src": "666:194:14",
              "text": " Network: Kovan\n Oracle: 0xc57B33452b4F7BB189bB5AfaE9cc4aBa1f7a4FD8 (Chainlink Devrel   \n Node)\n Job ID: d5270d1c311941d0b08bead21fea7747\n Fee: 0.1 LINK"
            },
            "id": 41,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "876:2:14"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "879:0:14"
            },
            "scope": 257,
            "src": "865:274:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "1441:1033:14",
              "statements": [
                {
                  "assignments": [
                    55
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "1476:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "1451:32:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$1712_memory_ptr",
                        "typeString": "struct Chainlink.Request"
                      },
                      "typeName": {
                        "id": 54,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53,
                          "name": "Chainlink.Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1712,
                          "src": "1451:17:14"
                        },
                        "referencedDeclaration": 1712,
                        "src": "1451:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$1712_storage_ptr",
                          "typeString": "struct Chainlink.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 57,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1508:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 58,
                        "name": "callBackContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1515:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59,
                        "name": "functionSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1533:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 56,
                      "name": "buildChainlinkRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1039,
                      "src": "1486:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_address_$_t_bytes4_$returns$_t_struct$_Request_$1712_memory_ptr_$",
                        "typeString": "function (bytes32,address,bytes4) pure returns (struct Chainlink.Request memory)"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1486:64:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$1712_memory_ptr",
                      "typeString": "struct Chainlink.Request memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1451:99:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "676574",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1634:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6817c00f03de8b5bd58d2016b59d251c13056b989171c5852949903bc043bc27",
                          "typeString": "literal_string \"get\""
                        },
                        "value": "get"
                      },
                      {
                        "hexValue": "68747470733a2f2f6665682d726573706c656e64656e742e6865726f6b756170702e636f6d2f636861726163746572732f6c61746573743f666f726d61743d6a736f6e",
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1641:69:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c4c110037e9d03aa850a123bd0f702a1dab2347eac7ea8d32f0cffb6fdb6d04",
                          "typeString": "literal_string \"https://feh-resplendent.herokuapp.com/characters/latest?format=json\""
                        },
                        "value": "https://feh-resplendent.herokuapp.com/characters/latest?format=json"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6817c00f03de8b5bd58d2016b59d251c13056b989171c5852949903bc043bc27",
                          "typeString": "literal_string \"get\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c4c110037e9d03aa850a123bd0f702a1dab2347eac7ea8d32f0cffb6fdb6d04",
                          "typeString": "literal_string \"https://feh-resplendent.herokuapp.com/characters/latest?format=json\""
                        }
                      ],
                      "expression": {
                        "id": 62,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1622:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$1712_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1812,
                      "src": "1622:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$1712_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$1712_memory_ptr_$",
                        "typeString": "function (struct Chainlink.Request memory,string memory,string memory) pure"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1622:89:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1622:89:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "70617468",
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2180:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46f9db2921f88204395f1f47d741736216b2218e88e47f50e1f1b56261f0d0cd",
                          "typeString": "literal_string \"path\""
                        },
                        "value": "path"
                      },
                      {
                        "hexValue": "7265616c6d5f696e646578",
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2188:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d43f5b5d9b74c298e292940ad4fc13996547a78ab095c8505ad375af508fd6ea",
                          "typeString": "literal_string \"realm_index\""
                        },
                        "value": "realm_index"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_46f9db2921f88204395f1f47d741736216b2218e88e47f50e1f1b56261f0d0cd",
                          "typeString": "literal_string \"path\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d43f5b5d9b74c298e292940ad4fc13996547a78ab095c8505ad375af508fd6ea",
                          "typeString": "literal_string \"realm_index\""
                        }
                      ],
                      "expression": {
                        "id": 69,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "2168:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$1712_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1812,
                      "src": "2168:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$1712_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$1712_memory_ptr_$",
                        "typeString": "function (struct Chainlink.Request memory,string memory,string memory) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2168:34:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "2168:34:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "2446:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "2454:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$1712_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      {
                        "id": 79,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "2463:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Request_$1712_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76,
                      "name": "sendChainlinkRequestTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1143,
                      "src": "2423:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$1712_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (address,struct Chainlink.Request memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2423:44:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 50,
                  "id": 81,
                  "nodeType": "Return",
                  "src": "2416:51:14"
                }
              ]
            },
            "documentation": {
              "id": 42,
              "nodeType": "StructuredDocumentation",
              "src": "1149:175:14",
              "text": " Create a Chainlink request to retrieve API response, find the target\n data, then multiply by 1000000000000000000 (to remove decimal places from data)."
            },
            "functionSelector": "65ff1329",
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestData",
            "nameLocation": "1338:11:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "callBackContract",
                  "nameLocation": "1358:16:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1350:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1350:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "functionSelector",
                  "nameLocation": "1383:16:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1376:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1349:51:14"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "1425:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1417:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1417:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1416:19:14"
            },
            "scope": 257,
            "src": "1329:1145:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "2658:37:14",
              "statements": [
                {
                  "expression": {
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 94,
                      "name": "api_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2668:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 95,
                      "name": "_api_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "2679:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2668:20:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "2668:20:14"
                }
              ]
            },
            "documentation": {
              "id": 84,
              "nodeType": "StructuredDocumentation",
              "src": "2484:62:14",
              "text": " Receive the response in the form of uint256"
            },
            "functionSelector": "042f2b65",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 91,
                    "name": "_requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86,
                    "src": "2642:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 92,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 90,
                  "name": "recordChainlinkFulfillment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1507,
                  "src": "2615:26:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2615:38:14"
              }
            ],
            "name": "fulfill",
            "nameLocation": "2561:7:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nameLocation": "2577:10:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "2569:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2569:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_api_data",
                  "nameLocation": "2597:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "2589:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2589:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2568:39:14"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2658:0:14"
            },
            "scope": 257,
            "src": "2552:143:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "2780:288:14",
              "statements": [
                {
                  "assignments": [
                    107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 107,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "2796:1:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "2790:7:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 106,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2790:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 109,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2800:1:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2790:11:14"
                },
                {
                  "body": {
                    "id": 122,
                    "nodeType": "Block",
                    "src": "2845:28:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2859:3:14",
                          "subExpression": {
                            "id": 119,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "2859:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 121,
                        "nodeType": "ExpressionStatement",
                        "src": "2859:3:14"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 110,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "2817:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2821:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32_by_1",
                          "typeString": "int_const 32"
                        },
                        "value": "32"
                      },
                      "src": "2817:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 113,
                          "name": "_bytes32",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "2827:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 115,
                        "indexExpression": {
                          "id": 114,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "2836:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2827:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2842:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2827:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2817:26:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 123,
                  "nodeType": "WhileStatement",
                  "src": "2811:62:14"
                },
                {
                  "assignments": [
                    125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 125,
                      "mutability": "mutable",
                      "name": "bytesArray",
                      "nameLocation": "2895:10:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "2882:23:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 124,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2882:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 130,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 128,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "2918:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2908:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 126,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2912:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2908:12:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2882:38:14"
                },
                {
                  "body": {
                    "id": 155,
                    "nodeType": "Block",
                    "src": "2975:52:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 147,
                              "name": "bytesArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 125,
                              "src": "2989:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 149,
                            "indexExpression": {
                              "id": 148,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "3000:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2989:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 150,
                              "name": "_bytes32",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "3005:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 152,
                            "indexExpression": {
                              "id": 151,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "3014:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3005:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "2989:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 154,
                        "nodeType": "ExpressionStatement",
                        "src": "2989:27:14"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 135,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "2942:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2946:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32_by_1",
                          "typeString": "int_const 32"
                        },
                        "value": "32"
                      },
                      "src": "2942:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 138,
                          "name": "_bytes32",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "2952:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 140,
                        "indexExpression": {
                          "id": 139,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "2961:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2952:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2967:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2952:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2942:26:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 156,
                  "initializationExpression": {
                    "expression": {
                      "id": 133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 131,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "2935:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2939:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2935:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 134,
                    "nodeType": "ExpressionStatement",
                    "src": "2935:5:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2970:3:14",
                      "subExpression": {
                        "id": 144,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "2970:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 146,
                    "nodeType": "ExpressionStatement",
                    "src": "2970:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "2930:97:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 159,
                        "name": "bytesArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "3050:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3043:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 157,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3043:6:14",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3043:18:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 105,
                  "id": 161,
                  "nodeType": "Return",
                  "src": "3036:25:14"
                }
              ]
            },
            "functionSelector": "9201de55",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bytes32ToString",
            "nameLocation": "2710:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "_bytes32",
                  "nameLocation": "2734:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "2726:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2726:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2725:18:14"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "2765:13:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2765:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2764:15:14"
            },
            "scope": 257,
            "src": "2701:367:14",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "3156:293:14",
              "statements": [
                {
                  "body": {
                    "id": 249,
                    "nodeType": "Block",
                    "src": "3211:212:14",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "id": 196,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "arguments": [
                                            {
                                              "id": 190,
                                              "name": "_str",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 165,
                                              "src": "3238:4:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            ],
                                            "id": 189,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3232:5:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                              "typeString": "type(bytes storage pointer)"
                                            },
                                            "typeName": {
                                              "id": 188,
                                              "name": "bytes",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3232:5:14",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 191,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3232:11:14",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 193,
                                        "indexExpression": {
                                          "id": 192,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 173,
                                          "src": "3244:1:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3232:14:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        }
                                      ],
                                      "id": 187,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3226:5:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint8_$",
                                        "typeString": "type(uint8)"
                                      },
                                      "typeName": {
                                        "id": 186,
                                        "name": "uint8",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3226:5:14",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 194,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3226:21:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "3438",
                                    "id": 195,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3250:2:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_48_by_1",
                                      "typeString": "int_const 48"
                                    },
                                    "value": "48"
                                  },
                                  "src": "3226:26:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "id": 197,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3225:28:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3256:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3225:32:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "id": 210,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "arguments": [
                                            {
                                              "id": 204,
                                              "name": "_str",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 165,
                                              "src": "3274:4:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            ],
                                            "id": 203,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3268:5:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                              "typeString": "type(bytes storage pointer)"
                                            },
                                            "typeName": {
                                              "id": 202,
                                              "name": "bytes",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3268:5:14",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 205,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3268:11:14",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 207,
                                        "indexExpression": {
                                          "id": 206,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 173,
                                          "src": "3280:1:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3268:14:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        }
                                      ],
                                      "id": 201,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3262:5:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint8_$",
                                        "typeString": "type(uint8)"
                                      },
                                      "typeName": {
                                        "id": 200,
                                        "name": "uint8",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3262:5:14",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 208,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3262:21:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "3438",
                                    "id": 209,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3286:2:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_48_by_1",
                                      "typeString": "int_const 48"
                                    },
                                    "value": "48"
                                  },
                                  "src": "3262:26:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "id": 211,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3261:28:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "39",
                              "id": 212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3292:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            },
                            "src": "3261:32:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3225:68:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 220,
                        "nodeType": "IfStatement",
                        "src": "3221:116:14",
                        "trueBody": {
                          "id": 219,
                          "nodeType": "Block",
                          "src": "3295:42:14",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "30",
                                    "id": 215,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3317:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 216,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3320:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  }
                                ],
                                "id": 217,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3316:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_bool_$",
                                  "typeString": "tuple(int_const 0,bool)"
                                }
                              },
                              "functionReturnParameters": 171,
                              "id": 218,
                              "nodeType": "Return",
                              "src": "3309:17:14"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 221,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "3346:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "id": 232,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "arguments": [
                                            {
                                              "id": 226,
                                              "name": "_str",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 165,
                                              "src": "3366:4:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            ],
                                            "id": 225,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3360:5:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                              "typeString": "type(bytes storage pointer)"
                                            },
                                            "typeName": {
                                              "id": 224,
                                              "name": "bytes",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3360:5:14",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 227,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3360:11:14",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 229,
                                        "indexExpression": {
                                          "id": 228,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 173,
                                          "src": "3372:1:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3360:14:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        }
                                      ],
                                      "id": 223,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3354:5:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint8_$",
                                        "typeString": "type(uint8)"
                                      },
                                      "typeName": {
                                        "id": 222,
                                        "name": "uint8",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3354:5:14",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 230,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3354:21:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "3438",
                                    "id": 231,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3378:2:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_48_by_1",
                                      "typeString": "int_const 48"
                                    },
                                    "value": "48"
                                  },
                                  "src": "3354:26:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "id": 233,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3353:28:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3384:2:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 243,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 241,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 237,
                                              "name": "_str",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 165,
                                              "src": "3395:4:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            ],
                                            "id": 236,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3389:5:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                              "typeString": "type(bytes storage pointer)"
                                            },
                                            "typeName": {
                                              "id": 235,
                                              "name": "bytes",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3389:5:14",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 238,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3389:11:14",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 239,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "3389:18:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 240,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 173,
                                        "src": "3410:1:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3389:22:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 242,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3414:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3389:26:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 244,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3388:28:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3384:32:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3353:63:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3346:70:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 248,
                        "nodeType": "ExpressionStatement",
                        "src": "3346:70:14"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 176,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "3182:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 179,
                            "name": "_str",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "3192:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3186:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 177,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "3186:5:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3186:11:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3186:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3182:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 250,
                  "initializationExpression": {
                    "assignments": [
                      173
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 173,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3175:1:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 250,
                        "src": "3167:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3167:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 175,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3179:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3167:13:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3206:3:14",
                      "subExpression": {
                        "id": 183,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "3206:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 185,
                    "nodeType": "ExpressionStatement",
                    "src": "3206:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "3162:261:14"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 251,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "3436:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3441:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "id": 253,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3435:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 171,
                  "id": 254,
                  "nodeType": "Return",
                  "src": "3428:18:14"
                }
              ]
            },
            "functionSelector": "c5ef3ec5",
            "id": 256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "strToUint",
            "nameLocation": "3083:9:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "_str",
                  "nameLocation": "3107:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "3093:18:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3093:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3092:20:14"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "res",
                  "nameLocation": "3141:3:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "3133:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3133:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "err",
                  "nameLocation": "3151:3:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "3146:8:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3146:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3132:23:14"
            },
            "scope": 257,
            "src": "3074:375:14",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 258,
        "src": "460:3110:14",
        "usedErrors": []
      }
    ],
    "src": "32:3540:14"
  },
  "bytecode": "6080604052600160045534801561001557600080fd5b5061001e610079565b600780546001600160a01b031916733a56ae4a2831c3d3514b5d7af5578e45ebdb7a401790557f326538633662363866663036346433326166396231303139643564353962616460085567016345785d8a0000600955610146565b61011473c89bd4e1632d3a43cb03aaad5262cbe4038bc5716001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f29190610116565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b565b60006020828403121561012857600080fd5b81516001600160a01b038116811461013f57600080fd5b9392505050565b611027806101556000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063042f2b651461005c57806365ff1329146100715780639201de5514610097578063c5ef3ec5146100b7578063dd151ec7146100df575b600080fd5b61006f61006a366004610b62565b6100e8565b005b61008461007f366004610b84565b6101b0565b6040519081526020015b60405180910390f35b6100aa6100a5366004610bd6565b61027b565b60405161008e9190610c3c565b6100ca6100c5366004610c65565b6103b2565b6040805192835290151560208301520161008e565b61008460065481565b60008281526005602052604090205482906001600160a01b031633146101665760405162461bcd60e51b815260206004820152602860248201527f536f75726365206d75737420626520746865206f7261636c65206f6620746865604482015267081c995c5d595cdd60c21b60648201526084015b60405180910390fd5b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a25060065550565b6000806101c060085485856104b1565b90506102026040518060400160405280600381526020016219d95d60ea1b815250604051806080016040528060438152602001610faf604391398391906104d6565b610256604051806040016040528060048152602001630e0c2e8d60e31b8152506040518060400160405280600b81526020016a0e4cac2d8dabed2dcc8caf60ab1b815250836104d69092919063ffffffff16565b600754600954610271916001600160a01b03169083906104f9565b9150505b92915050565b606060005b60208160ff161080156102b45750828160ff16602081106102a3576102a3610d16565b1a60f81b6001600160f81b03191615155b156102cb57806102c381610d42565b915050610280565b60008160ff1667ffffffffffffffff8111156102e9576102e9610c4f565b6040519080825280601f01601f191660200182016040528015610313576020820181803683370190505b509050600091505b60208260ff1610801561034f5750838260ff166020811061033e5761033e610d16565b1a60f81b6001600160f81b03191615155b156103ab57838260ff166020811061036957610369610d16565b1a60f81b818360ff168151811061038257610382610d16565b60200101906001600160f81b031916908160001a905350816103a381610d42565b92505061031b565b9392505050565b60008060005b83518110156104a657600060308583815181106103d7576103d7610d16565b01602001516103e9919060f81c610d61565b60ff16108061042057506009603085838151811061040957610409610d16565b016020015161041b919060f81c610d61565b60ff16115b156104315750600093849350915050565b60018185516104409190610d84565b61044a9190610d84565b61045590600a610e7f565b603085838151811061046957610469610d16565b016020015161047b919060f81c610d61565b60ff166104889190610e8b565b6104929084610eaa565b92508061049e81610ec2565b9150506103b8565b509092600192509050565b6104b9610b27565b6104c1610b27565b6104cd8186868661058c565b95945050505050565b60808301516104e590836105d2565b60808301516104f490826105d2565b505050565b60045460009061050a816001610eaa565b600455835160408086015160808701515191516000936320214ca360e11b936105429386938493923092918a91600191602401610edb565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529050610582868386846105e9565b9695505050505050565b610594610b27565b6105a48560800151610100610747565b50508284526001600160a01b03821660208501526001600160e01b031981166040850152835b949350505050565b6105df82600383516107ac565b6104f482826108c1565b6040516bffffffffffffffffffffffff193060601b1660208201526034810184905260009060540160408051808303601f1901815282825280516020918201206000818152600590925291812080546001600160a01b0319166001600160a01b038a1617905590925082917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af99190a2600254604051630200057560e51b81526001600160a01b0390911690634000aea0906106ac90889087908790600401610f43565b6020604051808303816000875af11580156106cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ef9190610f6a565b6105ca5760405162461bcd60e51b815260206004820152602360248201527f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261604482015262636c6560e81b606482015260840161015d565b604080518082019091526060815260006020820152610767602083610f8c565b1561078f57610777602083610f8c565b610782906020610d84565b61078c9083610eaa565b91505b506020828101829052604080518085526000815290920101905290565b60178167ffffffffffffffff16116107d7576107d18360e0600585901b1683176108e8565b50505050565b60ff8167ffffffffffffffff1611610815576107fe836018611fe0600586901b16176108e8565b506107d18367ffffffffffffffff8316600161090d565b61ffff8167ffffffffffffffff16116108545761083d836019611fe0600586901b16176108e8565b506107d18367ffffffffffffffff8316600261090d565b63ffffffff8167ffffffffffffffff16116108955761087e83601a611fe0600586901b16176108e8565b506107d18367ffffffffffffffff8316600461090d565b6108aa83601b611fe0600586901b16176108e8565b506107d18367ffffffffffffffff8316600861090d565b6040805180820190915260608152600060208201526103ab83846000015151848551610933565b6040805180820190915260608152600060208201526103ab8384600001515184610a1d565b6040805180820190915260608152600060208201526105ca848560000151518585610a78565b604080518082019091526060815260006020820152825182111561095657600080fd5b60208501516109658386610eaa565b11156109985761099885610988876020015187866109839190610eaa565b610af9565b610993906002610e8b565b610b10565b6000808651805187602083010193508088870111156109b75787860182525b505050602084015b602084106109f757805182526109d6602083610eaa565b91506109e3602082610eaa565b90506109f0602085610d84565b93506109bf565b51815160001960208690036101000a019081169019919091161790525083949350505050565b60408051808201909152606081526000602082015283602001518310610a5257610a5284856020015160026109939190610e8b565b8351805160208583010184815350808503610a6e576001810182525b5093949350505050565b6040805180820190915260608152600060208201526020850151610a9c8584610eaa565b1115610ab057610ab0856109888685610eaa565b60006001610ac084610100610e7f565b610aca9190610d84565b9050855183868201018583198251161781525080518487011115610aee5783860181525b509495945050505050565b600081831115610b0a575081610275565b50919050565b8151610b1c8383610747565b506107d183826108c1565b6040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b60008060408385031215610b7557600080fd5b50508035926020909101359150565b60008060408385031215610b9757600080fd5b82356001600160a01b0381168114610bae57600080fd5b915060208301356001600160e01b031981168114610bcb57600080fd5b809150509250929050565b600060208284031215610be857600080fd5b5035919050565b6000815180845260005b81811015610c1557602081850181015186830182015201610bf9565b81811115610c27576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006103ab6020830184610bef565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610c7757600080fd5b813567ffffffffffffffff80821115610c8f57600080fd5b818401915084601f830112610ca357600080fd5b813581811115610cb557610cb5610c4f565b604051601f8201601f19908116603f01168101908382118183101715610cdd57610cdd610c4f565b81604052828152876020848701011115610cf657600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8103610d5857610d58610d2c565b60010192915050565b600060ff821660ff841680821015610d7b57610d7b610d2c565b90039392505050565b600082821015610d9657610d96610d2c565b500390565b600181815b80851115610dd6578160001904821115610dbc57610dbc610d2c565b80851615610dc957918102915b93841c9390800290610da0565b509250929050565b600082610ded57506001610275565b81610dfa57506000610275565b8160018114610e105760028114610e1a57610e36565b6001915050610275565b60ff841115610e2b57610e2b610d2c565b50506001821b610275565b5060208310610133831016604e8410600b8410161715610e59575081810a610275565b610e638383610d9b565b8060001904821115610e7757610e77610d2c565b029392505050565b60006103ab8383610dde565b6000816000190483118215151615610ea557610ea5610d2c565b500290565b60008219821115610ebd57610ebd610d2c565b500190565b600060018201610ed457610ed4610d2c565b5060010190565b6001600160a01b0389811682526020820189905260408201889052861660608201526001600160e01b03198516608082015260a0810184905260c0810183905261010060e08201819052600090610f3483820185610bef565b9b9a5050505050505050505050565b60018060a01b03841681528260208201526060604082015260006104cd6060830184610bef565b600060208284031215610f7c57600080fd5b815180151581146103ab57600080fd5b600082610fa957634e487b7160e01b600052601260045260246000fd5b50069056fe68747470733a2f2f6665682d726573706c656e64656e742e6865726f6b756170702e636f6d2f636861726163746572732f6c61746573743f666f726d61743d6a736f6ea26469706673582212209c4496532069cb69f7e51af252978c2c08a332e3158424f9524b274c40414a4d64736f6c634300080d0033",
  "bytecodeSha1": "ba9128cfc588a698be86bde1592934f15d790b04",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "APIConsumer",
  "coverageMap": {
    "branches": {
      "11": {
        "BufferChainlink.init": {
          "58": [
            1100,
            1118,
            false
          ]
        },
        "BufferChainlink.max": {
          "63": [
            2037,
            2042,
            false
          ]
        },
        "BufferChainlink.write": {
          "59": [
            2896,
            2914,
            true
          ],
          "60": [
            2926,
            2950,
            false
          ]
        },
        "BufferChainlink.writeInt": {
          "62": [
            9118,
            9142,
            false
          ]
        },
        "BufferChainlink.writeUint8": {
          "61": [
            5276,
            5295,
            false
          ]
        }
      },
      "12": {
        "CBORChainlink.encodeFixedNumeric": {
          "64": [
            794,
            805,
            false
          ],
          "65": [
            876,
            889,
            false
          ],
          "66": [
            988,
            1003,
            false
          ],
          "67": [
            1102,
            1121,
            false
          ]
        }
      },
      "14": {
        "APIConsumer.strToUint": {
          "56": [
            3225,
            3257,
            true
          ],
          "57": [
            3261,
            3293,
            false
          ]
        }
      },
      "2": {},
      "3": {
        "ChainlinkClient._rawRequest": {
          "68": [
            6952,
            7014,
            true
          ]
        }
      }
    },
    "statements": {
      "11": {
        "BufferChainlink.append": {
          "39": [
            4790,
            4842
          ]
        },
        "BufferChainlink.appendInt": {
          "41": [
            10019,
            10066
          ]
        },
        "BufferChainlink.appendUint8": {
          "40": [
            6136,
            6180
          ]
        },
        "BufferChainlink.init": {
          "28": [
            1128,
            1160
          ],
          "29": [
            1214,
            1237
          ]
        },
        "BufferChainlink.max": {
          "52": [
            2052,
            2060
          ],
          "53": [
            2072,
            2080
          ]
        },
        "BufferChainlink.resize": {
          "54": [
            1908,
            1927
          ],
          "55": [
            1933,
            1952
          ]
        },
        "BufferChainlink.write": {
          "42": [
            2888,
            2915
          ],
          "43": [
            2960,
            3005
          ],
          "44": [
            3639,
            3649
          ],
          "45": [
            3657,
            3666
          ],
          "46": [
            3562,
            3571
          ],
          "47": [
            3940,
            3950
          ]
        },
        "BufferChainlink.writeInt": {
          "50": [
            9152,
            9180
          ],
          "51": [
            9634,
            9644
          ]
        },
        "BufferChainlink.writeUint8": {
          "48": [
            5305,
            5334
          ],
          "49": [
            5772,
            5782
          ]
        }
      },
      "12": {
        "CBORChainlink.encodeFixedNumeric": {
          "30": [
            815,
            859
          ],
          "31": [
            899,
            940
          ],
          "32": [
            948,
            971
          ],
          "33": [
            1013,
            1054
          ],
          "34": [
            1062,
            1085
          ],
          "35": [
            1131,
            1172
          ],
          "36": [
            1180,
            1203
          ],
          "37": [
            1224,
            1265
          ],
          "38": [
            1273,
            1296
          ]
        },
        "CBORChainlink.encodeString": {
          "22": [
            2875,
            2946
          ],
          "23": [
            2952,
            2976
          ]
        }
      },
      "14": {
        "APIConsumer.bytes32ToString": {
          "4": [
            2859,
            2862
          ],
          "5": [
            2935,
            2940
          ],
          "6": [
            2989,
            3016
          ],
          "7": [
            2970,
            2973
          ],
          "8": [
            3036,
            3061
          ]
        },
        "APIConsumer.fulfill": {
          "0": [
            2668,
            2688
          ]
        },
        "APIConsumer.requestData": {
          "1": [
            1622,
            1711
          ],
          "2": [
            2168,
            2202
          ],
          "3": [
            2416,
            2467
          ]
        },
        "APIConsumer.strToUint": {
          "9": [
            3309,
            3326
          ],
          "10": [
            3346,
            3416
          ],
          "11": [
            3206,
            3209
          ],
          "12": [
            3428,
            3446
          ]
        }
      },
      "2": {
        "Chainlink.add": {
          "14": [
            2061,
            2087
          ],
          "15": [
            2093,
            2121
          ]
        },
        "Chainlink.initialize": {
          "18": [
            1161,
            1210
          ],
          "19": [
            1216,
            1231
          ],
          "20": [
            1237,
            1272
          ],
          "21": [
            1278,
            1316
          ]
        }
      },
      "3": {
        "ChainlinkClient._rawRequest": {
          "24": [
            6796,
            6848
          ],
          "25": [
            6854,
            6898
          ],
          "26": [
            6904,
            6938
          ],
          "27": [
            6944,
            7054
          ]
        },
        "ChainlinkClient.buildChainlinkRequest": {
          "13": [
            2058,
            2128
          ]
        },
        "ChainlinkClient.sendChainlinkRequestTo": {
          "16": [
            3884,
            3910
          ],
          "17": [
            4373,
            4438
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.4.1/BufferChainlink",
    "smartcontractkit/chainlink-brownie-contracts@0.4.1/CBORChainlink",
    "smartcontractkit/chainlink-brownie-contracts@0.4.1/Chainlink",
    "smartcontractkit/chainlink-brownie-contracts@0.4.1/ChainlinkClient"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "460:3110:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2552:143;;;;;;:::i;:::-;;:::i;:::-;;1329:1145;;;;;;:::i;:::-;;:::i;:::-;;;886:25:16;;;874:2;859:18;1329:1145:14;;;;;;;;2701:367;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3074:375::-;;;;;;:::i;:::-;;:::i;:::-;;;;3036:25:16;;;3104:14;;3097:22;3092:2;3077:18;;3070:50;3009:18;3074:375:14;2868:258:16;552:23:14;;;;;;2552:143;11663:28:3;;;;:17;:28;;;;;;;;-1:-1:-1;;;;;11663:28:3;11649:10;:42;11641:95;;;;-1:-1:-1;;;11641:95:3;;3333:2:16;11641:95:3;;;3315:21:16;3372:2;3352:18;;;3345:30;3411:34;3391:18;;;3384:62;-1:-1:-1;;;3462:18:16;;;3455:38;3510:19;;11641:95:3;;;;;;;;;11749:28;;;;:17;:28;;;;;;11742:35;;-1:-1:-1;;;;;;11742:35:3;;;11788:29;11767:9;;11788:29;;;-1:-1:-1;2668:8:14::1;:20:::0;-1:-1:-1;2552:143:14:o;1329:1145::-;1417:17;1451:32;1486:64;1508:5;;1515:16;1533;1486:21;:64::i;:::-;1451:99;;1622:89;;;;;;;;;;;;;;-1:-1:-1;;;1622:89:14;;;;;;;;;;;;;;;;;;;;:7;;:89;:11;:89::i;:::-;2168:34;;;;;;;;;;;;;;-1:-1:-1;;;2168:34:14;;;;;;;;;;;;;;;;-1:-1:-1;;;2168:34:14;;;:7;:11;;:34;;;;;:::i;:::-;2446:6;;2463:3;;2423:44;;-1:-1:-1;;;;;2446:6:14;;2454:7;;2423:22;:44::i;:::-;2416:51;;;1329:1145;;;;;:::o;2701:367::-;2765:13;2790:7;2811:62;2821:2;2817:1;:6;;;:26;;;;;2827:8;2836:1;2827:11;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;2827:16:14;;;2817:26;2811:62;;;2859:3;;;;:::i;:::-;;;;2811:62;;;2882:23;2918:1;2908:12;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2908:12:14;;2882:38;;2939:1;2935:5;;2930:97;2946:2;2942:1;:6;;;:26;;;;;2952:8;2961:1;2952:11;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;2952:16:14;;;2942:26;2930:97;;;3005:8;3014:1;3005:11;;;;;;;;;:::i;:::-;;;;2989:10;3000:1;2989:13;;;;;;;;;;:::i;:::-;;;;:27;-1:-1:-1;;;;;2989:27:14;;;;;;;;-1:-1:-1;2970:3:14;;;;:::i;:::-;;;;2930:97;;;3050:10;2701:367;-1:-1:-1;;;2701:367:14:o;3074:375::-;3133:11;3146:8;3167:9;3162:261;3192:4;3186:18;3182:1;:22;3162:261;;;3256:1;3250:2;3238:4;3244:1;3232:14;;;;;;;;:::i;:::-;;;;;3226:26;;;3232:14;;3226:26;:::i;:::-;3225:32;;;:68;;;;3292:1;3286:2;3274:4;3280:1;3268:14;;;;;;;;:::i;:::-;;;;;3262:26;;;3268:14;;3262:26;:::i;:::-;3261:32;;;3225:68;3221:116;;;-1:-1:-1;3317:1:14;;;;-1:-1:-1;3074:375:14;-1:-1:-1;;3074:375:14:o;3221:116::-;3414:1;3410;3395:4;3389:18;:22;;;;:::i;:::-;:26;;;;:::i;:::-;3384:32;;:2;:32;:::i;:::-;3378:2;3366:4;3372:1;3360:14;;;;;;;;:::i;:::-;;;;;3354:26;;;3360:14;;3354:26;:::i;:::-;3353:63;;;;;;:::i;:::-;3346:70;;;;:::i;:::-;;-1:-1:-1;3206:3:14;;;;:::i;:::-;;;;3162:261;;;-1:-1:-1;3436:3:14;;3441:4;;-1:-1:-1;3074:375:14;-1:-1:-1;3074:375:14:o;1850:283:3:-;1992:24;;:::i;:::-;2024:28;;:::i;:::-;2065:63;:3;2080:6;2088:12;2102:25;2065:14;:63::i;:::-;2058:70;1850:283;-1:-1:-1;;;;;1850:283:3:o;1951:175:2:-;2061:8;;;;:26;;2083:3;2061:21;:26::i;:::-;2093:8;;;;:28;;2115:5;2093:21;:28::i;:::-;1951:175;;;:::o;3687:756:3:-;3864:14;;3823:17;;3901:9;3864:14;3909:1;3901:9;:::i;:::-;3884:14;:26;4245:6;;4280:22;;;;;4350:7;;;;:11;3946:421;;3916:27;;-1:-1:-1;;;3976:48:3;3946:421;;3916:27;;;;4245:6;4267:4;;4280:22;4310:5;;837:1;;3946:421;;;:::i;:::-;;;;-1:-1:-1;;3946:421:3;;;;;;;;;;;;;;-1:-1:-1;;;;;3946:421:3;-1:-1:-1;;;;;;3946:421:3;;;;;;;;;;;-1:-1:-1;4380:58:3;4392:13;4407:5;4414:7;3946:421;4380:11;:58::i;:::-;4373:65;3687:756;-1:-1:-1;;;;;;3687:756:3:o;987:351:2:-;1129:24;;:::i;:::-;1161:49;1182:4;:8;;;361:3;1161:20;:49::i;:::-;-1:-1:-1;;1216:15:2;;;-1:-1:-1;;;;;1237:35:2;;:20;;;:35;-1:-1:-1;;;;;;1278:38:2;;:23;;;:38;1216:4;987:351;;;;;;;:::o;2777:204:12:-;2875:71;2894:3;383:1;2931:5;2925:19;2875:18;:71::i;:::-;2952:24;:3;2969:5;2952:10;:24::i;6629:430:3:-;6818:29;;-1:-1:-1;;6835:4:3;7162:2:16;7158:15;7154:53;6818:29:3;;;7142:66:16;7224:12;;;7217:28;;;6771:17:3;;7261:12:16;;6818:29:3;;;;;;-1:-1:-1;;6818:29:3;;;;;;6808:40;;6818:29;6808:40;;;;6854:28;;;;:17;:28;;;;;;:44;;-1:-1:-1;;;;;;6854:44:3;-1:-1:-1;;;;;6854:44:3;;;;;6808:40;;-1:-1:-1;6808:40:3;;6909:29;;6854:28;6909:29;6952:6;;:62;;-1:-1:-1;;;6952:62:3;;-1:-1:-1;;;;;6952:6:3;;;;:22;;:62;;6975:13;;6990:7;;6999:14;;6952:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6944:110;;;;-1:-1:-1;;;6944:110:3;;8159:2:16;6944:110:3;;;8141:21:16;8198:2;8178:18;;;8171:30;8237:34;8217:18;;;8210:62;-1:-1:-1;;;8288:18:16;;;8281:33;8331:19;;6944:110:3;7957:399:16;1001::11;-1:-1:-1;;;;;;;;;;;;;;;;;1100:13:11;1111:2;1100:8;:13;:::i;:::-;:18;1096:71;;1146:13;1157:2;1146:8;:13;:::i;:::-;1140:20;;:2;:20;:::i;:::-;1128:32;;;;:::i;:::-;;;1096:71;-1:-1:-1;1214:12:11;;;;:23;;;1277:4;1271:11;;1289:16;;;-1:-1:-1;1312:14:11;;1354:18;;;1346:27;1333:41;;1214:12;1001:399::o;682:625:12:-;803:2;794:5;:11;;;791:512;;815:44;:3;837:20;847:1;838:10;;;837:20;;;815:15;:44::i;:::-;;1951:175:2;;;:::o;791:512:12:-;885:4;876:5;:13;;;872:431;;899:41;:3;936:2;922:10;931:1;922:10;;;;921:17;899:15;:41::i;:::-;-1:-1:-1;948:23:12;:3;:23;;;969:1;948:13;:23::i;872:431::-;997:6;988:5;:15;;;984:319;;1013:41;:3;1050:2;1036:10;1045:1;1036:10;;;;1035:17;1013:15;:41::i;:::-;-1:-1:-1;1062:23:12;:3;:23;;;1083:1;1062:13;:23::i;984:319::-;1111:10;1102:5;:19;;;1098:205;;1131:41;:3;1168:2;1154:10;1163:1;1154:10;;;;1153:17;1131:15;:41::i;:::-;-1:-1:-1;1180:23:12;:3;:23;;;1201:1;1180:13;:23::i;1098:205::-;1224:41;:3;1261:2;1247:10;1256:1;1247:10;;;;1246:17;1224:15;:41::i;:::-;-1:-1:-1;1273:23:12;:3;:23;;;1294:1;1273:13;:23::i;4692:155:11:-;-1:-1:-1;;;;;;;;;;;;;;;;;4797:45:11;4803:3;4808;:7;;;:14;4824:4;4830;:11;4797:5;:45::i;6040:145::-;-1:-1:-1;;;;;;;;;;;;;;;;;6143:37:11;6154:3;6159;:7;;;:14;6175:4;6143:10;:37::i;9894:177::-;-1:-1:-1;;;;;;;;;;;;;;;;;10026:40:11;10035:3;10040;:7;;;:14;10056:4;10062:3;10026:8;:40::i;2745:1210::-;-1:-1:-1;;;;;;;;;;;;;;;;;2903:4:11;:11;2896:3;:18;;2888:27;;;;;;2938:12;;;;2926:9;2932:3;2926;:9;:::i;:::-;:24;2922:90;;;2960:45;2967:3;2972:28;2976:3;:12;;;2996:3;2990;:9;;;;:::i;:::-;2972:3;:28::i;:::-;:32;;3003:1;2972:32;:::i;:::-;2960:6;:45::i;:::-;3018:12;3036:11;3133:3;3127:10;3204:6;3198:13;3320:3;3315:2;3307:6;3303:15;3299:25;3291:33;;3404:6;3398:3;3393;3389:13;3386:25;3383:76;;;3446:3;3441;3437:13;3429:6;3422:29;3383:76;-1:-1:-1;;;3483:2:11;3473:13;;3544:129;3558:2;3551:3;:9;3544:129;;3613:10;;3600:24;;3639:10;3647:2;3607:4;3639:10;:::i;:::-;;-1:-1:-1;3657:9:11;3664:2;3657:9;;:::i;:::-;;-1:-1:-1;3562:9:11;3569:2;3562:9;;:::i;:::-;;;3544:129;;;3807:10;3858:11;;-1:-1:-1;;3747:2:11;:8;;;3741:3;:15;3740:21;3854:22;;;3819:9;;3803:26;;;;3898:21;3885:35;;-1:-1:-1;3947:3:11;2745:1210;;;;;;:::o;5148:639::-;-1:-1:-1;;;;;;;;;;;;;;;;;5283:3:11;:12;;;5276:3;:19;5272:69;;5305:29;5312:3;5317;:12;;;5332:1;5317:16;;;;:::i;5305:29::-;5427:3;5421:10;5498:6;5492:13;5610:2;5604:3;5596:6;5592:16;5588:25;5634:4;5628;5620:19;;5705:6;5700:3;5697:15;5694:67;;5750:1;5742:6;5738:14;5730:6;5723:30;5694:67;-1:-1:-1;5779:3:11;;5148:639;-1:-1:-1;;;;5148:639:11:o;8974:675::-;-1:-1:-1;;;;;;;;;;;;;;;;;9130:12:11;;;;9118:9;9124:3;9118;:9;:::i;:::-;:24;9114:73;;;9152:28;9159:3;9165:9;9171:3;9165;:9;:::i;9152:28::-;9193:12;9221:1;9209:8;9214:3;9209;:8;:::i;:::-;9208:14;;;;:::i;:::-;9193:29;;9308:3;9302:10;9423:3;9417;9409:6;9405:16;9401:26;9479:4;9471;9467:9;9460:4;9454:11;9450:27;9447:37;9441:4;9434:51;;9567:6;9561:13;9555:3;9550;9546:13;9543:32;9540:83;;;9610:3;9605;9601:13;9593:6;9586:29;9540:83;-1:-1:-1;9641:3:11;;8974:675;-1:-1:-1;;;;;8974:675:11:o;1961:124::-;2018:7;2041:1;2037;:5;2033:34;;;-1:-1:-1;2059:1:11;2052:8;;2033:34;-1:-1:-1;2079:1:11;1961:124;-1:-1:-1;1961:124:11:o;1801:156::-;1895:7;;1908:19;1895:3;1918:8;1908:4;:19::i;:::-;;1933;1940:3;1945:6;1933;:19::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:248:16:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:16;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:16:o;267:468::-;334:6;342;395:2;383:9;374:7;370:23;366:32;363:52;;;411:1;408;401:12;363:52;437:23;;-1:-1:-1;;;;;489:31:16;;479:42;;469:70;;535:1;532;525:12;469:70;558:5;-1:-1:-1;615:2:16;600:18;;587:32;-1:-1:-1;;;;;;650:34:16;;638:47;;628:75;;699:1;696;689:12;628:75;722:7;712:17;;;267:468;;;;;:::o;922:180::-;981:6;1034:2;1022:9;1013:7;1009:23;1005:32;1002:52;;;1050:1;1047;1040:12;1002:52;-1:-1:-1;1073:23:16;;922:180;-1:-1:-1;922:180:16:o;1107:472::-;1149:3;1187:5;1181:12;1214:6;1209:3;1202:19;1239:1;1249:162;1263:6;1260:1;1257:13;1249:162;;;1325:4;1381:13;;;1377:22;;1371:29;1353:11;;;1349:20;;1342:59;1278:12;1249:162;;;1429:6;1426:1;1423:13;1420:87;;;1495:1;1488:4;1479:6;1474:3;1470:16;1466:27;1459:38;1420:87;-1:-1:-1;1561:2:16;1540:15;-1:-1:-1;;1536:29:16;1527:39;;;;1568:4;1523:50;;1107:472;-1:-1:-1;;1107:472:16:o;1584:220::-;1733:2;1722:9;1715:21;1696:4;1753:45;1794:2;1783:9;1779:18;1771:6;1753:45;:::i;1809:127::-;1870:10;1865:3;1861:20;1858:1;1851:31;1901:4;1898:1;1891:15;1925:4;1922:1;1915:15;1941:922;2010:6;2063:2;2051:9;2042:7;2038:23;2034:32;2031:52;;;2079:1;2076;2069:12;2031:52;2119:9;2106:23;2148:18;2189:2;2181:6;2178:14;2175:34;;;2205:1;2202;2195:12;2175:34;2243:6;2232:9;2228:22;2218:32;;2288:7;2281:4;2277:2;2273:13;2269:27;2259:55;;2310:1;2307;2300:12;2259:55;2346:2;2333:16;2368:2;2364;2361:10;2358:36;;;2374:18;;:::i;:::-;2449:2;2443:9;2417:2;2503:13;;-1:-1:-1;;2499:22:16;;;2523:2;2495:31;2491:40;2479:53;;;2547:18;;;2567:22;;;2544:46;2541:72;;;2593:18;;:::i;:::-;2633:10;2629:2;2622:22;2668:2;2660:6;2653:18;2708:7;2703:2;2698;2694;2690:11;2686:20;2683:33;2680:53;;;2729:1;2726;2719:12;2680:53;2785:2;2780;2776;2772:11;2767:2;2759:6;2755:15;2742:46;2830:1;2808:15;;;2825:2;2804:24;2797:35;;;;-1:-1:-1;2812:6:16;1941:922;-1:-1:-1;;;;;1941:922:16:o;3540:127::-;3601:10;3596:3;3592:20;3589:1;3582:31;3632:4;3629:1;3622:15;3656:4;3653:1;3646:15;3672:127;3733:10;3728:3;3724:20;3721:1;3714:31;3764:4;3761:1;3754:15;3788:4;3785:1;3778:15;3804:175;3841:3;3885:4;3878:5;3874:16;3914:4;3905:7;3902:17;3899:43;;3922:18;;:::i;:::-;3971:1;3958:15;;3804:175;-1:-1:-1;;3804:175:16:o;3984:195::-;4022:4;4059;4056:1;4052:12;4091:4;4088:1;4084:12;4116:3;4111;4108:12;4105:38;;;4123:18;;:::i;:::-;4160:13;;;3984:195;-1:-1:-1;;;3984:195:16:o;4184:125::-;4224:4;4252:1;4249;4246:8;4243:34;;;4257:18;;:::i;:::-;-1:-1:-1;4294:9:16;;4184:125::o;4314:422::-;4403:1;4446:5;4403:1;4460:270;4481:7;4471:8;4468:21;4460:270;;;4540:4;4536:1;4532:6;4528:17;4522:4;4519:27;4516:53;;;4549:18;;:::i;:::-;4599:7;4589:8;4585:22;4582:55;;;4619:16;;;;4582:55;4698:22;;;;4658:15;;;;4460:270;;;4464:3;4314:422;;;;;:::o;4741:806::-;4790:5;4820:8;4810:80;;-1:-1:-1;4861:1:16;4875:5;;4810:80;4909:4;4899:76;;-1:-1:-1;4946:1:16;4960:5;;4899:76;4991:4;5009:1;5004:59;;;;5077:1;5072:130;;;;4984:218;;5004:59;5034:1;5025:10;;5048:5;;;5072:130;5109:3;5099:8;5096:17;5093:43;;;5116:18;;:::i;:::-;-1:-1:-1;;5172:1:16;5158:16;;5187:5;;4984:218;;5286:2;5276:8;5273:16;5267:3;5261:4;5258:13;5254:36;5248:2;5238:8;5235:16;5230:2;5224:4;5221:12;5217:35;5214:77;5211:159;;;-1:-1:-1;5323:19:16;;;5355:5;;5211:159;5402:34;5427:8;5421:4;5402:34;:::i;:::-;5472:6;5468:1;5464:6;5460:19;5451:7;5448:32;5445:58;;;5483:18;;:::i;:::-;5521:20;;4741:806;-1:-1:-1;;;4741:806:16:o;5552:131::-;5612:5;5641:36;5668:8;5662:4;5641:36;:::i;5688:168::-;5728:7;5794:1;5790;5786:6;5782:14;5779:1;5776:21;5771:1;5764:9;5757:17;5753:45;5750:71;;;5801:18;;:::i;:::-;-1:-1:-1;5841:9:16;;5688:168::o;5861:128::-;5901:3;5932:1;5928:6;5925:1;5922:13;5919:39;;;5938:18;;:::i;:::-;-1:-1:-1;5974:9:16;;5861:128::o;5994:135::-;6033:3;6054:17;;;6051:43;;6074:18;;:::i;:::-;-1:-1:-1;6121:1:16;6110:13;;5994:135::o;6134:822::-;-1:-1:-1;;;;;6535:15:16;;;6517:34;;6582:2;6567:18;;6560:34;;;6625:2;6610:18;;6603:34;;;6673:15;;6668:2;6653:18;;6646:43;-1:-1:-1;;;;;;6726:33:16;;6720:3;6705:19;;6698:62;6497:3;6776:19;;6769:35;;;6835:3;6820:19;;6813:35;;;6467:3;6742;6864:19;;6857:31;;;6438:4;;6905:45;6931:18;;;6923:6;6905:45;:::i;:::-;6897:53;6134:822;-1:-1:-1;;;;;;;;;;;6134:822:16:o;7284:386::-;7516:1;7512;7507:3;7503:11;7499:19;7491:6;7487:32;7476:9;7469:51;7556:6;7551:2;7540:9;7536:18;7529:34;7599:2;7594;7583:9;7579:18;7572:30;7450:4;7619:45;7660:2;7649:9;7645:18;7637:6;7619:45;:::i;7675:277::-;7742:6;7795:2;7783:9;7774:7;7770:23;7766:32;7763:52;;;7811:1;7808;7801:12;7763:52;7843:9;7837:16;7896:5;7889:13;7882:21;7875:5;7872:32;7862:60;;7918:1;7915;7908:12;8361:209;8393:1;8419;8409:132;;8463:10;8458:3;8454:20;8451:1;8444:31;8498:4;8495:1;8488:15;8526:4;8523:1;8516:15;8409:132;-1:-1:-1;8555:9:16;;8361:209::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "notice": "Network: Kovan Oracle: 0xc57B33452b4F7BB189bB5AfaE9cc4aBa1f7a4FD8 (Chainlink Devrel    Node) Job ID: d5270d1c311941d0b08bead21fea7747 Fee: 0.1 LINK"
      },
      "fulfill(bytes32,bytes32)": {
        "notice": "Receive the response in the form of uint256"
      },
      "requestData(address,bytes4)": {
        "notice": "Create a Chainlink request to retrieve API response, find the target data, then multiply by 1000000000000000000 (to remove decimal places from data)."
      }
    },
    "notice": "THIS IS AN EXAMPLE CONTRACT WHICH USES HARDCODED VALUES FOR CLARITY. PLEASE DO NOT USE THIS CODE IN PRODUCTION.",
    "version": 1
  },
  "offset": [
    460,
    3570
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42F2B65 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x65FF1329 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x9201DE55 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xC5EF3EC5 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xDD151EC7 EQ PUSH2 0xDF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0xE8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x84 PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0xB84 JUMP JUMPDEST PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD6 JUMP JUMPDEST PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0xCA PUSH2 0xC5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC65 JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0x84 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x166 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F75726365206D75737420626520746865206F7261636C65206F6620746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x81C995C5D595CDD PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP3 SWAP2 PUSH32 0x7CC135E0CEBB02C3480AE5D74D377283180A2601F8F644EDF7987B009316C63A SWAP2 LOG2 POP PUSH1 0x6 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C0 PUSH1 0x8 SLOAD DUP6 DUP6 PUSH2 0x4B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x202 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x19D95D PUSH1 0xEA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFAF PUSH1 0x43 SWAP2 CODECOPY DUP4 SWAP2 SWAP1 PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0xE0C2E8D PUSH1 0xE3 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0xE4CAC2D8DABED2DCC8CAF PUSH1 0xAB SHL DUP2 MSTORE POP DUP4 PUSH2 0x4D6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD PUSH2 0x271 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 SWAP1 PUSH2 0x4F9 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x2B4 JUMPI POP DUP3 DUP2 PUSH1 0xFF AND PUSH1 0x20 DUP2 LT PUSH2 0x2A3 JUMPI PUSH2 0x2A3 PUSH2 0xD16 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2CB JUMPI DUP1 PUSH2 0x2C3 DUP2 PUSH2 0xD42 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x280 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E9 JUMPI PUSH2 0x2E9 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x34F JUMPI POP DUP4 DUP3 PUSH1 0xFF AND PUSH1 0x20 DUP2 LT PUSH2 0x33E JUMPI PUSH2 0x33E PUSH2 0xD16 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x3AB JUMPI DUP4 DUP3 PUSH1 0xFF AND PUSH1 0x20 DUP2 LT PUSH2 0x369 JUMPI PUSH2 0x369 PUSH2 0xD16 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP2 DUP4 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x382 JUMPI PUSH2 0x382 PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP2 PUSH2 0x3A3 DUP2 PUSH2 0xD42 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x31B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 PUSH1 0x30 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3D7 JUMPI PUSH2 0x3D7 PUSH2 0xD16 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH2 0x3E9 SWAP2 SWAP1 PUSH1 0xF8 SHR PUSH2 0xD61 JUMP JUMPDEST PUSH1 0xFF AND LT DUP1 PUSH2 0x420 JUMPI POP PUSH1 0x9 PUSH1 0x30 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x409 JUMPI PUSH2 0x409 PUSH2 0xD16 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH2 0x41B SWAP2 SWAP1 PUSH1 0xF8 SHR PUSH2 0xD61 JUMP JUMPDEST PUSH1 0xFF AND GT JUMPDEST ISZERO PUSH2 0x431 JUMPI POP PUSH1 0x0 SWAP4 DUP5 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP6 MLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x44A SWAP2 SWAP1 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x455 SWAP1 PUSH1 0xA PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x30 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x469 JUMPI PUSH2 0x469 PUSH2 0xD16 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH2 0x47B SWAP2 SWAP1 PUSH1 0xF8 SHR PUSH2 0xD61 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x488 SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x492 SWAP1 DUP5 PUSH2 0xEAA JUMP JUMPDEST SWAP3 POP DUP1 PUSH2 0x49E DUP2 PUSH2 0xEC2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3B8 JUMP JUMPDEST POP SWAP1 SWAP3 PUSH1 0x1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH2 0x4B9 PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x4C1 PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x4CD DUP2 DUP7 DUP7 DUP7 PUSH2 0x58C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x4E5 SWAP1 DUP4 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x4F4 SWAP1 DUP3 PUSH2 0x5D2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x50A DUP2 PUSH1 0x1 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x4 SSTORE DUP4 MLOAD PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0x80 DUP8 ADD MLOAD MLOAD SWAP2 MLOAD PUSH1 0x0 SWAP4 PUSH4 0x20214CA3 PUSH1 0xE1 SHL SWAP4 PUSH2 0x542 SWAP4 DUP7 SWAP4 DUP5 SWAP4 SWAP3 ADDRESS SWAP3 SWAP2 DUP11 SWAP2 PUSH1 0x1 SWAP2 PUSH1 0x24 ADD PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP PUSH2 0x582 DUP7 DUP4 DUP7 DUP5 PUSH2 0x5E9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x594 PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x5A4 DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0x100 PUSH2 0x747 JUMP JUMPDEST POP POP DUP3 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x40 DUP6 ADD MSTORE DUP4 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x5DF DUP3 PUSH1 0x3 DUP4 MLOAD PUSH2 0x7AC JUMP JUMPDEST PUSH2 0x4F4 DUP3 DUP3 PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT ADDRESS PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP2 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND OR SWAP1 SSTORE SWAP1 SWAP3 POP DUP3 SWAP2 PUSH32 0xB5E6E01E79F91267DC17B4E6314D5D4D03593D2CEEE0FBB452B750BD70EA5AF9 SWAP2 SWAP1 LOG2 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2000575 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x4000AEA0 SWAP1 PUSH2 0x6AC SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x756E61626C6520746F207472616E73666572416E6443616C6C20746F206F7261 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x636C65 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x767 PUSH1 0x20 DUP4 PUSH2 0xF8C JUMP JUMPDEST ISZERO PUSH2 0x78F JUMPI PUSH2 0x777 PUSH1 0x20 DUP4 PUSH2 0xF8C JUMP JUMPDEST PUSH2 0x782 SWAP1 PUSH1 0x20 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x78C SWAP1 DUP4 PUSH2 0xEAA JUMP JUMPDEST SWAP2 POP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 SWAP3 ADD ADD SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x17 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x7D7 JUMPI PUSH2 0x7D1 DUP4 PUSH1 0xE0 PUSH1 0x5 DUP6 SWAP1 SHL AND DUP4 OR PUSH2 0x8E8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x815 JUMPI PUSH2 0x7FE DUP4 PUSH1 0x18 PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x8E8 JUMP JUMPDEST POP PUSH2 0x7D1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x1 PUSH2 0x90D JUMP JUMPDEST PUSH2 0xFFFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x854 JUMPI PUSH2 0x83D DUP4 PUSH1 0x19 PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x8E8 JUMP JUMPDEST POP PUSH2 0x7D1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x2 PUSH2 0x90D JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x895 JUMPI PUSH2 0x87E DUP4 PUSH1 0x1A PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x8E8 JUMP JUMPDEST POP PUSH2 0x7D1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x4 PUSH2 0x90D JUMP JUMPDEST PUSH2 0x8AA DUP4 PUSH1 0x1B PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x8E8 JUMP JUMPDEST POP PUSH2 0x7D1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x8 PUSH2 0x90D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3AB DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0x933 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3AB DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x5CA DUP5 DUP6 PUSH1 0x0 ADD MLOAD MLOAD DUP6 DUP6 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 MLOAD DUP3 GT ISZERO PUSH2 0x956 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x965 DUP4 DUP7 PUSH2 0xEAA JUMP JUMPDEST GT ISZERO PUSH2 0x998 JUMPI PUSH2 0x998 DUP6 PUSH2 0x988 DUP8 PUSH1 0x20 ADD MLOAD DUP8 DUP7 PUSH2 0x983 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x993 SWAP1 PUSH1 0x2 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 MLOAD DUP1 MLOAD DUP8 PUSH1 0x20 DUP4 ADD ADD SWAP4 POP DUP1 DUP9 DUP8 ADD GT ISZERO PUSH2 0x9B7 JUMPI DUP8 DUP7 ADD DUP3 MSTORE JUMPDEST POP POP POP PUSH1 0x20 DUP5 ADD JUMPDEST PUSH1 0x20 DUP5 LT PUSH2 0x9F7 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH2 0x9D6 PUSH1 0x20 DUP4 PUSH2 0xEAA JUMP JUMPDEST SWAP2 POP PUSH2 0x9E3 PUSH1 0x20 DUP3 PUSH2 0xEAA JUMP JUMPDEST SWAP1 POP PUSH2 0x9F0 PUSH1 0x20 DUP6 PUSH2 0xD84 JUMP JUMPDEST SWAP4 POP PUSH2 0x9BF JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x0 NOT PUSH1 0x20 DUP7 SWAP1 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 AND SWAP1 NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 MSTORE POP DUP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x20 ADD MLOAD DUP4 LT PUSH2 0xA52 JUMPI PUSH2 0xA52 DUP5 DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x2 PUSH2 0x993 SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST DUP4 MLOAD DUP1 MLOAD PUSH1 0x20 DUP6 DUP4 ADD ADD DUP5 DUP2 MSTORE8 POP DUP1 DUP6 SUB PUSH2 0xA6E JUMPI PUSH1 0x1 DUP2 ADD DUP3 MSTORE JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0xA9C DUP6 DUP5 PUSH2 0xEAA JUMP JUMPDEST GT ISZERO PUSH2 0xAB0 JUMPI PUSH2 0xAB0 DUP6 PUSH2 0x988 DUP7 DUP6 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0xAC0 DUP5 PUSH2 0x100 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0xACA SWAP2 SWAP1 PUSH2 0xD84 JUMP JUMPDEST SWAP1 POP DUP6 MLOAD DUP4 DUP7 DUP3 ADD ADD DUP6 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE POP DUP1 MLOAD DUP5 DUP8 ADD GT ISZERO PUSH2 0xAEE JUMPI DUP4 DUP7 ADD DUP2 MSTORE JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0xB0A JUMPI POP DUP2 PUSH2 0x275 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0xB1C DUP4 DUP4 PUSH2 0x747 JUMP JUMPDEST POP PUSH2 0x7D1 DUP4 DUP3 PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE DUP5 MSTORE DUP4 ADD MSTORE SWAP1 PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xBCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC15 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBF9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC27 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3AB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBEF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xCB5 JUMPI PUSH2 0xCB5 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xCDD JUMPI PUSH2 0xCDD PUSH2 0xC4F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xCF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0xD58 JUMPI PUSH2 0xD58 PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 DUP3 LT ISZERO PUSH2 0xD7B JUMPI PUSH2 0xD7B PUSH2 0xD2C JUMP JUMPDEST SWAP1 SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD96 JUMPI PUSH2 0xD96 PUSH2 0xD2C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xDD6 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xDBC JUMPI PUSH2 0xDBC PUSH2 0xD2C JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xDC9 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xDA0 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDED JUMPI POP PUSH1 0x1 PUSH2 0x275 JUMP JUMPDEST DUP2 PUSH2 0xDFA JUMPI POP PUSH1 0x0 PUSH2 0x275 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xE10 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xE1A JUMPI PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x275 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xE2B JUMPI PUSH2 0xE2B PUSH2 0xD2C JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x275 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xE59 JUMPI POP DUP2 DUP2 EXP PUSH2 0x275 JUMP JUMPDEST PUSH2 0xE63 DUP4 DUP4 PUSH2 0xD9B JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xE77 JUMPI PUSH2 0xE77 PUSH2 0xD2C JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AB DUP4 DUP4 PUSH2 0xDDE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xEA5 JUMPI PUSH2 0xEA5 PUSH2 0xD2C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xEBD JUMPI PUSH2 0xEBD PUSH2 0xD2C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xED4 JUMPI PUSH2 0xED4 PUSH2 0xD2C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP9 SWAP1 MSTORE DUP7 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP4 SWAP1 MSTORE PUSH2 0x100 PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xF34 DUP4 DUP3 ADD DUP6 PUSH2 0xBEF JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4CD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xBEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFA9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP INVALID PUSH9 0x747470733A2F2F6665 PUSH9 0x2D726573706C656E64 PUSH6 0x6E742E686572 PUSH16 0x6B756170702E636F6D2F636861726163 PUSH21 0x6572732F6C61746573743F666F726D61743D6A736F PUSH15 0xA26469706673582212209C44965320 PUSH10 0xCB69F7E51AF252978C2C ADDMOD LOG3 ORIGIN 0xE3 ISZERO DUP5 0x24 0xF9 MSTORE 0x4B 0x27 0x4C BLOCKHASH COINBASE 0x4A 0x4D PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        460,
        3570
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "12": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "DUP1",
      "path": "14"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "REVERT",
      "path": "14"
    },
    "16": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "17": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "POP",
      "path": "14"
    },
    "18": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "21": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "LT",
      "path": "14"
    },
    "22": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "26": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "29": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "SHR",
      "path": "14"
    },
    "32": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "DUP1",
      "path": "14"
    },
    "33": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x42F2B65"
    },
    "38": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "EQ",
      "path": "14"
    },
    "39": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "43": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "DUP1",
      "path": "14"
    },
    "44": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x65FF1329"
    },
    "49": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "EQ",
      "path": "14"
    },
    "50": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "54": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "DUP1",
      "path": "14"
    },
    "55": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x9201DE55"
    },
    "60": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "EQ",
      "path": "14"
    },
    "61": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x97"
    },
    "64": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "65": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "DUP1",
      "path": "14"
    },
    "66": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC5EF3EC5"
    },
    "71": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "EQ",
      "path": "14"
    },
    "72": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB7"
    },
    "75": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "76": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "DUP1",
      "path": "14"
    },
    "77": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDD151EC7"
    },
    "82": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "EQ",
      "path": "14"
    },
    "83": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDF"
    },
    "86": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "87": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "88": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "DUP1",
      "path": "14"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        460,
        3570
      ],
      "op": "REVERT",
      "path": "14"
    },
    "92": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2552,
        2695
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "93": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2552,
        2695
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6F"
    },
    "96": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2552,
        2695
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6A"
    },
    "99": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2552,
        2695
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "100": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2552,
        2695
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "102": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2552,
        2695
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB62"
    },
    "105": {
      "fn": "APIConsumer.fulfill",
      "jump": "i",
      "offset": [
        2552,
        2695
      ],
      "op": "JUMP",
      "path": "14"
    },
    "106": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2552,
        2695
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "107": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2552,
        2695
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE8"
    },
    "110": {
      "fn": "APIConsumer.fulfill",
      "jump": "i",
      "offset": [
        2552,
        2695
      ],
      "op": "JUMP",
      "path": "14"
    },
    "111": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2552,
        2695
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "112": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2552,
        2695
      ],
      "op": "STOP",
      "path": "14"
    },
    "113": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "114": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x84"
    },
    "117": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7F"
    },
    "120": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "121": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "123": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB84"
    },
    "126": {
      "fn": "APIConsumer.requestData",
      "jump": "i",
      "offset": [
        1329,
        2474
      ],
      "op": "JUMP",
      "path": "14"
    },
    "127": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "128": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B0"
    },
    "131": {
      "fn": "APIConsumer.requestData",
      "jump": "i",
      "offset": [
        1329,
        2474
      ],
      "op": "JUMP",
      "path": "14"
    },
    "132": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "133": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "135": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "136": {
      "op": "SWAP1"
    },
    "137": {
      "op": "DUP2"
    },
    "138": {
      "op": "MSTORE"
    },
    "139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "141": {
      "op": "ADD"
    },
    "142": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "143": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "145": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "146": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "DUP1",
      "path": "14"
    },
    "147": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "148": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "SUB",
      "path": "14"
    },
    "149": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "150": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "RETURN",
      "path": "14"
    },
    "151": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2701,
        3068
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "152": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2701,
        3068
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAA"
    },
    "155": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2701,
        3068
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA5"
    },
    "158": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2701,
        3068
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "159": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2701,
        3068
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "161": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2701,
        3068
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBD6"
    },
    "164": {
      "fn": "APIConsumer.bytes32ToString",
      "jump": "i",
      "offset": [
        2701,
        3068
      ],
      "op": "JUMP",
      "path": "14"
    },
    "165": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2701,
        3068
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "166": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2701,
        3068
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x27B"
    },
    "169": {
      "fn": "APIConsumer.bytes32ToString",
      "jump": "i",
      "offset": [
        2701,
        3068
      ],
      "op": "JUMP",
      "path": "14"
    },
    "170": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2701,
        3068
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "171": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2701,
        3068
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "173": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2701,
        3068
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "174": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2701,
        3068
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8E"
    },
    "177": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2701,
        3068
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "178": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2701,
        3068
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "179": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2701,
        3068
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC3C"
    },
    "182": {
      "fn": "APIConsumer.bytes32ToString",
      "jump": "i",
      "offset": [
        2701,
        3068
      ],
      "op": "JUMP",
      "path": "14"
    },
    "183": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3074,
        3449
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "184": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3074,
        3449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCA"
    },
    "187": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3074,
        3449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC5"
    },
    "190": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3074,
        3449
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "191": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3074,
        3449
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "193": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3074,
        3449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC65"
    },
    "196": {
      "fn": "APIConsumer.strToUint",
      "jump": "i",
      "offset": [
        3074,
        3449
      ],
      "op": "JUMP",
      "path": "14"
    },
    "197": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3074,
        3449
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "198": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3074,
        3449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3B2"
    },
    "201": {
      "fn": "APIConsumer.strToUint",
      "jump": "i",
      "offset": [
        3074,
        3449
      ],
      "op": "JUMP",
      "path": "14"
    },
    "202": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3074,
        3449
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "203": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3074,
        3449
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "205": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3074,
        3449
      ],
      "op": "DUP1",
      "path": "14"
    },
    "206": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3074,
        3449
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "207": {
      "op": "SWAP3"
    },
    "208": {
      "op": "DUP4"
    },
    "209": {
      "op": "MSTORE"
    },
    "210": {
      "op": "SWAP1"
    },
    "211": {
      "op": "ISZERO"
    },
    "212": {
      "op": "ISZERO"
    },
    "213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "215": {
      "op": "DUP4"
    },
    "216": {
      "op": "ADD"
    },
    "217": {
      "op": "MSTORE"
    },
    "218": {
      "op": "ADD"
    },
    "219": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3074,
        3449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8E"
    },
    "222": {
      "op": "JUMP"
    },
    "223": {
      "offset": [
        552,
        575
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "224": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        552,
        575
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x84"
    },
    "227": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        552,
        575
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "229": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        552,
        575
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "230": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        552,
        575
      ],
      "op": "DUP2",
      "path": "14"
    },
    "231": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        552,
        575
      ],
      "op": "JUMP",
      "path": "14"
    },
    "232": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2552,
        2695
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "233": {
      "offset": [
        11663,
        11691
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "235": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "DUP3",
      "path": "3"
    },
    "236": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "DUP2",
      "path": "3"
    },
    "237": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "238": {
      "offset": [
        11663,
        11680
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "240": {
      "offset": [
        11663,
        11691
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "242": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "243": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "245": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "246": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "247": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "248": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "DUP3",
      "path": "3"
    },
    "249": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "256": {
      "op": "SHL"
    },
    "257": {
      "op": "SUB"
    },
    "258": {
      "offset": [
        11663,
        11691
      ],
      "op": "AND",
      "path": "3"
    },
    "259": {
      "offset": [
        11649,
        11659
      ],
      "op": "CALLER",
      "path": "3"
    },
    "260": {
      "offset": [
        11649,
        11691
      ],
      "op": "EQ",
      "path": "3"
    },
    "261": {
      "offset": [
        11641,
        11736
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x166"
    },
    "264": {
      "offset": [
        11641,
        11736
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "265": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "267": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "268": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "272": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "274": {
      "op": "SHL"
    },
    "275": {
      "offset": [
        11641,
        11736
      ],
      "op": "DUP2",
      "path": "3"
    },
    "276": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "279": {
      "offset": [
        11641,
        11736
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "281": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "DUP3",
      "path": "3"
    },
    "282": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "ADD",
      "path": "3"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "288": {
      "op": "DUP3"
    },
    "289": {
      "op": "ADD"
    },
    "290": {
      "op": "MSTORE"
    },
    "291": {
      "op": "PUSH32",
      "value": "0x536F75726365206D75737420626520746865206F7261636C65206F6620746865"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "326": {
      "op": "DUP3"
    },
    "327": {
      "op": "ADD"
    },
    "328": {
      "op": "MSTORE"
    },
    "329": {
      "op": "PUSH8",
      "value": "0x81C995C5D595CDD"
    },
    "338": {
      "op": "PUSH1",
      "value": "0xC2"
    },
    "340": {
      "op": "SHL"
    },
    "341": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "343": {
      "op": "DUP3"
    },
    "344": {
      "op": "ADD"
    },
    "345": {
      "op": "MSTORE"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "348": {
      "op": "ADD"
    },
    "349": {
      "offset": [
        11641,
        11736
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "350": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "352": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "353": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "DUP1",
      "path": "3"
    },
    "354": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "355": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "SUB",
      "path": "3"
    },
    "356": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "357": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "358": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "359": {
      "offset": [
        11749,
        11777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "361": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11749,
        11777
      ],
      "op": "DUP2",
      "path": "3"
    },
    "362": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11749,
        11777
      ],
      "op": "DUP2",
      "path": "3"
    },
    "363": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11749,
        11777
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "364": {
      "offset": [
        11749,
        11766
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "366": {
      "offset": [
        11749,
        11777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "368": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11749,
        11777
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "369": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11749,
        11777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "371": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11749,
        11777
      ],
      "op": "DUP1",
      "path": "3"
    },
    "372": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11749,
        11777
      ],
      "op": "DUP3",
      "path": "3"
    },
    "373": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11749,
        11777
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "374": {
      "offset": [
        11742,
        11777
      ],
      "op": "DUP1",
      "path": "3"
    },
    "375": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11742,
        11777
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "382": {
      "op": "SHL"
    },
    "383": {
      "op": "SUB"
    },
    "384": {
      "op": "NOT"
    },
    "385": {
      "offset": [
        11742,
        11777
      ],
      "op": "AND",
      "path": "3"
    },
    "386": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11742,
        11777
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "387": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11742,
        11777
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "388": {
      "offset": [
        11788,
        11817
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "389": {
      "offset": [
        11767,
        11776
      ],
      "op": "DUP3",
      "path": "3"
    },
    "390": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11767,
        11776
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "391": {
      "offset": [
        11788,
        11817
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x7CC135E0CEBB02C3480AE5D74D377283180A2601F8F644EDF7987B009316C63A"
    },
    "424": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11788,
        11817
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "425": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        11788,
        11817
      ],
      "op": "LOG2",
      "path": "3"
    },
    "426": {
      "op": "POP"
    },
    "427": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2668,
        2676
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 0,
      "value": "0x6"
    },
    "429": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2668,
        2688
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "430": {
      "op": "POP"
    },
    "431": {
      "fn": "APIConsumer.fulfill",
      "jump": "o",
      "offset": [
        2552,
        2695
      ],
      "op": "JUMP",
      "path": "14"
    },
    "432": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "433": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1417,
        1434
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "435": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1451,
        1483
      ],
      "op": "DUP1",
      "path": "14"
    },
    "436": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1486,
        1550
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C0"
    },
    "439": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1508,
        1513
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "441": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1508,
        1513
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "442": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1515,
        1531
      ],
      "op": "DUP6",
      "path": "14"
    },
    "443": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1533,
        1549
      ],
      "op": "DUP6",
      "path": "14"
    },
    "444": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1486,
        1507
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4B1"
    },
    "447": {
      "fn": "APIConsumer.requestData",
      "jump": "i",
      "offset": [
        1486,
        1550
      ],
      "op": "JUMP",
      "path": "14"
    },
    "448": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1486,
        1550
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "449": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1451,
        1550
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "450": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1451,
        1550
      ],
      "op": "POP",
      "path": "14"
    },
    "451": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 1,
      "value": "0x202"
    },
    "454": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "456": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "457": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "DUP1",
      "path": "14"
    },
    "458": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "460": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "ADD",
      "path": "14"
    },
    "461": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "463": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "464": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "DUP1",
      "path": "14"
    },
    "465": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "467": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "DUP2",
      "path": "14"
    },
    "468": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "469": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "471": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "ADD",
      "path": "14"
    },
    "472": {
      "op": "PUSH3",
      "value": "0x19D95D"
    },
    "476": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "478": {
      "op": "SHL"
    },
    "479": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "DUP2",
      "path": "14"
    },
    "480": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "481": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "POP",
      "path": "14"
    },
    "482": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "484": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "485": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "DUP1",
      "path": "14"
    },
    "486": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "488": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "ADD",
      "path": "14"
    },
    "489": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "491": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "492": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "DUP1",
      "path": "14"
    },
    "493": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x43"
    },
    "495": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "DUP2",
      "path": "14"
    },
    "496": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "497": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "499": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "ADD",
      "path": "14"
    },
    "500": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFAF"
    },
    "503": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x43"
    },
    "505": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "506": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "507": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1629
      ],
      "op": "DUP4",
      "path": "14"
    },
    "508": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1629
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "509": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "510": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1633
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4D6"
    },
    "513": {
      "fn": "APIConsumer.requestData",
      "jump": "i",
      "offset": [
        1622,
        1711
      ],
      "op": "JUMP",
      "path": "14"
    },
    "514": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1622,
        1711
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "515": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 2,
      "value": "0x256"
    },
    "518": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "520": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "521": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "DUP1",
      "path": "14"
    },
    "522": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "524": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "ADD",
      "path": "14"
    },
    "525": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "527": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "528": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "DUP1",
      "path": "14"
    },
    "529": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "531": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "DUP2",
      "path": "14"
    },
    "532": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "533": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "535": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "ADD",
      "path": "14"
    },
    "536": {
      "op": "PUSH4",
      "value": "0xE0C2E8D"
    },
    "541": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "543": {
      "op": "SHL"
    },
    "544": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "DUP2",
      "path": "14"
    },
    "545": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "546": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "POP",
      "path": "14"
    },
    "547": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "549": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "550": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "DUP1",
      "path": "14"
    },
    "551": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "553": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "ADD",
      "path": "14"
    },
    "554": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "556": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "557": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "DUP1",
      "path": "14"
    },
    "558": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "560": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "DUP2",
      "path": "14"
    },
    "561": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "562": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "564": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "ADD",
      "path": "14"
    },
    "565": {
      "op": "PUSH11",
      "value": "0xE4CAC2D8DABED2DCC8CAF"
    },
    "577": {
      "op": "PUSH1",
      "value": "0xAB"
    },
    "579": {
      "op": "SHL"
    },
    "580": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "DUP2",
      "path": "14"
    },
    "581": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "582": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "POP",
      "path": "14"
    },
    "583": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2175
      ],
      "op": "DUP4",
      "path": "14"
    },
    "584": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2179
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4D6"
    },
    "587": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2179
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "588": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "589": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "590": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "591": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "596": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "AND",
      "path": "14"
    },
    "597": {
      "fn": "APIConsumer.requestData",
      "jump": "i",
      "offset": [
        2168,
        2202
      ],
      "op": "JUMP",
      "path": "14"
    },
    "598": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2168,
        2202
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "599": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2446,
        2452
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 3,
      "value": "0x7"
    },
    "601": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2446,
        2452
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "602": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2463,
        2466
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "604": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2463,
        2466
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "605": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2423,
        2467
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x271"
    },
    "608": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2423,
        2467
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "SUB"
    },
    "617": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2446,
        2452
      ],
      "op": "AND",
      "path": "14"
    },
    "618": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2446,
        2452
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "619": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2454,
        2461
      ],
      "op": "DUP4",
      "path": "14"
    },
    "620": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2454,
        2461
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "621": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2423,
        2445
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4F9"
    },
    "624": {
      "fn": "APIConsumer.requestData",
      "jump": "i",
      "offset": [
        2423,
        2467
      ],
      "op": "JUMP",
      "path": "14"
    },
    "625": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2423,
        2467
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "626": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2416,
        2467
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "627": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2416,
        2467
      ],
      "op": "POP",
      "path": "14"
    },
    "628": {
      "fn": "APIConsumer.requestData",
      "offset": [
        2416,
        2467
      ],
      "op": "POP",
      "path": "14"
    },
    "629": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "630": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "631": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "632": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "POP",
      "path": "14"
    },
    "633": {
      "fn": "APIConsumer.requestData",
      "offset": [
        1329,
        2474
      ],
      "op": "POP",
      "path": "14"
    },
    "634": {
      "fn": "APIConsumer.requestData",
      "jump": "o",
      "offset": [
        1329,
        2474
      ],
      "op": "JUMP",
      "path": "14"
    },
    "635": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2701,
        3068
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "636": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2765,
        2778
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "638": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2790,
        2797
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "640": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2811,
        2873
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "641": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2821,
        2823
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "643": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2817,
        2818
      ],
      "op": "DUP2",
      "path": "14"
    },
    "644": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2817,
        2823
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "646": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2817,
        2823
      ],
      "op": "AND",
      "path": "14"
    },
    "647": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2817,
        2823
      ],
      "op": "LT",
      "path": "14"
    },
    "648": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2817,
        2843
      ],
      "op": "DUP1",
      "path": "14"
    },
    "649": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2817,
        2843
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "650": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2817,
        2843
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2B4"
    },
    "653": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2817,
        2843
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "654": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2817,
        2843
      ],
      "op": "POP",
      "path": "14"
    },
    "655": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2827,
        2835
      ],
      "op": "DUP3",
      "path": "14"
    },
    "656": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2836,
        2837
      ],
      "op": "DUP2",
      "path": "14"
    },
    "657": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2827,
        2838
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "659": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2827,
        2838
      ],
      "op": "AND",
      "path": "14"
    },
    "660": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2827,
        2838
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "662": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2827,
        2838
      ],
      "op": "DUP2",
      "path": "14"
    },
    "663": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2827,
        2838
      ],
      "op": "LT",
      "path": "14"
    },
    "664": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2827,
        2838
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2A3"
    },
    "667": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2827,
        2838
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "668": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2827,
        2838
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2A3"
    },
    "671": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2827,
        2838
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD16"
    },
    "674": {
      "fn": "APIConsumer.bytes32ToString",
      "jump": "i",
      "offset": [
        2827,
        2838
      ],
      "op": "JUMP",
      "path": "14"
    },
    "675": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2827,
        2838
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "676": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2827,
        2838
      ],
      "op": "BYTE",
      "path": "14"
    },
    "677": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2827,
        2838
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF8"
    },
    "679": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2827,
        2838
      ],
      "op": "SHL",
      "path": "14"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "684": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "686": {
      "op": "SHL"
    },
    "687": {
      "op": "SUB"
    },
    "688": {
      "op": "NOT"
    },
    "689": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2827,
        2843
      ],
      "op": "AND",
      "path": "14"
    },
    "690": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2827,
        2843
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "691": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2827,
        2843
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "692": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2817,
        2843
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "693": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2811,
        2873
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "694": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2811,
        2873
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2CB"
    },
    "697": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2811,
        2873
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "698": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2859,
        2862
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 4
    },
    "699": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2859,
        2862
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2C3"
    },
    "702": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2859,
        2862
      ],
      "op": "DUP2",
      "path": "14"
    },
    "703": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2859,
        2862
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD42"
    },
    "706": {
      "fn": "APIConsumer.bytes32ToString",
      "jump": "i",
      "offset": [
        2859,
        2862
      ],
      "op": "JUMP",
      "path": "14"
    },
    "707": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2859,
        2862
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "708": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2859,
        2862
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "709": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2859,
        2862
      ],
      "op": "POP",
      "path": "14"
    },
    "710": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2859,
        2862
      ],
      "op": "POP",
      "path": "14"
    },
    "711": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2811,
        2873
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x280"
    },
    "714": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2811,
        2873
      ],
      "op": "JUMP",
      "path": "14"
    },
    "715": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2811,
        2873
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "716": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2882,
        2905
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "718": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2918,
        2919
      ],
      "op": "DUP2",
      "path": "14"
    },
    "719": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "721": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "AND",
      "path": "14"
    },
    "722": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "PUSH8",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "731": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "DUP2",
      "path": "14"
    },
    "732": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "GT",
      "path": "14"
    },
    "733": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "734": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2E9"
    },
    "737": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "738": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2E9"
    },
    "741": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC4F"
    },
    "744": {
      "fn": "APIConsumer.bytes32ToString",
      "jump": "i",
      "offset": [
        2908,
        2920
      ],
      "op": "JUMP",
      "path": "14"
    },
    "745": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "746": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "748": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "749": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "750": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "DUP1",
      "path": "14"
    },
    "751": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "DUP3",
      "path": "14"
    },
    "752": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "753": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "DUP1",
      "path": "14"
    },
    "754": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "756": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "ADD",
      "path": "14"
    },
    "757": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "759": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "NOT",
      "path": "14"
    },
    "760": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "AND",
      "path": "14"
    },
    "761": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "763": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "ADD",
      "path": "14"
    },
    "764": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "DUP3",
      "path": "14"
    },
    "765": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "ADD",
      "path": "14"
    },
    "766": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "768": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "769": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "DUP1",
      "path": "14"
    },
    "770": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "771": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x313"
    },
    "774": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "775": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "777": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "DUP3",
      "path": "14"
    },
    "778": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "ADD",
      "path": "14"
    },
    "779": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "DUP2",
      "path": "14"
    },
    "780": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "DUP1",
      "path": "14"
    },
    "781": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "782": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "DUP4",
      "path": "14"
    },
    "783": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "CALLDATACOPY",
      "path": "14"
    },
    "784": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "ADD",
      "path": "14"
    },
    "785": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "786": {
      "op": "POP"
    },
    "787": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "788": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2908,
        2920
      ],
      "op": "POP",
      "path": "14"
    },
    "789": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2882,
        2920
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "790": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2882,
        2920
      ],
      "op": "POP",
      "path": "14"
    },
    "791": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2939,
        2940
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 5,
      "value": "0x0"
    },
    "793": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2935,
        2940
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "794": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2935,
        2940
      ],
      "op": "POP",
      "path": "14"
    },
    "795": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2930,
        3027
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "796": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2946,
        2948
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "798": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2942,
        2943
      ],
      "op": "DUP3",
      "path": "14"
    },
    "799": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2942,
        2948
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "801": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2942,
        2948
      ],
      "op": "AND",
      "path": "14"
    },
    "802": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2942,
        2948
      ],
      "op": "LT",
      "path": "14"
    },
    "803": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2942,
        2968
      ],
      "op": "DUP1",
      "path": "14"
    },
    "804": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2942,
        2968
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "805": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2942,
        2968
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x34F"
    },
    "808": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2942,
        2968
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "809": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2942,
        2968
      ],
      "op": "POP",
      "path": "14"
    },
    "810": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2952,
        2960
      ],
      "op": "DUP4",
      "path": "14"
    },
    "811": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2961,
        2962
      ],
      "op": "DUP3",
      "path": "14"
    },
    "812": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2952,
        2963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "814": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2952,
        2963
      ],
      "op": "AND",
      "path": "14"
    },
    "815": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2952,
        2963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "817": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2952,
        2963
      ],
      "op": "DUP2",
      "path": "14"
    },
    "818": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2952,
        2963
      ],
      "op": "LT",
      "path": "14"
    },
    "819": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2952,
        2963
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x33E"
    },
    "822": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2952,
        2963
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "823": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2952,
        2963
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x33E"
    },
    "826": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2952,
        2963
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD16"
    },
    "829": {
      "fn": "APIConsumer.bytes32ToString",
      "jump": "i",
      "offset": [
        2952,
        2963
      ],
      "op": "JUMP",
      "path": "14"
    },
    "830": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2952,
        2963
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "831": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2952,
        2963
      ],
      "op": "BYTE",
      "path": "14"
    },
    "832": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2952,
        2963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF8"
    },
    "834": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2952,
        2963
      ],
      "op": "SHL",
      "path": "14"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "839": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "841": {
      "op": "SHL"
    },
    "842": {
      "op": "SUB"
    },
    "843": {
      "op": "NOT"
    },
    "844": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2952,
        2968
      ],
      "op": "AND",
      "path": "14"
    },
    "845": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2952,
        2968
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "846": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2952,
        2968
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "847": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2942,
        2968
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "848": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2930,
        3027
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "849": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2930,
        3027
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3AB"
    },
    "852": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2930,
        3027
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "853": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        3005,
        3013
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 6
    },
    "854": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        3014,
        3015
      ],
      "op": "DUP3",
      "path": "14"
    },
    "855": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        3005,
        3016
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "857": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        3005,
        3016
      ],
      "op": "AND",
      "path": "14"
    },
    "858": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        3005,
        3016
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "860": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        3005,
        3016
      ],
      "op": "DUP2",
      "path": "14"
    },
    "861": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        3005,
        3016
      ],
      "op": "LT",
      "path": "14"
    },
    "862": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        3005,
        3016
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x369"
    },
    "865": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        3005,
        3016
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "866": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        3005,
        3016
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x369"
    },
    "869": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        3005,
        3016
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD16"
    },
    "872": {
      "fn": "APIConsumer.bytes32ToString",
      "jump": "i",
      "offset": [
        3005,
        3016
      ],
      "op": "JUMP",
      "path": "14"
    },
    "873": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        3005,
        3016
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "874": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        3005,
        3016
      ],
      "op": "BYTE",
      "path": "14"
    },
    "875": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        3005,
        3016
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF8"
    },
    "877": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        3005,
        3016
      ],
      "op": "SHL",
      "path": "14"
    },
    "878": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        2999
      ],
      "op": "DUP2",
      "path": "14"
    },
    "879": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        3000,
        3001
      ],
      "op": "DUP4",
      "path": "14"
    },
    "880": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3002
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "882": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3002
      ],
      "op": "AND",
      "path": "14"
    },
    "883": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3002
      ],
      "op": "DUP2",
      "path": "14"
    },
    "884": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3002
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "885": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3002
      ],
      "op": "DUP2",
      "path": "14"
    },
    "886": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3002
      ],
      "op": "LT",
      "path": "14"
    },
    "887": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3002
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x382"
    },
    "890": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3002
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "891": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3002
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x382"
    },
    "894": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3002
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD16"
    },
    "897": {
      "fn": "APIConsumer.bytes32ToString",
      "jump": "i",
      "offset": [
        2989,
        3002
      ],
      "op": "JUMP",
      "path": "14"
    },
    "898": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3002
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "899": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3002
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "901": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3002
      ],
      "op": "ADD",
      "path": "14"
    },
    "902": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3002
      ],
      "op": "ADD",
      "path": "14"
    },
    "903": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3016
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "908": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "910": {
      "op": "SHL"
    },
    "911": {
      "op": "SUB"
    },
    "912": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3016
      ],
      "op": "NOT",
      "path": "14"
    },
    "913": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3016
      ],
      "op": "AND",
      "path": "14"
    },
    "914": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3016
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "915": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3016
      ],
      "op": "DUP2",
      "path": "14"
    },
    "916": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3016
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "918": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3016
      ],
      "op": "BYTE",
      "path": "14"
    },
    "919": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3016
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "920": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2989,
        3016
      ],
      "op": "MSTORE8",
      "path": "14"
    },
    "921": {
      "op": "POP"
    },
    "922": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2970,
        2973
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 7
    },
    "923": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2970,
        2973
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3A3"
    },
    "926": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2970,
        2973
      ],
      "op": "DUP2",
      "path": "14"
    },
    "927": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2970,
        2973
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD42"
    },
    "930": {
      "fn": "APIConsumer.bytes32ToString",
      "jump": "i",
      "offset": [
        2970,
        2973
      ],
      "op": "JUMP",
      "path": "14"
    },
    "931": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2970,
        2973
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "932": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2970,
        2973
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "933": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2970,
        2973
      ],
      "op": "POP",
      "path": "14"
    },
    "934": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2970,
        2973
      ],
      "op": "POP",
      "path": "14"
    },
    "935": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2930,
        3027
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x31B"
    },
    "938": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2930,
        3027
      ],
      "op": "JUMP",
      "path": "14"
    },
    "939": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2930,
        3027
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "940": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        3050,
        3060
      ],
      "op": "SWAP4",
      "path": "14",
      "statement": 8
    },
    "941": {
      "fn": "APIConsumer.bytes32ToString",
      "offset": [
        2701,
        3068
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "942": {
      "op": "POP"
    },
    "943": {
      "op": "POP"
    },
    "944": {
      "op": "POP"
    },
    "945": {
      "fn": "APIConsumer.bytes32ToString",
      "jump": "o",
      "offset": [
        2701,
        3068
      ],
      "op": "JUMP",
      "path": "14"
    },
    "946": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3074,
        3449
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "947": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3133,
        3144
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "949": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3146,
        3154
      ],
      "op": "DUP1",
      "path": "14"
    },
    "950": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3167,
        3176
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "952": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3162,
        3423
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "953": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3192,
        3196
      ],
      "op": "DUP4",
      "path": "14"
    },
    "954": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3186,
        3204
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "955": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3182,
        3183
      ],
      "op": "DUP2",
      "path": "14"
    },
    "956": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3182,
        3204
      ],
      "op": "LT",
      "path": "14"
    },
    "957": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3162,
        3423
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "958": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3162,
        3423
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4A6"
    },
    "961": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3162,
        3423
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "962": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3256,
        3257
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "964": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3250,
        3252
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x30"
    },
    "966": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3238,
        3242
      ],
      "op": "DUP6",
      "path": "14"
    },
    "967": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3244,
        3245
      ],
      "op": "DUP4",
      "path": "14"
    },
    "968": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3232,
        3246
      ],
      "op": "DUP2",
      "path": "14"
    },
    "969": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3232,
        3246
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "970": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3232,
        3246
      ],
      "op": "DUP2",
      "path": "14"
    },
    "971": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3232,
        3246
      ],
      "op": "LT",
      "path": "14"
    },
    "972": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3232,
        3246
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3D7"
    },
    "975": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3232,
        3246
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "976": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3232,
        3246
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3D7"
    },
    "979": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3232,
        3246
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD16"
    },
    "982": {
      "fn": "APIConsumer.strToUint",
      "jump": "i",
      "offset": [
        3232,
        3246
      ],
      "op": "JUMP",
      "path": "14"
    },
    "983": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3232,
        3246
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "984": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3232,
        3246
      ],
      "op": "ADD",
      "path": "14"
    },
    "985": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3232,
        3246
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "987": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3232,
        3246
      ],
      "op": "ADD",
      "path": "14"
    },
    "988": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3232,
        3246
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "989": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3226,
        3252
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3E9"
    },
    "992": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3226,
        3252
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "993": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3226,
        3252
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "994": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3232,
        3246
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF8"
    },
    "996": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3232,
        3246
      ],
      "op": "SHR",
      "path": "14"
    },
    "997": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3226,
        3252
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD61"
    },
    "1000": {
      "fn": "APIConsumer.strToUint",
      "jump": "i",
      "offset": [
        3226,
        3252
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1001": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3226,
        3252
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1002": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3225,
        3257
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1004": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3225,
        3257
      ],
      "op": "AND",
      "path": "14"
    },
    "1005": {
      "branch": 56,
      "fn": "APIConsumer.strToUint",
      "offset": [
        3225,
        3257
      ],
      "op": "LT",
      "path": "14"
    },
    "1006": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3225,
        3293
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1007": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3225,
        3293
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x420"
    },
    "1010": {
      "branch": 56,
      "fn": "APIConsumer.strToUint",
      "offset": [
        3225,
        3293
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1011": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3225,
        3293
      ],
      "op": "POP",
      "path": "14"
    },
    "1012": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3292,
        3293
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "1014": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3286,
        3288
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x30"
    },
    "1016": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3274,
        3278
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1017": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3280,
        3281
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1018": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3268,
        3282
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1019": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3268,
        3282
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1020": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3268,
        3282
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1021": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3268,
        3282
      ],
      "op": "LT",
      "path": "14"
    },
    "1022": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3268,
        3282
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x409"
    },
    "1025": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3268,
        3282
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1026": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3268,
        3282
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x409"
    },
    "1029": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3268,
        3282
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD16"
    },
    "1032": {
      "fn": "APIConsumer.strToUint",
      "jump": "i",
      "offset": [
        3268,
        3282
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1033": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3268,
        3282
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1034": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3268,
        3282
      ],
      "op": "ADD",
      "path": "14"
    },
    "1035": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3268,
        3282
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1037": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3268,
        3282
      ],
      "op": "ADD",
      "path": "14"
    },
    "1038": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3268,
        3282
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1039": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3262,
        3288
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x41B"
    },
    "1042": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3262,
        3288
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1043": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3262,
        3288
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1044": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3268,
        3282
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF8"
    },
    "1046": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3268,
        3282
      ],
      "op": "SHR",
      "path": "14"
    },
    "1047": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3262,
        3288
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD61"
    },
    "1050": {
      "fn": "APIConsumer.strToUint",
      "jump": "i",
      "offset": [
        3262,
        3288
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1051": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3262,
        3288
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1052": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3261,
        3293
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1054": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3261,
        3293
      ],
      "op": "AND",
      "path": "14"
    },
    "1055": {
      "branch": 57,
      "fn": "APIConsumer.strToUint",
      "offset": [
        3261,
        3293
      ],
      "op": "GT",
      "path": "14"
    },
    "1056": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3225,
        3293
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1057": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3221,
        3337
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1058": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3221,
        3337
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x431"
    },
    "1061": {
      "branch": 57,
      "fn": "APIConsumer.strToUint",
      "offset": [
        3221,
        3337
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1062": {
      "op": "POP"
    },
    "1063": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3317,
        3318
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 9,
      "value": "0x0"
    },
    "1065": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3317,
        3318
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1066": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3317,
        3318
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1067": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3317,
        3318
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1068": {
      "op": "POP"
    },
    "1069": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3074,
        3449
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1070": {
      "op": "POP"
    },
    "1071": {
      "op": "POP"
    },
    "1072": {
      "fn": "APIConsumer.strToUint",
      "jump": "o",
      "offset": [
        3074,
        3449
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1073": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3221,
        3337
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1074": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3414,
        3415
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 10,
      "value": "0x1"
    },
    "1076": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3410,
        3411
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1077": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3395,
        3399
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1078": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3389,
        3407
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1079": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3389,
        3411
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x440"
    },
    "1082": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3389,
        3411
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1083": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3389,
        3411
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1084": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3389,
        3411
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD84"
    },
    "1087": {
      "fn": "APIConsumer.strToUint",
      "jump": "i",
      "offset": [
        3389,
        3411
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1088": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3389,
        3411
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1089": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3389,
        3415
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x44A"
    },
    "1092": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3389,
        3415
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1093": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3389,
        3415
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1094": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3389,
        3415
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD84"
    },
    "1097": {
      "fn": "APIConsumer.strToUint",
      "jump": "i",
      "offset": [
        3389,
        3415
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1098": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3389,
        3415
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1099": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3384,
        3416
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x455"
    },
    "1102": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3384,
        3416
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1103": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3384,
        3386
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "1105": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3384,
        3416
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE7F"
    },
    "1108": {
      "fn": "APIConsumer.strToUint",
      "jump": "i",
      "offset": [
        3384,
        3416
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1109": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3384,
        3416
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1110": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3378,
        3380
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x30"
    },
    "1112": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3366,
        3370
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1113": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3372,
        3373
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1114": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3360,
        3374
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1115": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3360,
        3374
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1116": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3360,
        3374
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1117": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3360,
        3374
      ],
      "op": "LT",
      "path": "14"
    },
    "1118": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3360,
        3374
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x469"
    },
    "1121": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3360,
        3374
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1122": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3360,
        3374
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x469"
    },
    "1125": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3360,
        3374
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD16"
    },
    "1128": {
      "fn": "APIConsumer.strToUint",
      "jump": "i",
      "offset": [
        3360,
        3374
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1129": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3360,
        3374
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1130": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3360,
        3374
      ],
      "op": "ADD",
      "path": "14"
    },
    "1131": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3360,
        3374
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1133": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3360,
        3374
      ],
      "op": "ADD",
      "path": "14"
    },
    "1134": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3360,
        3374
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1135": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3354,
        3380
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x47B"
    },
    "1138": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3354,
        3380
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1139": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3354,
        3380
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1140": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3360,
        3374
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF8"
    },
    "1142": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3360,
        3374
      ],
      "op": "SHR",
      "path": "14"
    },
    "1143": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3354,
        3380
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD61"
    },
    "1146": {
      "fn": "APIConsumer.strToUint",
      "jump": "i",
      "offset": [
        3354,
        3380
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1147": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3354,
        3380
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1148": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3353,
        3416
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1150": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3353,
        3416
      ],
      "op": "AND",
      "path": "14"
    },
    "1151": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3353,
        3416
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x488"
    },
    "1154": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3353,
        3416
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1155": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3353,
        3416
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1156": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3353,
        3416
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE8B"
    },
    "1159": {
      "fn": "APIConsumer.strToUint",
      "jump": "i",
      "offset": [
        3353,
        3416
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1160": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3353,
        3416
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1161": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3346,
        3416
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x492"
    },
    "1164": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3346,
        3416
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1165": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3346,
        3416
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1166": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3346,
        3416
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEAA"
    },
    "1169": {
      "fn": "APIConsumer.strToUint",
      "jump": "i",
      "offset": [
        3346,
        3416
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1170": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3346,
        3416
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1171": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3346,
        3416
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1172": {
      "op": "POP"
    },
    "1173": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3206,
        3209
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 11
    },
    "1174": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3206,
        3209
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x49E"
    },
    "1177": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3206,
        3209
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1178": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3206,
        3209
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEC2"
    },
    "1181": {
      "fn": "APIConsumer.strToUint",
      "jump": "i",
      "offset": [
        3206,
        3209
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1182": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3206,
        3209
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1183": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3206,
        3209
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1184": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3206,
        3209
      ],
      "op": "POP",
      "path": "14"
    },
    "1185": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3206,
        3209
      ],
      "op": "POP",
      "path": "14"
    },
    "1186": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3162,
        3423
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3B8"
    },
    "1189": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3162,
        3423
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1190": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3162,
        3423
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1191": {
      "op": "POP"
    },
    "1192": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3436,
        3439
      ],
      "op": "SWAP1",
      "path": "14",
      "statement": 12
    },
    "1193": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3436,
        3439
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1194": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3441,
        3445
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1196": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3441,
        3445
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1197": {
      "op": "POP"
    },
    "1198": {
      "fn": "APIConsumer.strToUint",
      "offset": [
        3074,
        3449
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1199": {
      "op": "POP"
    },
    "1200": {
      "fn": "APIConsumer.strToUint",
      "jump": "o",
      "offset": [
        3074,
        3449
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1201": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1850,
        2133
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1202": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1992,
        2016
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4B9"
    },
    "1205": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1992,
        2016
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB27"
    },
    "1208": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "jump": "i",
      "offset": [
        1992,
        2016
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1209": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1992,
        2016
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1210": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2024,
        2052
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C1"
    },
    "1213": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2024,
        2052
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB27"
    },
    "1216": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "jump": "i",
      "offset": [
        2024,
        2052
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1217": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2024,
        2052
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1218": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2065,
        2128
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 13,
      "value": "0x4CD"
    },
    "1221": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2065,
        2068
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1222": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2080,
        2086
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1223": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2088,
        2100
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1224": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2102,
        2127
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1225": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2065,
        2079
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x58C"
    },
    "1228": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "jump": "i",
      "offset": [
        2065,
        2128
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1229": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2065,
        2128
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1230": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2058,
        2128
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1231": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1850,
        2133
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1232": {
      "op": "POP"
    },
    "1233": {
      "op": "POP"
    },
    "1234": {
      "op": "POP"
    },
    "1235": {
      "op": "POP"
    },
    "1236": {
      "op": "POP"
    },
    "1237": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "jump": "o",
      "offset": [
        1850,
        2133
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1238": {
      "fn": "Chainlink.add",
      "offset": [
        1951,
        2126
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1239": {
      "fn": "Chainlink.add",
      "offset": [
        2061,
        2069
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 14,
      "value": "0x80"
    },
    "1241": {
      "fn": "Chainlink.add",
      "offset": [
        2061,
        2069
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1242": {
      "fn": "Chainlink.add",
      "offset": [
        2061,
        2069
      ],
      "op": "ADD",
      "path": "2"
    },
    "1243": {
      "fn": "Chainlink.add",
      "offset": [
        2061,
        2069
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1244": {
      "fn": "Chainlink.add",
      "offset": [
        2061,
        2087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E5"
    },
    "1247": {
      "fn": "Chainlink.add",
      "offset": [
        2061,
        2087
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1248": {
      "fn": "Chainlink.add",
      "offset": [
        2083,
        2086
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1249": {
      "fn": "Chainlink.add",
      "offset": [
        2061,
        2082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D2"
    },
    "1252": {
      "fn": "Chainlink.add",
      "jump": "i",
      "offset": [
        2061,
        2087
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1253": {
      "fn": "Chainlink.add",
      "offset": [
        2061,
        2087
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1254": {
      "fn": "Chainlink.add",
      "offset": [
        2093,
        2101
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 15,
      "value": "0x80"
    },
    "1256": {
      "fn": "Chainlink.add",
      "offset": [
        2093,
        2101
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1257": {
      "fn": "Chainlink.add",
      "offset": [
        2093,
        2101
      ],
      "op": "ADD",
      "path": "2"
    },
    "1258": {
      "fn": "Chainlink.add",
      "offset": [
        2093,
        2101
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1259": {
      "fn": "Chainlink.add",
      "offset": [
        2093,
        2121
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F4"
    },
    "1262": {
      "fn": "Chainlink.add",
      "offset": [
        2093,
        2121
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1263": {
      "fn": "Chainlink.add",
      "offset": [
        2115,
        2120
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1264": {
      "fn": "Chainlink.add",
      "offset": [
        2093,
        2114
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D2"
    },
    "1267": {
      "fn": "Chainlink.add",
      "jump": "i",
      "offset": [
        2093,
        2121
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1268": {
      "fn": "Chainlink.add",
      "offset": [
        2093,
        2121
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1269": {
      "fn": "Chainlink.add",
      "offset": [
        1951,
        2126
      ],
      "op": "POP",
      "path": "2"
    },
    "1270": {
      "fn": "Chainlink.add",
      "offset": [
        1951,
        2126
      ],
      "op": "POP",
      "path": "2"
    },
    "1271": {
      "fn": "Chainlink.add",
      "offset": [
        1951,
        2126
      ],
      "op": "POP",
      "path": "2"
    },
    "1272": {
      "fn": "Chainlink.add",
      "jump": "o",
      "offset": [
        1951,
        2126
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1273": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3687,
        4443
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1274": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3864,
        3878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1276": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3864,
        3878
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1277": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3823,
        3840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1279": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3823,
        3840
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1280": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3901,
        3910
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 16,
      "value": "0x50A"
    },
    "1283": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3864,
        3878
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1284": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3909,
        3910
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1286": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3901,
        3910
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEAA"
    },
    "1289": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "jump": "i",
      "offset": [
        3901,
        3910
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1290": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3901,
        3910
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1291": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3884,
        3898
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1293": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3884,
        3910
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1294": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4245,
        4251
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1295": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4245,
        4251
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1296": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4280,
        4302
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1298": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4280,
        4302
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1299": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4280,
        4302
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1300": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4280,
        4302
      ],
      "op": "ADD",
      "path": "3"
    },
    "1301": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4280,
        4302
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1302": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4350,
        4357
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "1304": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4350,
        4357
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1305": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4350,
        4357
      ],
      "op": "ADD",
      "path": "3"
    },
    "1306": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4350,
        4357
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1307": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4350,
        4361
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1308": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1309": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1310": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3916,
        3943
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1312": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3916,
        3943
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1313": {
      "op": "PUSH4",
      "value": "0x20214CA3"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1320": {
      "op": "SHL"
    },
    "1321": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3976,
        4024
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1322": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x542"
    },
    "1325": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1326": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3916,
        3943
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1327": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3916,
        3943
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1328": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3916,
        3943
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1329": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3916,
        3943
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1330": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4245,
        4251
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1331": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4267,
        4271
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "1332": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4267,
        4271
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1333": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4280,
        4302
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1334": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4310,
        4315
      ],
      "op": "DUP11",
      "path": "3"
    },
    "1335": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4310,
        4315
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1336": {
      "offset": [
        837,
        838
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1338": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        837,
        838
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1339": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1341": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "ADD",
      "path": "3"
    },
    "1342": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEDB"
    },
    "1345": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "jump": "i",
      "offset": [
        3946,
        4367
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1346": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1347": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1349": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1350": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1353": {
      "op": "NOT"
    },
    "1354": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1355": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1356": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SUB",
      "path": "3"
    },
    "1357": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "ADD",
      "path": "3"
    },
    "1358": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1359": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1360": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1361": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1362": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1363": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1365": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1366": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "ADD",
      "path": "3"
    },
    "1367": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1368": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1375": {
      "op": "SHL"
    },
    "1376": {
      "op": "SUB"
    },
    "1377": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "AND",
      "path": "3"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1384": {
      "op": "SHL"
    },
    "1385": {
      "op": "SUB"
    },
    "1386": {
      "op": "NOT"
    },
    "1387": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1388": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1389": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "AND",
      "path": "3"
    },
    "1390": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1391": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1392": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1393": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "OR",
      "path": "3"
    },
    "1394": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1395": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1396": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1397": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1398": {
      "op": "POP"
    },
    "1399": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4380,
        4438
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 17,
      "value": "0x582"
    },
    "1402": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4392,
        4405
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1403": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4407,
        4412
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1404": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4414,
        4421
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1405": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1406": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4380,
        4391
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E9"
    },
    "1409": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "jump": "i",
      "offset": [
        4380,
        4438
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1410": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4380,
        4438
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1411": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4373,
        4438
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "1412": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3687,
        4443
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1413": {
      "op": "POP"
    },
    "1414": {
      "op": "POP"
    },
    "1415": {
      "op": "POP"
    },
    "1416": {
      "op": "POP"
    },
    "1417": {
      "op": "POP"
    },
    "1418": {
      "op": "POP"
    },
    "1419": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "jump": "o",
      "offset": [
        3687,
        4443
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1420": {
      "fn": "Chainlink.initialize",
      "offset": [
        987,
        1338
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1421": {
      "fn": "Chainlink.initialize",
      "offset": [
        1129,
        1153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x594"
    },
    "1424": {
      "fn": "Chainlink.initialize",
      "offset": [
        1129,
        1153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB27"
    },
    "1427": {
      "fn": "Chainlink.initialize",
      "jump": "i",
      "offset": [
        1129,
        1153
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1428": {
      "fn": "Chainlink.initialize",
      "offset": [
        1129,
        1153
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1429": {
      "fn": "Chainlink.initialize",
      "offset": [
        1161,
        1210
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 18,
      "value": "0x5A4"
    },
    "1432": {
      "fn": "Chainlink.initialize",
      "offset": [
        1182,
        1186
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1433": {
      "fn": "Chainlink.initialize",
      "offset": [
        1182,
        1190
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "1435": {
      "fn": "Chainlink.initialize",
      "offset": [
        1182,
        1190
      ],
      "op": "ADD",
      "path": "2"
    },
    "1436": {
      "fn": "Chainlink.initialize",
      "offset": [
        1182,
        1190
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1437": {
      "offset": [
        361,
        364
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1440": {
      "fn": "Chainlink.initialize",
      "offset": [
        1161,
        1181
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x747"
    },
    "1443": {
      "fn": "Chainlink.initialize",
      "jump": "i",
      "offset": [
        1161,
        1210
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1444": {
      "fn": "Chainlink.initialize",
      "offset": [
        1161,
        1210
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1445": {
      "op": "POP"
    },
    "1446": {
      "op": "POP"
    },
    "1447": {
      "fn": "Chainlink.initialize",
      "offset": [
        1216,
        1231
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 19
    },
    "1448": {
      "fn": "Chainlink.initialize",
      "offset": [
        1216,
        1231
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1449": {
      "fn": "Chainlink.initialize",
      "offset": [
        1216,
        1231
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1456": {
      "op": "SHL"
    },
    "1457": {
      "op": "SUB"
    },
    "1458": {
      "fn": "Chainlink.initialize",
      "offset": [
        1237,
        1272
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 20
    },
    "1459": {
      "fn": "Chainlink.initialize",
      "offset": [
        1237,
        1272
      ],
      "op": "AND",
      "path": "2"
    },
    "1460": {
      "fn": "Chainlink.initialize",
      "offset": [
        1237,
        1257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1462": {
      "fn": "Chainlink.initialize",
      "offset": [
        1237,
        1257
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1463": {
      "fn": "Chainlink.initialize",
      "offset": [
        1237,
        1257
      ],
      "op": "ADD",
      "path": "2"
    },
    "1464": {
      "fn": "Chainlink.initialize",
      "offset": [
        1237,
        1272
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1471": {
      "op": "SHL"
    },
    "1472": {
      "op": "SUB"
    },
    "1473": {
      "op": "NOT"
    },
    "1474": {
      "fn": "Chainlink.initialize",
      "offset": [
        1278,
        1316
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 21
    },
    "1475": {
      "fn": "Chainlink.initialize",
      "offset": [
        1278,
        1316
      ],
      "op": "AND",
      "path": "2"
    },
    "1476": {
      "fn": "Chainlink.initialize",
      "offset": [
        1278,
        1301
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1478": {
      "fn": "Chainlink.initialize",
      "offset": [
        1278,
        1301
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1479": {
      "fn": "Chainlink.initialize",
      "offset": [
        1278,
        1301
      ],
      "op": "ADD",
      "path": "2"
    },
    "1480": {
      "fn": "Chainlink.initialize",
      "offset": [
        1278,
        1316
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1481": {
      "fn": "Chainlink.initialize",
      "offset": [
        1216,
        1220
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1482": {
      "fn": "Chainlink.initialize",
      "offset": [
        987,
        1338
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1483": {
      "fn": "Chainlink.initialize",
      "offset": [
        987,
        1338
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1484": {
      "fn": "Chainlink.initialize",
      "offset": [
        987,
        1338
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1485": {
      "fn": "Chainlink.initialize",
      "offset": [
        987,
        1338
      ],
      "op": "POP",
      "path": "2"
    },
    "1486": {
      "fn": "Chainlink.initialize",
      "offset": [
        987,
        1338
      ],
      "op": "POP",
      "path": "2"
    },
    "1487": {
      "fn": "Chainlink.initialize",
      "offset": [
        987,
        1338
      ],
      "op": "POP",
      "path": "2"
    },
    "1488": {
      "fn": "Chainlink.initialize",
      "offset": [
        987,
        1338
      ],
      "op": "POP",
      "path": "2"
    },
    "1489": {
      "fn": "Chainlink.initialize",
      "jump": "o",
      "offset": [
        987,
        1338
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1490": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2777,
        2981
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1491": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2875,
        2946
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 22,
      "value": "0x5DF"
    },
    "1494": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2894,
        2897
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1495": {
      "offset": [
        383,
        384
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "1497": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2931,
        2936
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1498": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2925,
        2944
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1499": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2875,
        2893
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7AC"
    },
    "1502": {
      "fn": "CBORChainlink.encodeString",
      "jump": "i",
      "offset": [
        2875,
        2946
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1503": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2875,
        2946
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1504": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2952,
        2976
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 23,
      "value": "0x4F4"
    },
    "1507": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2952,
        2955
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1508": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2969,
        2974
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1509": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2952,
        2962
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8C1"
    },
    "1512": {
      "fn": "CBORChainlink.encodeString",
      "jump": "i",
      "offset": [
        2952,
        2976
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1513": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6629,
        7059
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1514": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 24,
      "value": "0x40"
    },
    "1516": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1517": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1530": {
      "op": "NOT"
    },
    "1531": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6835,
        6839
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1534": {
      "op": "SHL"
    },
    "1535": {
      "op": "AND"
    },
    "1536": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1538": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1539": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "ADD",
      "path": "3"
    },
    "1540": {
      "op": "MSTORE"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "1543": {
      "op": "DUP2"
    },
    "1544": {
      "op": "ADD"
    },
    "1545": {
      "op": "DUP5"
    },
    "1546": {
      "op": "SWAP1"
    },
    "1547": {
      "op": "MSTORE"
    },
    "1548": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6771,
        6788
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1550": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6771,
        6788
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "1553": {
      "op": "ADD"
    },
    "1554": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1556": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1557": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1558": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1559": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1560": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "SUB",
      "path": "3"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1563": {
      "op": "NOT"
    },
    "1564": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "ADD",
      "path": "3"
    },
    "1565": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1566": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1567": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1568": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1569": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1570": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1571": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1572": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1574": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1575": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1576": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "ADD",
      "path": "3"
    },
    "1577": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1578": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 25,
      "value": "0x0"
    },
    "1580": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1581": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1582": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1583": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6871
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1585": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1586": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1587": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1588": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1589": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1590": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1591": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6898
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1592": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6898
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1599": {
      "op": "SHL"
    },
    "1600": {
      "op": "SUB"
    },
    "1601": {
      "op": "NOT"
    },
    "1602": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6898
      ],
      "op": "AND",
      "path": "3"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1609": {
      "op": "SHL"
    },
    "1610": {
      "op": "SUB"
    },
    "1611": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6898
      ],
      "op": "DUP11",
      "path": "3"
    },
    "1612": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6898
      ],
      "op": "AND",
      "path": "3"
    },
    "1613": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6898
      ],
      "op": "OR",
      "path": "3"
    },
    "1614": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6898
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1615": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6898
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1616": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1617": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1618": {
      "op": "POP"
    },
    "1619": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1620": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1621": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6909,
        6938
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 26,
      "value": "0xB5E6E01E79F91267DC17B4E6314D5D4D03593D2CEEE0FBB452B750BD70EA5AF9"
    },
    "1654": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6909,
        6938
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1655": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1656": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6909,
        6938
      ],
      "op": "LOG2",
      "path": "3"
    },
    "1657": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        6958
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 27,
      "value": "0x2"
    },
    "1659": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        6958
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1660": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1662": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1663": {
      "op": "PUSH4",
      "value": "0x2000575"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1670": {
      "op": "SHL"
    },
    "1671": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1672": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1679": {
      "op": "SHL"
    },
    "1680": {
      "op": "SUB"
    },
    "1681": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        6958
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1682": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        6958
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1683": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        6958
      ],
      "op": "AND",
      "path": "3"
    },
    "1684": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        6958
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1685": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        6974
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4000AEA0"
    },
    "1690": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        6974
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1691": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6AC"
    },
    "1694": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1695": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6975,
        6988
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1696": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6975,
        6988
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1697": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6990,
        6997
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1698": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6990,
        6997
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1699": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6999,
        7013
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1700": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6999,
        7013
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1701": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1703": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "ADD",
      "path": "3"
    },
    "1704": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF43"
    },
    "1707": {
      "fn": "ChainlinkClient._rawRequest",
      "jump": "i",
      "offset": [
        6952,
        7014
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1708": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1709": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1711": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1713": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1714": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1715": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1716": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "SUB",
      "path": "3"
    },
    "1717": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1718": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1720": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1721": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "GAS",
      "path": "3"
    },
    "1722": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "CALL",
      "path": "3"
    },
    "1723": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1724": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1725": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1726": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6CB"
    },
    "1729": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1730": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1731": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1733": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1734": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1735": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1736": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1738": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1739": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1740": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "POP",
      "path": "3"
    },
    "1741": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "POP",
      "path": "3"
    },
    "1742": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "POP",
      "path": "3"
    },
    "1743": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "POP",
      "path": "3"
    },
    "1744": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1746": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1747": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1748": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1750": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "NOT",
      "path": "3"
    },
    "1751": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1753": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1754": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "ADD",
      "path": "3"
    },
    "1755": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "AND",
      "path": "3"
    },
    "1756": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1757": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "ADD",
      "path": "3"
    },
    "1758": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1759": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1761": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1762": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "POP",
      "path": "3"
    },
    "1763": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1764": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "ADD",
      "path": "3"
    },
    "1765": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1766": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6EF"
    },
    "1769": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1770": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1771": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF6A"
    },
    "1774": {
      "fn": "ChainlinkClient._rawRequest",
      "jump": "i",
      "offset": [
        6952,
        7014
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1775": {
      "branch": 68,
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1776": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5CA"
    },
    "1779": {
      "branch": 68,
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1780": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1782": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1783": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1789": {
      "op": "SHL"
    },
    "1790": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1791": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1794": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1796": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1797": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "ADD",
      "path": "3"
    },
    "1798": {
      "op": "MSTORE"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1803": {
      "op": "DUP3"
    },
    "1804": {
      "op": "ADD"
    },
    "1805": {
      "op": "MSTORE"
    },
    "1806": {
      "op": "PUSH32",
      "value": "0x756E61626C6520746F207472616E73666572416E6443616C6C20746F206F7261"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1841": {
      "op": "DUP3"
    },
    "1842": {
      "op": "ADD"
    },
    "1843": {
      "op": "MSTORE"
    },
    "1844": {
      "op": "PUSH3",
      "value": "0x636C65"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1850": {
      "op": "SHL"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1853": {
      "op": "DUP3"
    },
    "1854": {
      "op": "ADD"
    },
    "1855": {
      "op": "MSTORE"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1858": {
      "op": "ADD"
    },
    "1859": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15D"
    },
    "1862": {
      "op": "JUMP"
    },
    "1863": {
      "fn": "BufferChainlink.init",
      "offset": [
        1001,
        1400
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1866": {
      "op": "DUP1"
    },
    "1867": {
      "op": "MLOAD"
    },
    "1868": {
      "op": "DUP1"
    },
    "1869": {
      "op": "DUP3"
    },
    "1870": {
      "op": "ADD"
    },
    "1871": {
      "op": "SWAP1"
    },
    "1872": {
      "op": "SWAP2"
    },
    "1873": {
      "op": "MSTORE"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1876": {
      "op": "DUP2"
    },
    "1877": {
      "op": "MSTORE"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1882": {
      "op": "DUP3"
    },
    "1883": {
      "op": "ADD"
    },
    "1884": {
      "op": "MSTORE"
    },
    "1885": {
      "fn": "BufferChainlink.init",
      "offset": [
        1100,
        1113
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x767"
    },
    "1888": {
      "fn": "BufferChainlink.init",
      "offset": [
        1111,
        1113
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1890": {
      "fn": "BufferChainlink.init",
      "offset": [
        1100,
        1108
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1891": {
      "fn": "BufferChainlink.init",
      "offset": [
        1100,
        1113
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF8C"
    },
    "1894": {
      "fn": "BufferChainlink.init",
      "jump": "i",
      "offset": [
        1100,
        1113
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1895": {
      "fn": "BufferChainlink.init",
      "offset": [
        1100,
        1113
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1896": {
      "branch": 58,
      "fn": "BufferChainlink.init",
      "offset": [
        1100,
        1118
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1897": {
      "fn": "BufferChainlink.init",
      "offset": [
        1096,
        1167
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x78F"
    },
    "1900": {
      "branch": 58,
      "fn": "BufferChainlink.init",
      "offset": [
        1096,
        1167
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1901": {
      "fn": "BufferChainlink.init",
      "offset": [
        1146,
        1159
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 28,
      "value": "0x777"
    },
    "1904": {
      "fn": "BufferChainlink.init",
      "offset": [
        1157,
        1159
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1906": {
      "fn": "BufferChainlink.init",
      "offset": [
        1146,
        1154
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1907": {
      "fn": "BufferChainlink.init",
      "offset": [
        1146,
        1159
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF8C"
    },
    "1910": {
      "fn": "BufferChainlink.init",
      "jump": "i",
      "offset": [
        1146,
        1159
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1911": {
      "fn": "BufferChainlink.init",
      "offset": [
        1146,
        1159
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1912": {
      "fn": "BufferChainlink.init",
      "offset": [
        1140,
        1160
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x782"
    },
    "1915": {
      "fn": "BufferChainlink.init",
      "offset": [
        1140,
        1160
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1916": {
      "fn": "BufferChainlink.init",
      "offset": [
        1140,
        1142
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1918": {
      "fn": "BufferChainlink.init",
      "offset": [
        1140,
        1160
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD84"
    },
    "1921": {
      "fn": "BufferChainlink.init",
      "jump": "i",
      "offset": [
        1140,
        1160
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1922": {
      "fn": "BufferChainlink.init",
      "offset": [
        1140,
        1160
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1923": {
      "fn": "BufferChainlink.init",
      "offset": [
        1128,
        1160
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x78C"
    },
    "1926": {
      "fn": "BufferChainlink.init",
      "offset": [
        1128,
        1160
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1927": {
      "fn": "BufferChainlink.init",
      "offset": [
        1128,
        1160
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1928": {
      "fn": "BufferChainlink.init",
      "offset": [
        1128,
        1160
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEAA"
    },
    "1931": {
      "fn": "BufferChainlink.init",
      "jump": "i",
      "offset": [
        1128,
        1160
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1932": {
      "fn": "BufferChainlink.init",
      "offset": [
        1128,
        1160
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1933": {
      "fn": "BufferChainlink.init",
      "offset": [
        1128,
        1160
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1934": {
      "fn": "BufferChainlink.init",
      "offset": [
        1128,
        1160
      ],
      "op": "POP",
      "path": "11"
    },
    "1935": {
      "fn": "BufferChainlink.init",
      "offset": [
        1096,
        1167
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1936": {
      "op": "POP"
    },
    "1937": {
      "fn": "BufferChainlink.init",
      "offset": [
        1214,
        1226
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 29,
      "value": "0x20"
    },
    "1939": {
      "fn": "BufferChainlink.init",
      "offset": [
        1214,
        1226
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1940": {
      "fn": "BufferChainlink.init",
      "offset": [
        1214,
        1226
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1941": {
      "fn": "BufferChainlink.init",
      "offset": [
        1214,
        1226
      ],
      "op": "ADD",
      "path": "11"
    },
    "1942": {
      "fn": "BufferChainlink.init",
      "offset": [
        1214,
        1237
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1943": {
      "fn": "BufferChainlink.init",
      "offset": [
        1214,
        1237
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1944": {
      "fn": "BufferChainlink.init",
      "offset": [
        1214,
        1237
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1945": {
      "fn": "BufferChainlink.init",
      "offset": [
        1277,
        1281
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1947": {
      "fn": "BufferChainlink.init",
      "offset": [
        1271,
        1282
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1948": {
      "fn": "BufferChainlink.init",
      "offset": [
        1271,
        1282
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1949": {
      "fn": "BufferChainlink.init",
      "offset": [
        1289,
        1305
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1950": {
      "fn": "BufferChainlink.init",
      "offset": [
        1289,
        1305
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1951": {
      "fn": "BufferChainlink.init",
      "offset": [
        1289,
        1305
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1954": {
      "fn": "BufferChainlink.init",
      "offset": [
        1312,
        1326
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1955": {
      "fn": "BufferChainlink.init",
      "offset": [
        1312,
        1326
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1956": {
      "fn": "BufferChainlink.init",
      "offset": [
        1354,
        1372
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1957": {
      "fn": "BufferChainlink.init",
      "offset": [
        1354,
        1372
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1958": {
      "fn": "BufferChainlink.init",
      "offset": [
        1354,
        1372
      ],
      "op": "ADD",
      "path": "11"
    },
    "1959": {
      "fn": "BufferChainlink.init",
      "offset": [
        1346,
        1373
      ],
      "op": "ADD",
      "path": "11"
    },
    "1960": {
      "fn": "BufferChainlink.init",
      "offset": [
        1333,
        1374
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1961": {
      "fn": "BufferChainlink.init",
      "offset": [
        1333,
        1374
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1962": {
      "fn": "BufferChainlink.init",
      "offset": [
        1214,
        1226
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1963": {
      "fn": "BufferChainlink.init",
      "jump": "o",
      "offset": [
        1001,
        1400
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1964": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        682,
        1307
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1965": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        803,
        805
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x17"
    },
    "1967": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        794,
        799
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1968": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        794,
        805
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1977": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        794,
        805
      ],
      "op": "AND",
      "path": "12"
    },
    "1978": {
      "branch": 64,
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        794,
        805
      ],
      "op": "GT",
      "path": "12"
    },
    "1979": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        791,
        1303
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7D7"
    },
    "1982": {
      "branch": 64,
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        791,
        1303
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1983": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        815,
        859
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 30,
      "value": "0x7D1"
    },
    "1986": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        815,
        818
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1987": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        837,
        857
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "1989": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        847,
        848
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "1991": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        838,
        848
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1992": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        838,
        848
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1993": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        838,
        848
      ],
      "op": "SHL",
      "path": "12"
    },
    "1994": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        837,
        857
      ],
      "op": "AND",
      "path": "12"
    },
    "1995": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        837,
        857
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1996": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        837,
        857
      ],
      "op": "OR",
      "path": "12"
    },
    "1997": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        815,
        830
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8E8"
    },
    "2000": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        815,
        859
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2001": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        815,
        859
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2002": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        815,
        859
      ],
      "op": "POP",
      "path": "12"
    },
    "2003": {
      "fn": "Chainlink.add",
      "offset": [
        1951,
        2126
      ],
      "op": "POP",
      "path": "2"
    },
    "2004": {
      "fn": "Chainlink.add",
      "offset": [
        1951,
        2126
      ],
      "op": "POP",
      "path": "2"
    },
    "2005": {
      "fn": "Chainlink.add",
      "offset": [
        1951,
        2126
      ],
      "op": "POP",
      "path": "2"
    },
    "2006": {
      "fn": "Chainlink.add",
      "jump": "o",
      "offset": [
        1951,
        2126
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2007": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        791,
        1303
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2008": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        885,
        889
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "2010": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        876,
        881
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2011": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        876,
        889
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2020": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        876,
        889
      ],
      "op": "AND",
      "path": "12"
    },
    "2021": {
      "branch": 65,
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        876,
        889
      ],
      "op": "GT",
      "path": "12"
    },
    "2022": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        872,
        1303
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x815"
    },
    "2025": {
      "branch": 65,
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        872,
        1303
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2026": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        899,
        940
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 31,
      "value": "0x7FE"
    },
    "2029": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        899,
        902
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2030": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        936,
        938
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x18"
    },
    "2032": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        922,
        932
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FE0"
    },
    "2035": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        931,
        932
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "2037": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        922,
        932
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2038": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        922,
        932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2039": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        922,
        932
      ],
      "op": "SHL",
      "path": "12"
    },
    "2040": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        922,
        932
      ],
      "op": "AND",
      "path": "12"
    },
    "2041": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        921,
        938
      ],
      "op": "OR",
      "path": "12"
    },
    "2042": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        899,
        914
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8E8"
    },
    "2045": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        899,
        940
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2046": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        899,
        940
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2047": {
      "op": "POP"
    },
    "2048": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        948,
        971
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 32,
      "value": "0x7D1"
    },
    "2051": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        948,
        951
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2052": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        948,
        971
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2061": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        948,
        971
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2062": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        948,
        971
      ],
      "op": "AND",
      "path": "12"
    },
    "2063": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        969,
        970
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2065": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        948,
        961
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x90D"
    },
    "2068": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        948,
        971
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2069": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        872,
        1303
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2070": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        997,
        1003
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "2073": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        988,
        993
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2074": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        988,
        1003
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2083": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        988,
        1003
      ],
      "op": "AND",
      "path": "12"
    },
    "2084": {
      "branch": 66,
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        988,
        1003
      ],
      "op": "GT",
      "path": "12"
    },
    "2085": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        984,
        1303
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x854"
    },
    "2088": {
      "branch": 66,
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        984,
        1303
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2089": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1013,
        1054
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 33,
      "value": "0x83D"
    },
    "2092": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1013,
        1016
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2093": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1050,
        1052
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x19"
    },
    "2095": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1036,
        1046
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FE0"
    },
    "2098": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1045,
        1046
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "2100": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1036,
        1046
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2101": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1036,
        1046
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2102": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1036,
        1046
      ],
      "op": "SHL",
      "path": "12"
    },
    "2103": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1036,
        1046
      ],
      "op": "AND",
      "path": "12"
    },
    "2104": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1035,
        1052
      ],
      "op": "OR",
      "path": "12"
    },
    "2105": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1013,
        1028
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8E8"
    },
    "2108": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        1013,
        1054
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2109": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1013,
        1054
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2110": {
      "op": "POP"
    },
    "2111": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1062,
        1085
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 34,
      "value": "0x7D1"
    },
    "2114": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1062,
        1065
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2115": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1062,
        1085
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2124": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1062,
        1085
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2125": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1062,
        1085
      ],
      "op": "AND",
      "path": "12"
    },
    "2126": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1083,
        1084
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "2128": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1062,
        1075
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x90D"
    },
    "2131": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        1062,
        1085
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2132": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        984,
        1303
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2133": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1111,
        1121
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "2138": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1102,
        1107
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2139": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1102,
        1121
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2148": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1102,
        1121
      ],
      "op": "AND",
      "path": "12"
    },
    "2149": {
      "branch": 67,
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1102,
        1121
      ],
      "op": "GT",
      "path": "12"
    },
    "2150": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1098,
        1303
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x895"
    },
    "2153": {
      "branch": 67,
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1098,
        1303
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2154": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1131,
        1172
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 35,
      "value": "0x87E"
    },
    "2157": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1131,
        1134
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2158": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1168,
        1170
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1A"
    },
    "2160": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1154,
        1164
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FE0"
    },
    "2163": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1163,
        1164
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "2165": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1154,
        1164
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2166": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1154,
        1164
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2167": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1154,
        1164
      ],
      "op": "SHL",
      "path": "12"
    },
    "2168": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1154,
        1164
      ],
      "op": "AND",
      "path": "12"
    },
    "2169": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1153,
        1170
      ],
      "op": "OR",
      "path": "12"
    },
    "2170": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1131,
        1146
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8E8"
    },
    "2173": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        1131,
        1172
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2174": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1131,
        1172
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2175": {
      "op": "POP"
    },
    "2176": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1180,
        1203
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 36,
      "value": "0x7D1"
    },
    "2179": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1180,
        1183
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2180": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1180,
        1203
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2189": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1180,
        1203
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2190": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1180,
        1203
      ],
      "op": "AND",
      "path": "12"
    },
    "2191": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1201,
        1202
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2193": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1180,
        1193
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x90D"
    },
    "2196": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        1180,
        1203
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2197": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1098,
        1303
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2198": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1224,
        1265
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 37,
      "value": "0x8AA"
    },
    "2201": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1224,
        1227
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2202": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1261,
        1263
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1B"
    },
    "2204": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1247,
        1257
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FE0"
    },
    "2207": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1256,
        1257
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "2209": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1247,
        1257
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2210": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1247,
        1257
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2211": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1247,
        1257
      ],
      "op": "SHL",
      "path": "12"
    },
    "2212": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1247,
        1257
      ],
      "op": "AND",
      "path": "12"
    },
    "2213": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1246,
        1263
      ],
      "op": "OR",
      "path": "12"
    },
    "2214": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1224,
        1239
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8E8"
    },
    "2217": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        1224,
        1265
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2218": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1224,
        1265
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2219": {
      "op": "POP"
    },
    "2220": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1273,
        1296
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 38,
      "value": "0x7D1"
    },
    "2223": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1273,
        1276
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2224": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1273,
        1296
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2233": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1273,
        1296
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2234": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1273,
        1296
      ],
      "op": "AND",
      "path": "12"
    },
    "2235": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1294,
        1295
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "2237": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1273,
        1286
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x90D"
    },
    "2240": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        1273,
        1296
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2241": {
      "fn": "BufferChainlink.append",
      "offset": [
        4692,
        4847
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2244": {
      "op": "DUP1"
    },
    "2245": {
      "op": "MLOAD"
    },
    "2246": {
      "op": "DUP1"
    },
    "2247": {
      "op": "DUP3"
    },
    "2248": {
      "op": "ADD"
    },
    "2249": {
      "op": "SWAP1"
    },
    "2250": {
      "op": "SWAP2"
    },
    "2251": {
      "op": "MSTORE"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2254": {
      "op": "DUP2"
    },
    "2255": {
      "op": "MSTORE"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2260": {
      "op": "DUP3"
    },
    "2261": {
      "op": "ADD"
    },
    "2262": {
      "op": "MSTORE"
    },
    "2263": {
      "fn": "BufferChainlink.append",
      "offset": [
        4797,
        4842
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 39,
      "value": "0x3AB"
    },
    "2266": {
      "fn": "BufferChainlink.append",
      "offset": [
        4803,
        4806
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2267": {
      "fn": "BufferChainlink.append",
      "offset": [
        4808,
        4811
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2268": {
      "fn": "BufferChainlink.append",
      "offset": [
        4808,
        4815
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2270": {
      "fn": "BufferChainlink.append",
      "offset": [
        4808,
        4815
      ],
      "op": "ADD",
      "path": "11"
    },
    "2271": {
      "fn": "BufferChainlink.append",
      "offset": [
        4808,
        4815
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2272": {
      "fn": "BufferChainlink.append",
      "offset": [
        4808,
        4822
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2273": {
      "fn": "BufferChainlink.append",
      "offset": [
        4824,
        4828
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2274": {
      "fn": "BufferChainlink.append",
      "offset": [
        4830,
        4834
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2275": {
      "fn": "BufferChainlink.append",
      "offset": [
        4830,
        4841
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2276": {
      "fn": "BufferChainlink.append",
      "offset": [
        4797,
        4802
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x933"
    },
    "2279": {
      "fn": "BufferChainlink.append",
      "jump": "i",
      "offset": [
        4797,
        4842
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2280": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6040,
        6185
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2283": {
      "op": "DUP1"
    },
    "2284": {
      "op": "MLOAD"
    },
    "2285": {
      "op": "DUP1"
    },
    "2286": {
      "op": "DUP3"
    },
    "2287": {
      "op": "ADD"
    },
    "2288": {
      "op": "SWAP1"
    },
    "2289": {
      "op": "SWAP2"
    },
    "2290": {
      "op": "MSTORE"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2293": {
      "op": "DUP2"
    },
    "2294": {
      "op": "MSTORE"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2299": {
      "op": "DUP3"
    },
    "2300": {
      "op": "ADD"
    },
    "2301": {
      "op": "MSTORE"
    },
    "2302": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6143,
        6180
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 40,
      "value": "0x3AB"
    },
    "2305": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6154,
        6157
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2306": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6159,
        6162
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2307": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6159,
        6166
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2309": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6159,
        6166
      ],
      "op": "ADD",
      "path": "11"
    },
    "2310": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6159,
        6166
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2311": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6159,
        6173
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2312": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6175,
        6179
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2313": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6143,
        6153
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA1D"
    },
    "2316": {
      "fn": "BufferChainlink.appendUint8",
      "jump": "i",
      "offset": [
        6143,
        6180
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2317": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9894,
        10071
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2320": {
      "op": "DUP1"
    },
    "2321": {
      "op": "MLOAD"
    },
    "2322": {
      "op": "DUP1"
    },
    "2323": {
      "op": "DUP3"
    },
    "2324": {
      "op": "ADD"
    },
    "2325": {
      "op": "SWAP1"
    },
    "2326": {
      "op": "SWAP2"
    },
    "2327": {
      "op": "MSTORE"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2330": {
      "op": "DUP2"
    },
    "2331": {
      "op": "MSTORE"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2336": {
      "op": "DUP3"
    },
    "2337": {
      "op": "ADD"
    },
    "2338": {
      "op": "MSTORE"
    },
    "2339": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10026,
        10066
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 41,
      "value": "0x5CA"
    },
    "2342": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10035,
        10038
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2343": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10040,
        10043
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2344": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10040,
        10047
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2346": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10040,
        10047
      ],
      "op": "ADD",
      "path": "11"
    },
    "2347": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10040,
        10047
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2348": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10040,
        10054
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2349": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10056,
        10060
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2350": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10062,
        10065
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2351": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10026,
        10034
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA78"
    },
    "2354": {
      "fn": "BufferChainlink.appendInt",
      "jump": "i",
      "offset": [
        10026,
        10066
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2355": {
      "fn": "BufferChainlink.write",
      "offset": [
        2745,
        3955
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2358": {
      "op": "DUP1"
    },
    "2359": {
      "op": "MLOAD"
    },
    "2360": {
      "op": "DUP1"
    },
    "2361": {
      "op": "DUP3"
    },
    "2362": {
      "op": "ADD"
    },
    "2363": {
      "op": "SWAP1"
    },
    "2364": {
      "op": "SWAP2"
    },
    "2365": {
      "op": "MSTORE"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2368": {
      "op": "DUP2"
    },
    "2369": {
      "op": "MSTORE"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2374": {
      "op": "DUP3"
    },
    "2375": {
      "op": "ADD"
    },
    "2376": {
      "op": "MSTORE"
    },
    "2377": {
      "fn": "BufferChainlink.write",
      "offset": [
        2903,
        2907
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 42
    },
    "2378": {
      "fn": "BufferChainlink.write",
      "offset": [
        2903,
        2914
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2379": {
      "fn": "BufferChainlink.write",
      "offset": [
        2896,
        2899
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2380": {
      "fn": "BufferChainlink.write",
      "offset": [
        2896,
        2914
      ],
      "op": "GT",
      "path": "11"
    },
    "2381": {
      "branch": 59,
      "fn": "BufferChainlink.write",
      "offset": [
        2896,
        2914
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2382": {
      "fn": "BufferChainlink.write",
      "offset": [
        2888,
        2915
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x956"
    },
    "2385": {
      "branch": 59,
      "fn": "BufferChainlink.write",
      "offset": [
        2888,
        2915
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2386": {
      "fn": "BufferChainlink.write",
      "offset": [
        2888,
        2915
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2388": {
      "fn": "BufferChainlink.write",
      "offset": [
        2888,
        2915
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2389": {
      "fn": "BufferChainlink.write",
      "offset": [
        2888,
        2915
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2390": {
      "fn": "BufferChainlink.write",
      "offset": [
        2888,
        2915
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2391": {
      "fn": "BufferChainlink.write",
      "offset": [
        2938,
        2950
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2393": {
      "fn": "BufferChainlink.write",
      "offset": [
        2938,
        2950
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2394": {
      "fn": "BufferChainlink.write",
      "offset": [
        2938,
        2950
      ],
      "op": "ADD",
      "path": "11"
    },
    "2395": {
      "fn": "BufferChainlink.write",
      "offset": [
        2938,
        2950
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2396": {
      "fn": "BufferChainlink.write",
      "offset": [
        2926,
        2935
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x965"
    },
    "2399": {
      "fn": "BufferChainlink.write",
      "offset": [
        2932,
        2935
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2400": {
      "fn": "BufferChainlink.write",
      "offset": [
        2926,
        2929
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2401": {
      "fn": "BufferChainlink.write",
      "offset": [
        2926,
        2935
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEAA"
    },
    "2404": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        2926,
        2935
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2405": {
      "fn": "BufferChainlink.write",
      "offset": [
        2926,
        2935
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2406": {
      "branch": 60,
      "fn": "BufferChainlink.write",
      "offset": [
        2926,
        2950
      ],
      "op": "GT",
      "path": "11"
    },
    "2407": {
      "fn": "BufferChainlink.write",
      "offset": [
        2922,
        3012
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2408": {
      "fn": "BufferChainlink.write",
      "offset": [
        2922,
        3012
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x998"
    },
    "2411": {
      "branch": 60,
      "fn": "BufferChainlink.write",
      "offset": [
        2922,
        3012
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2412": {
      "fn": "BufferChainlink.write",
      "offset": [
        2960,
        3005
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 43,
      "value": "0x998"
    },
    "2415": {
      "fn": "BufferChainlink.write",
      "offset": [
        2967,
        2970
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2416": {
      "fn": "BufferChainlink.write",
      "offset": [
        2972,
        3000
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x988"
    },
    "2419": {
      "fn": "BufferChainlink.write",
      "offset": [
        2976,
        2979
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2420": {
      "fn": "BufferChainlink.write",
      "offset": [
        2976,
        2988
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2422": {
      "fn": "BufferChainlink.write",
      "offset": [
        2976,
        2988
      ],
      "op": "ADD",
      "path": "11"
    },
    "2423": {
      "fn": "BufferChainlink.write",
      "offset": [
        2976,
        2988
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2424": {
      "fn": "BufferChainlink.write",
      "offset": [
        2996,
        2999
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2425": {
      "fn": "BufferChainlink.write",
      "offset": [
        2990,
        2993
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2426": {
      "fn": "BufferChainlink.write",
      "offset": [
        2990,
        2999
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x983"
    },
    "2429": {
      "fn": "BufferChainlink.write",
      "offset": [
        2990,
        2999
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2430": {
      "fn": "BufferChainlink.write",
      "offset": [
        2990,
        2999
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2431": {
      "fn": "BufferChainlink.write",
      "offset": [
        2990,
        2999
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEAA"
    },
    "2434": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        2990,
        2999
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2435": {
      "fn": "BufferChainlink.write",
      "offset": [
        2990,
        2999
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2436": {
      "fn": "BufferChainlink.write",
      "offset": [
        2972,
        2975
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAF9"
    },
    "2439": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        2972,
        3000
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2440": {
      "fn": "BufferChainlink.write",
      "offset": [
        2972,
        3000
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2441": {
      "fn": "BufferChainlink.write",
      "offset": [
        2972,
        3004
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x993"
    },
    "2444": {
      "fn": "BufferChainlink.write",
      "offset": [
        2972,
        3004
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2445": {
      "fn": "BufferChainlink.write",
      "offset": [
        3003,
        3004
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2447": {
      "fn": "BufferChainlink.write",
      "offset": [
        2972,
        3004
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE8B"
    },
    "2450": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        2972,
        3004
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2451": {
      "fn": "BufferChainlink.write",
      "offset": [
        2972,
        3004
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2452": {
      "fn": "BufferChainlink.write",
      "offset": [
        2960,
        2966
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB10"
    },
    "2455": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        2960,
        3005
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2456": {
      "fn": "BufferChainlink.write",
      "offset": [
        2960,
        3005
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2457": {
      "fn": "BufferChainlink.write",
      "offset": [
        3018,
        3030
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2459": {
      "fn": "BufferChainlink.write",
      "offset": [
        3036,
        3047
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2460": {
      "fn": "BufferChainlink.write",
      "offset": [
        3133,
        3136
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2461": {
      "fn": "BufferChainlink.write",
      "offset": [
        3127,
        3137
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2462": {
      "fn": "BufferChainlink.write",
      "offset": [
        3204,
        3210
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2463": {
      "fn": "BufferChainlink.write",
      "offset": [
        3198,
        3211
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2464": {
      "fn": "BufferChainlink.write",
      "offset": [
        3320,
        3323
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2465": {
      "fn": "BufferChainlink.write",
      "offset": [
        3315,
        3317
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2467": {
      "fn": "BufferChainlink.write",
      "offset": [
        3307,
        3313
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2468": {
      "fn": "BufferChainlink.write",
      "offset": [
        3303,
        3318
      ],
      "op": "ADD",
      "path": "11"
    },
    "2469": {
      "fn": "BufferChainlink.write",
      "offset": [
        3299,
        3324
      ],
      "op": "ADD",
      "path": "11"
    },
    "2470": {
      "fn": "BufferChainlink.write",
      "offset": [
        3291,
        3324
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2471": {
      "fn": "BufferChainlink.write",
      "offset": [
        3291,
        3324
      ],
      "op": "POP",
      "path": "11"
    },
    "2472": {
      "fn": "BufferChainlink.write",
      "offset": [
        3404,
        3410
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2473": {
      "fn": "BufferChainlink.write",
      "offset": [
        3398,
        3401
      ],
      "op": "DUP9",
      "path": "11"
    },
    "2474": {
      "fn": "BufferChainlink.write",
      "offset": [
        3393,
        3396
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2475": {
      "fn": "BufferChainlink.write",
      "offset": [
        3389,
        3402
      ],
      "op": "ADD",
      "path": "11"
    },
    "2476": {
      "fn": "BufferChainlink.write",
      "offset": [
        3386,
        3411
      ],
      "op": "GT",
      "path": "11"
    },
    "2477": {
      "fn": "BufferChainlink.write",
      "offset": [
        3383,
        3459
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2478": {
      "fn": "BufferChainlink.write",
      "offset": [
        3383,
        3459
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9B7"
    },
    "2481": {
      "fn": "BufferChainlink.write",
      "offset": [
        3383,
        3459
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2482": {
      "fn": "BufferChainlink.write",
      "offset": [
        3446,
        3449
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2483": {
      "fn": "BufferChainlink.write",
      "offset": [
        3441,
        3444
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2484": {
      "fn": "BufferChainlink.write",
      "offset": [
        3437,
        3450
      ],
      "op": "ADD",
      "path": "11"
    },
    "2485": {
      "fn": "BufferChainlink.write",
      "offset": [
        3429,
        3435
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2486": {
      "fn": "BufferChainlink.write",
      "offset": [
        3422,
        3451
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2487": {
      "fn": "BufferChainlink.write",
      "offset": [
        3383,
        3459
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2488": {
      "op": "POP"
    },
    "2489": {
      "op": "POP"
    },
    "2490": {
      "op": "POP"
    },
    "2491": {
      "fn": "BufferChainlink.write",
      "offset": [
        3483,
        3485
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2493": {
      "fn": "BufferChainlink.write",
      "offset": [
        3473,
        3486
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2494": {
      "fn": "BufferChainlink.write",
      "offset": [
        3473,
        3486
      ],
      "op": "ADD",
      "path": "11"
    },
    "2495": {
      "fn": "BufferChainlink.write",
      "offset": [
        3544,
        3673
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2496": {
      "fn": "BufferChainlink.write",
      "offset": [
        3558,
        3560
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2498": {
      "fn": "BufferChainlink.write",
      "offset": [
        3551,
        3554
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2499": {
      "fn": "BufferChainlink.write",
      "offset": [
        3551,
        3560
      ],
      "op": "LT",
      "path": "11"
    },
    "2500": {
      "fn": "BufferChainlink.write",
      "offset": [
        3544,
        3673
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9F7"
    },
    "2503": {
      "fn": "BufferChainlink.write",
      "offset": [
        3544,
        3673
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2504": {
      "fn": "BufferChainlink.write",
      "offset": [
        3613,
        3623
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2505": {
      "fn": "BufferChainlink.write",
      "offset": [
        3613,
        3623
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2506": {
      "fn": "BufferChainlink.write",
      "offset": [
        3600,
        3624
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2507": {
      "fn": "BufferChainlink.write",
      "offset": [
        3600,
        3624
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2508": {
      "fn": "BufferChainlink.write",
      "offset": [
        3639,
        3649
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 44,
      "value": "0x9D6"
    },
    "2511": {
      "fn": "BufferChainlink.write",
      "offset": [
        3647,
        3649
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2513": {
      "fn": "BufferChainlink.write",
      "offset": [
        3607,
        3611
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2514": {
      "fn": "BufferChainlink.write",
      "offset": [
        3639,
        3649
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEAA"
    },
    "2517": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        3639,
        3649
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2518": {
      "fn": "BufferChainlink.write",
      "offset": [
        3639,
        3649
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2519": {
      "fn": "BufferChainlink.write",
      "offset": [
        3639,
        3649
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2520": {
      "op": "POP"
    },
    "2521": {
      "fn": "BufferChainlink.write",
      "offset": [
        3657,
        3666
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 45,
      "value": "0x9E3"
    },
    "2524": {
      "fn": "BufferChainlink.write",
      "offset": [
        3664,
        3666
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2526": {
      "fn": "BufferChainlink.write",
      "offset": [
        3657,
        3666
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2527": {
      "fn": "BufferChainlink.write",
      "offset": [
        3657,
        3666
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEAA"
    },
    "2530": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        3657,
        3666
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2531": {
      "fn": "BufferChainlink.write",
      "offset": [
        3657,
        3666
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2532": {
      "fn": "BufferChainlink.write",
      "offset": [
        3657,
        3666
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2533": {
      "op": "POP"
    },
    "2534": {
      "fn": "BufferChainlink.write",
      "offset": [
        3562,
        3571
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 46,
      "value": "0x9F0"
    },
    "2537": {
      "fn": "BufferChainlink.write",
      "offset": [
        3569,
        3571
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2539": {
      "fn": "BufferChainlink.write",
      "offset": [
        3562,
        3571
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2540": {
      "fn": "BufferChainlink.write",
      "offset": [
        3562,
        3571
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD84"
    },
    "2543": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        3562,
        3571
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2544": {
      "fn": "BufferChainlink.write",
      "offset": [
        3562,
        3571
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2545": {
      "fn": "BufferChainlink.write",
      "offset": [
        3562,
        3571
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2546": {
      "fn": "BufferChainlink.write",
      "offset": [
        3562,
        3571
      ],
      "op": "POP",
      "path": "11"
    },
    "2547": {
      "fn": "BufferChainlink.write",
      "offset": [
        3544,
        3673
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9BF"
    },
    "2550": {
      "fn": "BufferChainlink.write",
      "offset": [
        3544,
        3673
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2551": {
      "fn": "BufferChainlink.write",
      "offset": [
        3544,
        3673
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2552": {
      "fn": "BufferChainlink.write",
      "offset": [
        3807,
        3817
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2553": {
      "fn": "BufferChainlink.write",
      "offset": [
        3858,
        3869
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2554": {
      "fn": "BufferChainlink.write",
      "offset": [
        3858,
        3869
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2557": {
      "op": "NOT"
    },
    "2558": {
      "fn": "BufferChainlink.write",
      "offset": [
        3747,
        3749
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2560": {
      "fn": "BufferChainlink.write",
      "offset": [
        3747,
        3755
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2561": {
      "fn": "BufferChainlink.write",
      "offset": [
        3747,
        3755
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2562": {
      "fn": "BufferChainlink.write",
      "offset": [
        3747,
        3755
      ],
      "op": "SUB",
      "path": "11"
    },
    "2563": {
      "fn": "BufferChainlink.write",
      "offset": [
        3741,
        3744
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "2566": {
      "fn": "BufferChainlink.write",
      "offset": [
        3741,
        3756
      ],
      "op": "EXP",
      "path": "11"
    },
    "2567": {
      "fn": "BufferChainlink.write",
      "offset": [
        3740,
        3761
      ],
      "op": "ADD",
      "path": "11"
    },
    "2568": {
      "fn": "BufferChainlink.write",
      "offset": [
        3854,
        3876
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2569": {
      "fn": "BufferChainlink.write",
      "offset": [
        3854,
        3876
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2570": {
      "fn": "BufferChainlink.write",
      "offset": [
        3854,
        3876
      ],
      "op": "AND",
      "path": "11"
    },
    "2571": {
      "fn": "BufferChainlink.write",
      "offset": [
        3819,
        3828
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2572": {
      "fn": "BufferChainlink.write",
      "offset": [
        3819,
        3828
      ],
      "op": "NOT",
      "path": "11"
    },
    "2573": {
      "fn": "BufferChainlink.write",
      "offset": [
        3803,
        3829
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2574": {
      "fn": "BufferChainlink.write",
      "offset": [
        3803,
        3829
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2575": {
      "fn": "BufferChainlink.write",
      "offset": [
        3803,
        3829
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2576": {
      "fn": "BufferChainlink.write",
      "offset": [
        3803,
        3829
      ],
      "op": "AND",
      "path": "11"
    },
    "2577": {
      "fn": "BufferChainlink.write",
      "offset": [
        3898,
        3919
      ],
      "op": "OR",
      "path": "11"
    },
    "2578": {
      "fn": "BufferChainlink.write",
      "offset": [
        3885,
        3920
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2579": {
      "fn": "BufferChainlink.write",
      "offset": [
        3885,
        3920
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2580": {
      "op": "POP"
    },
    "2581": {
      "fn": "BufferChainlink.write",
      "offset": [
        3947,
        3950
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 47
    },
    "2582": {
      "fn": "BufferChainlink.write",
      "offset": [
        2745,
        3955
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "2583": {
      "fn": "BufferChainlink.write",
      "offset": [
        2745,
        3955
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2584": {
      "fn": "BufferChainlink.write",
      "offset": [
        2745,
        3955
      ],
      "op": "POP",
      "path": "11"
    },
    "2585": {
      "fn": "BufferChainlink.write",
      "offset": [
        2745,
        3955
      ],
      "op": "POP",
      "path": "11"
    },
    "2586": {
      "fn": "BufferChainlink.write",
      "offset": [
        2745,
        3955
      ],
      "op": "POP",
      "path": "11"
    },
    "2587": {
      "fn": "BufferChainlink.write",
      "offset": [
        2745,
        3955
      ],
      "op": "POP",
      "path": "11"
    },
    "2588": {
      "fn": "BufferChainlink.write",
      "jump": "o",
      "offset": [
        2745,
        3955
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2589": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5148,
        5787
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2592": {
      "op": "DUP1"
    },
    "2593": {
      "op": "MLOAD"
    },
    "2594": {
      "op": "DUP1"
    },
    "2595": {
      "op": "DUP3"
    },
    "2596": {
      "op": "ADD"
    },
    "2597": {
      "op": "SWAP1"
    },
    "2598": {
      "op": "SWAP2"
    },
    "2599": {
      "op": "MSTORE"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2602": {
      "op": "DUP2"
    },
    "2603": {
      "op": "MSTORE"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2608": {
      "op": "DUP3"
    },
    "2609": {
      "op": "ADD"
    },
    "2610": {
      "op": "MSTORE"
    },
    "2611": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5283,
        5286
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2612": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5283,
        5295
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2614": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5283,
        5295
      ],
      "op": "ADD",
      "path": "11"
    },
    "2615": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5283,
        5295
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2616": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5276,
        5279
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2617": {
      "branch": 61,
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5276,
        5295
      ],
      "op": "LT",
      "path": "11"
    },
    "2618": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5272,
        5341
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA52"
    },
    "2621": {
      "branch": 61,
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5272,
        5341
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2622": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5305,
        5334
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 48,
      "value": "0xA52"
    },
    "2625": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5312,
        5315
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2626": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5317,
        5320
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2627": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5317,
        5329
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2629": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5317,
        5329
      ],
      "op": "ADD",
      "path": "11"
    },
    "2630": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5317,
        5329
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2631": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5332,
        5333
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2633": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5317,
        5333
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x993"
    },
    "2636": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5317,
        5333
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2637": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5317,
        5333
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2638": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5317,
        5333
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE8B"
    },
    "2641": {
      "fn": "BufferChainlink.writeUint8",
      "jump": "i",
      "offset": [
        5317,
        5333
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2642": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5305,
        5334
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2643": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5427,
        5430
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2644": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5421,
        5431
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2645": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5498,
        5504
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2646": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5492,
        5505
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2647": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5610,
        5612
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2649": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5604,
        5607
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2650": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5596,
        5602
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2651": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5592,
        5608
      ],
      "op": "ADD",
      "path": "11"
    },
    "2652": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5588,
        5613
      ],
      "op": "ADD",
      "path": "11"
    },
    "2653": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5634,
        5638
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2654": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5628,
        5632
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2655": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5620,
        5639
      ],
      "op": "MSTORE8",
      "path": "11"
    },
    "2656": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5620,
        5639
      ],
      "op": "POP",
      "path": "11"
    },
    "2657": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5705,
        5711
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2658": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5700,
        5703
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2659": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5697,
        5712
      ],
      "op": "SUB",
      "path": "11"
    },
    "2660": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5694,
        5761
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA6E"
    },
    "2663": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5694,
        5761
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2664": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5750,
        5751
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2666": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5742,
        5748
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2667": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5738,
        5752
      ],
      "op": "ADD",
      "path": "11"
    },
    "2668": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5730,
        5736
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2669": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5723,
        5753
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2670": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5694,
        5761
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2671": {
      "op": "POP"
    },
    "2672": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5779,
        5782
      ],
      "op": "SWAP4",
      "path": "11",
      "statement": 49
    },
    "2673": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5779,
        5782
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "2674": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5148,
        5787
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2675": {
      "op": "POP"
    },
    "2676": {
      "op": "POP"
    },
    "2677": {
      "op": "POP"
    },
    "2678": {
      "op": "POP"
    },
    "2679": {
      "fn": "BufferChainlink.writeUint8",
      "jump": "o",
      "offset": [
        5148,
        5787
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2680": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8974,
        9649
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2683": {
      "op": "DUP1"
    },
    "2684": {
      "op": "MLOAD"
    },
    "2685": {
      "op": "DUP1"
    },
    "2686": {
      "op": "DUP3"
    },
    "2687": {
      "op": "ADD"
    },
    "2688": {
      "op": "SWAP1"
    },
    "2689": {
      "op": "SWAP2"
    },
    "2690": {
      "op": "MSTORE"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2693": {
      "op": "DUP2"
    },
    "2694": {
      "op": "MSTORE"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2699": {
      "op": "DUP3"
    },
    "2700": {
      "op": "ADD"
    },
    "2701": {
      "op": "MSTORE"
    },
    "2702": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9130,
        9142
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2704": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9130,
        9142
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2705": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9130,
        9142
      ],
      "op": "ADD",
      "path": "11"
    },
    "2706": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9130,
        9142
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2707": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9118,
        9127
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA9C"
    },
    "2710": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9124,
        9127
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2711": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9118,
        9121
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2712": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9118,
        9127
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEAA"
    },
    "2715": {
      "fn": "BufferChainlink.writeInt",
      "jump": "i",
      "offset": [
        9118,
        9127
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2716": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9118,
        9127
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2717": {
      "branch": 62,
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9118,
        9142
      ],
      "op": "GT",
      "path": "11"
    },
    "2718": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9114,
        9187
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2719": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9114,
        9187
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAB0"
    },
    "2722": {
      "branch": 62,
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9114,
        9187
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2723": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9152,
        9180
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 50,
      "value": "0xAB0"
    },
    "2726": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9159,
        9162
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2727": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9165,
        9174
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x988"
    },
    "2730": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9171,
        9174
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2731": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9165,
        9168
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2732": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9165,
        9174
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEAA"
    },
    "2735": {
      "fn": "BufferChainlink.writeInt",
      "jump": "i",
      "offset": [
        9165,
        9174
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2736": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9152,
        9180
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2737": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9193,
        9205
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2739": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9221,
        9222
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2741": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9209,
        9217
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAC0"
    },
    "2744": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9214,
        9217
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2745": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9209,
        9212
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "2748": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9209,
        9217
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE7F"
    },
    "2751": {
      "fn": "BufferChainlink.writeInt",
      "jump": "i",
      "offset": [
        9209,
        9217
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2752": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9209,
        9217
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2753": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9208,
        9222
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xACA"
    },
    "2756": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9208,
        9222
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2757": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9208,
        9222
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2758": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9208,
        9222
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD84"
    },
    "2761": {
      "fn": "BufferChainlink.writeInt",
      "jump": "i",
      "offset": [
        9208,
        9222
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2762": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9208,
        9222
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2763": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9193,
        9222
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2764": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9193,
        9222
      ],
      "op": "POP",
      "path": "11"
    },
    "2765": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9308,
        9311
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2766": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9302,
        9312
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2767": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9423,
        9426
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2768": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9417,
        9420
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2769": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9409,
        9415
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2770": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9405,
        9421
      ],
      "op": "ADD",
      "path": "11"
    },
    "2771": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9401,
        9427
      ],
      "op": "ADD",
      "path": "11"
    },
    "2772": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9479,
        9483
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2773": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9471,
        9475
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2774": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9467,
        9476
      ],
      "op": "NOT",
      "path": "11"
    },
    "2775": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9460,
        9464
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2776": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9454,
        9465
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2777": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9450,
        9477
      ],
      "op": "AND",
      "path": "11"
    },
    "2778": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9447,
        9484
      ],
      "op": "OR",
      "path": "11"
    },
    "2779": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9441,
        9445
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2780": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9434,
        9485
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2781": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9434,
        9485
      ],
      "op": "POP",
      "path": "11"
    },
    "2782": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9567,
        9573
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2783": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9561,
        9574
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2784": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9555,
        9558
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2785": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9550,
        9553
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2786": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9546,
        9559
      ],
      "op": "ADD",
      "path": "11"
    },
    "2787": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9543,
        9575
      ],
      "op": "GT",
      "path": "11"
    },
    "2788": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9540,
        9623
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2789": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9540,
        9623
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAEE"
    },
    "2792": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9540,
        9623
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2793": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9610,
        9613
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2794": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9605,
        9608
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2795": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9601,
        9614
      ],
      "op": "ADD",
      "path": "11"
    },
    "2796": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9593,
        9599
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2797": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9586,
        9615
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2798": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9540,
        9623
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2799": {
      "op": "POP"
    },
    "2800": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9641,
        9644
      ],
      "op": "SWAP5",
      "path": "11",
      "statement": 51
    },
    "2801": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9641,
        9644
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "2802": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8974,
        9649
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "2803": {
      "op": "POP"
    },
    "2804": {
      "op": "POP"
    },
    "2805": {
      "op": "POP"
    },
    "2806": {
      "op": "POP"
    },
    "2807": {
      "op": "POP"
    },
    "2808": {
      "fn": "BufferChainlink.writeInt",
      "jump": "o",
      "offset": [
        8974,
        9649
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2809": {
      "fn": "BufferChainlink.max",
      "offset": [
        1961,
        2085
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2810": {
      "fn": "BufferChainlink.max",
      "offset": [
        2018,
        2025
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2812": {
      "fn": "BufferChainlink.max",
      "offset": [
        2041,
        2042
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2813": {
      "fn": "BufferChainlink.max",
      "offset": [
        2037,
        2038
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2814": {
      "branch": 63,
      "fn": "BufferChainlink.max",
      "offset": [
        2037,
        2042
      ],
      "op": "GT",
      "path": "11"
    },
    "2815": {
      "fn": "BufferChainlink.max",
      "offset": [
        2033,
        2067
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2816": {
      "fn": "BufferChainlink.max",
      "offset": [
        2033,
        2067
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB0A"
    },
    "2819": {
      "branch": 63,
      "fn": "BufferChainlink.max",
      "offset": [
        2033,
        2067
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2820": {
      "op": "POP"
    },
    "2821": {
      "fn": "BufferChainlink.max",
      "offset": [
        2059,
        2060
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 52
    },
    "2822": {
      "fn": "BufferChainlink.max",
      "offset": [
        2052,
        2060
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x275"
    },
    "2825": {
      "fn": "BufferChainlink.max",
      "offset": [
        2052,
        2060
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2826": {
      "fn": "BufferChainlink.max",
      "offset": [
        2033,
        2067
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2827": {
      "op": "POP"
    },
    "2828": {
      "fn": "BufferChainlink.max",
      "offset": [
        2079,
        2080
      ],
      "op": "SWAP2",
      "path": "11",
      "statement": 53
    },
    "2829": {
      "fn": "BufferChainlink.max",
      "offset": [
        1961,
        2085
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2830": {
      "op": "POP"
    },
    "2831": {
      "fn": "BufferChainlink.max",
      "jump": "o",
      "offset": [
        1961,
        2085
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2832": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1801,
        1957
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2833": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1895,
        1902
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2834": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1895,
        1902
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2835": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 54,
      "value": "0xB1C"
    },
    "2838": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1895,
        1898
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2839": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1918,
        1926
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2840": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1908,
        1912
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x747"
    },
    "2843": {
      "fn": "BufferChainlink.resize",
      "jump": "i",
      "offset": [
        1908,
        1927
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2844": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1908,
        1927
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2845": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1908,
        1927
      ],
      "op": "POP",
      "path": "11"
    },
    "2846": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1933,
        1952
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 55,
      "value": "0x7D1"
    },
    "2849": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1940,
        1943
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2850": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1945,
        1951
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2851": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1933,
        1939
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8C1"
    },
    "2854": {
      "fn": "BufferChainlink.resize",
      "jump": "i",
      "offset": [
        1933,
        1952
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2855": {
      "op": "JUMPDEST"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2858": {
      "op": "DUP1"
    },
    "2859": {
      "op": "MLOAD"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2862": {
      "op": "DUP2"
    },
    "2863": {
      "op": "ADD"
    },
    "2864": {
      "op": "DUP3"
    },
    "2865": {
      "op": "MSTORE"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2868": {
      "op": "DUP1"
    },
    "2869": {
      "op": "DUP3"
    },
    "2870": {
      "op": "MSTORE"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2873": {
      "op": "DUP1"
    },
    "2874": {
      "op": "DUP4"
    },
    "2875": {
      "op": "ADD"
    },
    "2876": {
      "op": "DUP3"
    },
    "2877": {
      "op": "SWAP1"
    },
    "2878": {
      "op": "MSTORE"
    },
    "2879": {
      "op": "DUP3"
    },
    "2880": {
      "op": "DUP5"
    },
    "2881": {
      "op": "ADD"
    },
    "2882": {
      "op": "DUP3"
    },
    "2883": {
      "op": "SWAP1"
    },
    "2884": {
      "op": "MSTORE"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2887": {
      "op": "DUP1"
    },
    "2888": {
      "op": "DUP5"
    },
    "2889": {
      "op": "ADD"
    },
    "2890": {
      "op": "DUP4"
    },
    "2891": {
      "op": "SWAP1"
    },
    "2892": {
      "op": "MSTORE"
    },
    "2893": {
      "op": "DUP5"
    },
    "2894": {
      "op": "MLOAD"
    },
    "2895": {
      "op": "DUP1"
    },
    "2896": {
      "op": "DUP7"
    },
    "2897": {
      "op": "ADD"
    },
    "2898": {
      "op": "SWAP1"
    },
    "2899": {
      "op": "SWAP6"
    },
    "2900": {
      "op": "MSTORE"
    },
    "2901": {
      "op": "DUP5"
    },
    "2902": {
      "op": "MSTORE"
    },
    "2903": {
      "op": "DUP4"
    },
    "2904": {
      "op": "ADD"
    },
    "2905": {
      "op": "MSTORE"
    },
    "2906": {
      "op": "SWAP1"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2909": {
      "op": "DUP3"
    },
    "2910": {
      "op": "ADD"
    },
    "2911": {
      "op": "MSTORE"
    },
    "2912": {
      "op": "SWAP1"
    },
    "2913": {
      "jump": "o",
      "op": "JUMP"
    },
    "2914": {
      "op": "JUMPDEST"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2917": {
      "op": "DUP1"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2920": {
      "op": "DUP4"
    },
    "2921": {
      "op": "DUP6"
    },
    "2922": {
      "op": "SUB"
    },
    "2923": {
      "op": "SLT"
    },
    "2924": {
      "op": "ISZERO"
    },
    "2925": {
      "op": "PUSH2",
      "value": "0xB75"
    },
    "2928": {
      "op": "JUMPI"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2931": {
      "op": "DUP1"
    },
    "2932": {
      "op": "REVERT"
    },
    "2933": {
      "op": "JUMPDEST"
    },
    "2934": {
      "op": "POP"
    },
    "2935": {
      "op": "POP"
    },
    "2936": {
      "op": "DUP1"
    },
    "2937": {
      "op": "CALLDATALOAD"
    },
    "2938": {
      "op": "SWAP3"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2941": {
      "op": "SWAP1"
    },
    "2942": {
      "op": "SWAP2"
    },
    "2943": {
      "op": "ADD"
    },
    "2944": {
      "op": "CALLDATALOAD"
    },
    "2945": {
      "op": "SWAP2"
    },
    "2946": {
      "op": "POP"
    },
    "2947": {
      "jump": "o",
      "op": "JUMP"
    },
    "2948": {
      "op": "JUMPDEST"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2951": {
      "op": "DUP1"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2954": {
      "op": "DUP4"
    },
    "2955": {
      "op": "DUP6"
    },
    "2956": {
      "op": "SUB"
    },
    "2957": {
      "op": "SLT"
    },
    "2958": {
      "op": "ISZERO"
    },
    "2959": {
      "op": "PUSH2",
      "value": "0xB97"
    },
    "2962": {
      "op": "JUMPI"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2965": {
      "op": "DUP1"
    },
    "2966": {
      "op": "REVERT"
    },
    "2967": {
      "op": "JUMPDEST"
    },
    "2968": {
      "op": "DUP3"
    },
    "2969": {
      "op": "CALLDATALOAD"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2976": {
      "op": "SHL"
    },
    "2977": {
      "op": "SUB"
    },
    "2978": {
      "op": "DUP2"
    },
    "2979": {
      "op": "AND"
    },
    "2980": {
      "op": "DUP2"
    },
    "2981": {
      "op": "EQ"
    },
    "2982": {
      "op": "PUSH2",
      "value": "0xBAE"
    },
    "2985": {
      "op": "JUMPI"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2988": {
      "op": "DUP1"
    },
    "2989": {
      "op": "REVERT"
    },
    "2990": {
      "op": "JUMPDEST"
    },
    "2991": {
      "op": "SWAP2"
    },
    "2992": {
      "op": "POP"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2995": {
      "op": "DUP4"
    },
    "2996": {
      "op": "ADD"
    },
    "2997": {
      "op": "CALLDATALOAD"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3004": {
      "op": "SHL"
    },
    "3005": {
      "op": "SUB"
    },
    "3006": {
      "op": "NOT"
    },
    "3007": {
      "op": "DUP2"
    },
    "3008": {
      "op": "AND"
    },
    "3009": {
      "op": "DUP2"
    },
    "3010": {
      "op": "EQ"
    },
    "3011": {
      "op": "PUSH2",
      "value": "0xBCB"
    },
    "3014": {
      "op": "JUMPI"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3017": {
      "op": "DUP1"
    },
    "3018": {
      "op": "REVERT"
    },
    "3019": {
      "op": "JUMPDEST"
    },
    "3020": {
      "op": "DUP1"
    },
    "3021": {
      "op": "SWAP2"
    },
    "3022": {
      "op": "POP"
    },
    "3023": {
      "op": "POP"
    },
    "3024": {
      "op": "SWAP3"
    },
    "3025": {
      "op": "POP"
    },
    "3026": {
      "op": "SWAP3"
    },
    "3027": {
      "op": "SWAP1"
    },
    "3028": {
      "op": "POP"
    },
    "3029": {
      "jump": "o",
      "op": "JUMP"
    },
    "3030": {
      "op": "JUMPDEST"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3035": {
      "op": "DUP3"
    },
    "3036": {
      "op": "DUP5"
    },
    "3037": {
      "op": "SUB"
    },
    "3038": {
      "op": "SLT"
    },
    "3039": {
      "op": "ISZERO"
    },
    "3040": {
      "op": "PUSH2",
      "value": "0xBE8"
    },
    "3043": {
      "op": "JUMPI"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3046": {
      "op": "DUP1"
    },
    "3047": {
      "op": "REVERT"
    },
    "3048": {
      "op": "JUMPDEST"
    },
    "3049": {
      "op": "POP"
    },
    "3050": {
      "op": "CALLDATALOAD"
    },
    "3051": {
      "op": "SWAP2"
    },
    "3052": {
      "op": "SWAP1"
    },
    "3053": {
      "op": "POP"
    },
    "3054": {
      "jump": "o",
      "op": "JUMP"
    },
    "3055": {
      "op": "JUMPDEST"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3058": {
      "op": "DUP2"
    },
    "3059": {
      "op": "MLOAD"
    },
    "3060": {
      "op": "DUP1"
    },
    "3061": {
      "op": "DUP5"
    },
    "3062": {
      "op": "MSTORE"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3065": {
      "op": "JUMPDEST"
    },
    "3066": {
      "op": "DUP2"
    },
    "3067": {
      "op": "DUP2"
    },
    "3068": {
      "op": "LT"
    },
    "3069": {
      "op": "ISZERO"
    },
    "3070": {
      "op": "PUSH2",
      "value": "0xC15"
    },
    "3073": {
      "op": "JUMPI"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3076": {
      "op": "DUP2"
    },
    "3077": {
      "op": "DUP6"
    },
    "3078": {
      "op": "ADD"
    },
    "3079": {
      "op": "DUP2"
    },
    "3080": {
      "op": "ADD"
    },
    "3081": {
      "op": "MLOAD"
    },
    "3082": {
      "op": "DUP7"
    },
    "3083": {
      "op": "DUP4"
    },
    "3084": {
      "op": "ADD"
    },
    "3085": {
      "op": "DUP3"
    },
    "3086": {
      "op": "ADD"
    },
    "3087": {
      "op": "MSTORE"
    },
    "3088": {
      "op": "ADD"
    },
    "3089": {
      "op": "PUSH2",
      "value": "0xBF9"
    },
    "3092": {
      "op": "JUMP"
    },
    "3093": {
      "op": "JUMPDEST"
    },
    "3094": {
      "op": "DUP2"
    },
    "3095": {
      "op": "DUP2"
    },
    "3096": {
      "op": "GT"
    },
    "3097": {
      "op": "ISZERO"
    },
    "3098": {
      "op": "PUSH2",
      "value": "0xC27"
    },
    "3101": {
      "op": "JUMPI"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3106": {
      "op": "DUP4"
    },
    "3107": {
      "op": "DUP8"
    },
    "3108": {
      "op": "ADD"
    },
    "3109": {
      "op": "ADD"
    },
    "3110": {
      "op": "MSTORE"
    },
    "3111": {
      "op": "JUMPDEST"
    },
    "3112": {
      "op": "POP"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3115": {
      "op": "ADD"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3118": {
      "op": "NOT"
    },
    "3119": {
      "op": "AND"
    },
    "3120": {
      "op": "SWAP3"
    },
    "3121": {
      "op": "SWAP1"
    },
    "3122": {
      "op": "SWAP3"
    },
    "3123": {
      "op": "ADD"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3126": {
      "op": "ADD"
    },
    "3127": {
      "op": "SWAP3"
    },
    "3128": {
      "op": "SWAP2"
    },
    "3129": {
      "op": "POP"
    },
    "3130": {
      "op": "POP"
    },
    "3131": {
      "jump": "o",
      "op": "JUMP"
    },
    "3132": {
      "op": "JUMPDEST"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3135": {
      "op": "DUP2"
    },
    "3136": {
      "op": "MSTORE"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3139": {
      "op": "PUSH2",
      "value": "0x3AB"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3144": {
      "op": "DUP4"
    },
    "3145": {
      "op": "ADD"
    },
    "3146": {
      "op": "DUP5"
    },
    "3147": {
      "op": "PUSH2",
      "value": "0xBEF"
    },
    "3150": {
      "jump": "i",
      "op": "JUMP"
    },
    "3151": {
      "op": "JUMPDEST"
    },
    "3152": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3159": {
      "op": "SHL"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3162": {
      "op": "MSTORE"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3167": {
      "op": "MSTORE"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3172": {
      "op": "REVERT"
    },
    "3173": {
      "op": "JUMPDEST"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3178": {
      "op": "DUP3"
    },
    "3179": {
      "op": "DUP5"
    },
    "3180": {
      "op": "SUB"
    },
    "3181": {
      "op": "SLT"
    },
    "3182": {
      "op": "ISZERO"
    },
    "3183": {
      "op": "PUSH2",
      "value": "0xC77"
    },
    "3186": {
      "op": "JUMPI"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3189": {
      "op": "DUP1"
    },
    "3190": {
      "op": "REVERT"
    },
    "3191": {
      "op": "JUMPDEST"
    },
    "3192": {
      "op": "DUP2"
    },
    "3193": {
      "op": "CALLDATALOAD"
    },
    "3194": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3203": {
      "op": "DUP1"
    },
    "3204": {
      "op": "DUP3"
    },
    "3205": {
      "op": "GT"
    },
    "3206": {
      "op": "ISZERO"
    },
    "3207": {
      "op": "PUSH2",
      "value": "0xC8F"
    },
    "3210": {
      "op": "JUMPI"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3213": {
      "op": "DUP1"
    },
    "3214": {
      "op": "REVERT"
    },
    "3215": {
      "op": "JUMPDEST"
    },
    "3216": {
      "op": "DUP2"
    },
    "3217": {
      "op": "DUP5"
    },
    "3218": {
      "op": "ADD"
    },
    "3219": {
      "op": "SWAP2"
    },
    "3220": {
      "op": "POP"
    },
    "3221": {
      "op": "DUP5"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3224": {
      "op": "DUP4"
    },
    "3225": {
      "op": "ADD"
    },
    "3226": {
      "op": "SLT"
    },
    "3227": {
      "op": "PUSH2",
      "value": "0xCA3"
    },
    "3230": {
      "op": "JUMPI"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3233": {
      "op": "DUP1"
    },
    "3234": {
      "op": "REVERT"
    },
    "3235": {
      "op": "JUMPDEST"
    },
    "3236": {
      "op": "DUP2"
    },
    "3237": {
      "op": "CALLDATALOAD"
    },
    "3238": {
      "op": "DUP2"
    },
    "3239": {
      "op": "DUP2"
    },
    "3240": {
      "op": "GT"
    },
    "3241": {
      "op": "ISZERO"
    },
    "3242": {
      "op": "PUSH2",
      "value": "0xCB5"
    },
    "3245": {
      "op": "JUMPI"
    },
    "3246": {
      "op": "PUSH2",
      "value": "0xCB5"
    },
    "3249": {
      "op": "PUSH2",
      "value": "0xC4F"
    },
    "3252": {
      "jump": "i",
      "op": "JUMP"
    },
    "3253": {
      "op": "JUMPDEST"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3256": {
      "op": "MLOAD"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3259": {
      "op": "DUP3"
    },
    "3260": {
      "op": "ADD"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3263": {
      "op": "NOT"
    },
    "3264": {
      "op": "SWAP1"
    },
    "3265": {
      "op": "DUP2"
    },
    "3266": {
      "op": "AND"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3269": {
      "op": "ADD"
    },
    "3270": {
      "op": "AND"
    },
    "3271": {
      "op": "DUP2"
    },
    "3272": {
      "op": "ADD"
    },
    "3273": {
      "op": "SWAP1"
    },
    "3274": {
      "op": "DUP4"
    },
    "3275": {
      "op": "DUP3"
    },
    "3276": {
      "op": "GT"
    },
    "3277": {
      "op": "DUP2"
    },
    "3278": {
      "op": "DUP4"
    },
    "3279": {
      "op": "LT"
    },
    "3280": {
      "op": "OR"
    },
    "3281": {
      "op": "ISZERO"
    },
    "3282": {
      "op": "PUSH2",
      "value": "0xCDD"
    },
    "3285": {
      "op": "JUMPI"
    },
    "3286": {
      "op": "PUSH2",
      "value": "0xCDD"
    },
    "3289": {
      "op": "PUSH2",
      "value": "0xC4F"
    },
    "3292": {
      "jump": "i",
      "op": "JUMP"
    },
    "3293": {
      "op": "JUMPDEST"
    },
    "3294": {
      "op": "DUP2"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3297": {
      "op": "MSTORE"
    },
    "3298": {
      "op": "DUP3"
    },
    "3299": {
      "op": "DUP2"
    },
    "3300": {
      "op": "MSTORE"
    },
    "3301": {
      "op": "DUP8"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3304": {
      "op": "DUP5"
    },
    "3305": {
      "op": "DUP8"
    },
    "3306": {
      "op": "ADD"
    },
    "3307": {
      "op": "ADD"
    },
    "3308": {
      "op": "GT"
    },
    "3309": {
      "op": "ISZERO"
    },
    "3310": {
      "op": "PUSH2",
      "value": "0xCF6"
    },
    "3313": {
      "op": "JUMPI"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3316": {
      "op": "DUP1"
    },
    "3317": {
      "op": "REVERT"
    },
    "3318": {
      "op": "JUMPDEST"
    },
    "3319": {
      "op": "DUP3"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3322": {
      "op": "DUP7"
    },
    "3323": {
      "op": "ADD"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3326": {
      "op": "DUP4"
    },
    "3327": {
      "op": "ADD"
    },
    "3328": {
      "op": "CALLDATACOPY"
    },
    "3329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3331": {
      "op": "SWAP3"
    },
    "3332": {
      "op": "DUP2"
    },
    "3333": {
      "op": "ADD"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3336": {
      "op": "ADD"
    },
    "3337": {
      "op": "SWAP3"
    },
    "3338": {
      "op": "SWAP1"
    },
    "3339": {
      "op": "SWAP3"
    },
    "3340": {
      "op": "MSTORE"
    },
    "3341": {
      "op": "POP"
    },
    "3342": {
      "op": "SWAP6"
    },
    "3343": {
      "op": "SWAP5"
    },
    "3344": {
      "op": "POP"
    },
    "3345": {
      "op": "POP"
    },
    "3346": {
      "op": "POP"
    },
    "3347": {
      "op": "POP"
    },
    "3348": {
      "op": "POP"
    },
    "3349": {
      "jump": "o",
      "op": "JUMP"
    },
    "3350": {
      "op": "JUMPDEST"
    },
    "3351": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3358": {
      "op": "SHL"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3361": {
      "op": "MSTORE"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3366": {
      "op": "MSTORE"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3371": {
      "op": "REVERT"
    },
    "3372": {
      "op": "JUMPDEST"
    },
    "3373": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3380": {
      "op": "SHL"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3383": {
      "op": "MSTORE"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3388": {
      "op": "MSTORE"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3393": {
      "op": "REVERT"
    },
    "3394": {
      "op": "JUMPDEST"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3399": {
      "op": "DUP3"
    },
    "3400": {
      "op": "AND"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3403": {
      "op": "DUP2"
    },
    "3404": {
      "op": "SUB"
    },
    "3405": {
      "op": "PUSH2",
      "value": "0xD58"
    },
    "3408": {
      "op": "JUMPI"
    },
    "3409": {
      "op": "PUSH2",
      "value": "0xD58"
    },
    "3412": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "3415": {
      "jump": "i",
      "op": "JUMP"
    },
    "3416": {
      "op": "JUMPDEST"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3419": {
      "op": "ADD"
    },
    "3420": {
      "op": "SWAP3"
    },
    "3421": {
      "op": "SWAP2"
    },
    "3422": {
      "op": "POP"
    },
    "3423": {
      "op": "POP"
    },
    "3424": {
      "jump": "o",
      "op": "JUMP"
    },
    "3425": {
      "op": "JUMPDEST"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3430": {
      "op": "DUP3"
    },
    "3431": {
      "op": "AND"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3434": {
      "op": "DUP5"
    },
    "3435": {
      "op": "AND"
    },
    "3436": {
      "op": "DUP1"
    },
    "3437": {
      "op": "DUP3"
    },
    "3438": {
      "op": "LT"
    },
    "3439": {
      "op": "ISZERO"
    },
    "3440": {
      "op": "PUSH2",
      "value": "0xD7B"
    },
    "3443": {
      "op": "JUMPI"
    },
    "3444": {
      "op": "PUSH2",
      "value": "0xD7B"
    },
    "3447": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "3450": {
      "jump": "i",
      "op": "JUMP"
    },
    "3451": {
      "op": "JUMPDEST"
    },
    "3452": {
      "op": "SWAP1"
    },
    "3453": {
      "op": "SUB"
    },
    "3454": {
      "op": "SWAP4"
    },
    "3455": {
      "op": "SWAP3"
    },
    "3456": {
      "op": "POP"
    },
    "3457": {
      "op": "POP"
    },
    "3458": {
      "op": "POP"
    },
    "3459": {
      "jump": "o",
      "op": "JUMP"
    },
    "3460": {
      "op": "JUMPDEST"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3463": {
      "op": "DUP3"
    },
    "3464": {
      "op": "DUP3"
    },
    "3465": {
      "op": "LT"
    },
    "3466": {
      "op": "ISZERO"
    },
    "3467": {
      "op": "PUSH2",
      "value": "0xD96"
    },
    "3470": {
      "op": "JUMPI"
    },
    "3471": {
      "op": "PUSH2",
      "value": "0xD96"
    },
    "3474": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "3477": {
      "jump": "i",
      "op": "JUMP"
    },
    "3478": {
      "op": "JUMPDEST"
    },
    "3479": {
      "op": "POP"
    },
    "3480": {
      "op": "SUB"
    },
    "3481": {
      "op": "SWAP1"
    },
    "3482": {
      "jump": "o",
      "op": "JUMP"
    },
    "3483": {
      "op": "JUMPDEST"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3486": {
      "op": "DUP2"
    },
    "3487": {
      "op": "DUP2"
    },
    "3488": {
      "op": "JUMPDEST"
    },
    "3489": {
      "op": "DUP1"
    },
    "3490": {
      "op": "DUP6"
    },
    "3491": {
      "op": "GT"
    },
    "3492": {
      "op": "ISZERO"
    },
    "3493": {
      "op": "PUSH2",
      "value": "0xDD6"
    },
    "3496": {
      "op": "JUMPI"
    },
    "3497": {
      "op": "DUP2"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3500": {
      "op": "NOT"
    },
    "3501": {
      "op": "DIV"
    },
    "3502": {
      "op": "DUP3"
    },
    "3503": {
      "op": "GT"
    },
    "3504": {
      "op": "ISZERO"
    },
    "3505": {
      "op": "PUSH2",
      "value": "0xDBC"
    },
    "3508": {
      "op": "JUMPI"
    },
    "3509": {
      "op": "PUSH2",
      "value": "0xDBC"
    },
    "3512": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "3515": {
      "jump": "i",
      "op": "JUMP"
    },
    "3516": {
      "op": "JUMPDEST"
    },
    "3517": {
      "op": "DUP1"
    },
    "3518": {
      "op": "DUP6"
    },
    "3519": {
      "op": "AND"
    },
    "3520": {
      "op": "ISZERO"
    },
    "3521": {
      "op": "PUSH2",
      "value": "0xDC9"
    },
    "3524": {
      "op": "JUMPI"
    },
    "3525": {
      "op": "SWAP2"
    },
    "3526": {
      "op": "DUP2"
    },
    "3527": {
      "op": "MUL"
    },
    "3528": {
      "op": "SWAP2"
    },
    "3529": {
      "op": "JUMPDEST"
    },
    "3530": {
      "op": "SWAP4"
    },
    "3531": {
      "op": "DUP5"
    },
    "3532": {
      "op": "SHR"
    },
    "3533": {
      "op": "SWAP4"
    },
    "3534": {
      "op": "SWAP1"
    },
    "3535": {
      "op": "DUP1"
    },
    "3536": {
      "op": "MUL"
    },
    "3537": {
      "op": "SWAP1"
    },
    "3538": {
      "op": "PUSH2",
      "value": "0xDA0"
    },
    "3541": {
      "op": "JUMP"
    },
    "3542": {
      "op": "JUMPDEST"
    },
    "3543": {
      "op": "POP"
    },
    "3544": {
      "op": "SWAP3"
    },
    "3545": {
      "op": "POP"
    },
    "3546": {
      "op": "SWAP3"
    },
    "3547": {
      "op": "SWAP1"
    },
    "3548": {
      "op": "POP"
    },
    "3549": {
      "jump": "o",
      "op": "JUMP"
    },
    "3550": {
      "op": "JUMPDEST"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3553": {
      "op": "DUP3"
    },
    "3554": {
      "op": "PUSH2",
      "value": "0xDED"
    },
    "3557": {
      "op": "JUMPI"
    },
    "3558": {
      "op": "POP"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3561": {
      "op": "PUSH2",
      "value": "0x275"
    },
    "3564": {
      "op": "JUMP"
    },
    "3565": {
      "op": "JUMPDEST"
    },
    "3566": {
      "op": "DUP2"
    },
    "3567": {
      "op": "PUSH2",
      "value": "0xDFA"
    },
    "3570": {
      "op": "JUMPI"
    },
    "3571": {
      "op": "POP"
    },
    "3572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3574": {
      "op": "PUSH2",
      "value": "0x275"
    },
    "3577": {
      "op": "JUMP"
    },
    "3578": {
      "op": "JUMPDEST"
    },
    "3579": {
      "op": "DUP2"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3582": {
      "op": "DUP2"
    },
    "3583": {
      "op": "EQ"
    },
    "3584": {
      "op": "PUSH2",
      "value": "0xE10"
    },
    "3587": {
      "op": "JUMPI"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3590": {
      "op": "DUP2"
    },
    "3591": {
      "op": "EQ"
    },
    "3592": {
      "op": "PUSH2",
      "value": "0xE1A"
    },
    "3595": {
      "op": "JUMPI"
    },
    "3596": {
      "op": "PUSH2",
      "value": "0xE36"
    },
    "3599": {
      "op": "JUMP"
    },
    "3600": {
      "op": "JUMPDEST"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3603": {
      "op": "SWAP2"
    },
    "3604": {
      "op": "POP"
    },
    "3605": {
      "op": "POP"
    },
    "3606": {
      "op": "PUSH2",
      "value": "0x275"
    },
    "3609": {
      "op": "JUMP"
    },
    "3610": {
      "op": "JUMPDEST"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3613": {
      "op": "DUP5"
    },
    "3614": {
      "op": "GT"
    },
    "3615": {
      "op": "ISZERO"
    },
    "3616": {
      "op": "PUSH2",
      "value": "0xE2B"
    },
    "3619": {
      "op": "JUMPI"
    },
    "3620": {
      "op": "PUSH2",
      "value": "0xE2B"
    },
    "3623": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "3626": {
      "jump": "i",
      "op": "JUMP"
    },
    "3627": {
      "op": "JUMPDEST"
    },
    "3628": {
      "op": "POP"
    },
    "3629": {
      "op": "POP"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3632": {
      "op": "DUP3"
    },
    "3633": {
      "op": "SHL"
    },
    "3634": {
      "op": "PUSH2",
      "value": "0x275"
    },
    "3637": {
      "op": "JUMP"
    },
    "3638": {
      "op": "JUMPDEST"
    },
    "3639": {
      "op": "POP"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3642": {
      "op": "DUP4"
    },
    "3643": {
      "op": "LT"
    },
    "3644": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "3647": {
      "op": "DUP4"
    },
    "3648": {
      "op": "LT"
    },
    "3649": {
      "op": "AND"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "3652": {
      "op": "DUP5"
    },
    "3653": {
      "op": "LT"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "3656": {
      "op": "DUP5"
    },
    "3657": {
      "op": "LT"
    },
    "3658": {
      "op": "AND"
    },
    "3659": {
      "op": "OR"
    },
    "3660": {
      "op": "ISZERO"
    },
    "3661": {
      "op": "PUSH2",
      "value": "0xE59"
    },
    "3664": {
      "op": "JUMPI"
    },
    "3665": {
      "op": "POP"
    },
    "3666": {
      "op": "DUP2"
    },
    "3667": {
      "op": "DUP2"
    },
    "3668": {
      "op": "EXP"
    },
    "3669": {
      "op": "PUSH2",
      "value": "0x275"
    },
    "3672": {
      "op": "JUMP"
    },
    "3673": {
      "op": "JUMPDEST"
    },
    "3674": {
      "op": "PUSH2",
      "value": "0xE63"
    },
    "3677": {
      "op": "DUP4"
    },
    "3678": {
      "op": "DUP4"
    },
    "3679": {
      "op": "PUSH2",
      "value": "0xD9B"
    },
    "3682": {
      "jump": "i",
      "op": "JUMP"
    },
    "3683": {
      "op": "JUMPDEST"
    },
    "3684": {
      "op": "DUP1"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3687": {
      "op": "NOT"
    },
    "3688": {
      "op": "DIV"
    },
    "3689": {
      "op": "DUP3"
    },
    "3690": {
      "op": "GT"
    },
    "3691": {
      "op": "ISZERO"
    },
    "3692": {
      "op": "PUSH2",
      "value": "0xE77"
    },
    "3695": {
      "op": "JUMPI"
    },
    "3696": {
      "op": "PUSH2",
      "value": "0xE77"
    },
    "3699": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "3702": {
      "jump": "i",
      "op": "JUMP"
    },
    "3703": {
      "op": "JUMPDEST"
    },
    "3704": {
      "op": "MUL"
    },
    "3705": {
      "op": "SWAP4"
    },
    "3706": {
      "op": "SWAP3"
    },
    "3707": {
      "op": "POP"
    },
    "3708": {
      "op": "POP"
    },
    "3709": {
      "op": "POP"
    },
    "3710": {
      "jump": "o",
      "op": "JUMP"
    },
    "3711": {
      "op": "JUMPDEST"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3714": {
      "op": "PUSH2",
      "value": "0x3AB"
    },
    "3717": {
      "op": "DUP4"
    },
    "3718": {
      "op": "DUP4"
    },
    "3719": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3722": {
      "jump": "i",
      "op": "JUMP"
    },
    "3723": {
      "op": "JUMPDEST"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3726": {
      "op": "DUP2"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3729": {
      "op": "NOT"
    },
    "3730": {
      "op": "DIV"
    },
    "3731": {
      "op": "DUP4"
    },
    "3732": {
      "op": "GT"
    },
    "3733": {
      "op": "DUP3"
    },
    "3734": {
      "op": "ISZERO"
    },
    "3735": {
      "op": "ISZERO"
    },
    "3736": {
      "op": "AND"
    },
    "3737": {
      "op": "ISZERO"
    },
    "3738": {
      "op": "PUSH2",
      "value": "0xEA5"
    },
    "3741": {
      "op": "JUMPI"
    },
    "3742": {
      "op": "PUSH2",
      "value": "0xEA5"
    },
    "3745": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "3748": {
      "jump": "i",
      "op": "JUMP"
    },
    "3749": {
      "op": "JUMPDEST"
    },
    "3750": {
      "op": "POP"
    },
    "3751": {
      "op": "MUL"
    },
    "3752": {
      "op": "SWAP1"
    },
    "3753": {
      "jump": "o",
      "op": "JUMP"
    },
    "3754": {
      "op": "JUMPDEST"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3757": {
      "op": "DUP3"
    },
    "3758": {
      "op": "NOT"
    },
    "3759": {
      "op": "DUP3"
    },
    "3760": {
      "op": "GT"
    },
    "3761": {
      "op": "ISZERO"
    },
    "3762": {
      "op": "PUSH2",
      "value": "0xEBD"
    },
    "3765": {
      "op": "JUMPI"
    },
    "3766": {
      "op": "PUSH2",
      "value": "0xEBD"
    },
    "3769": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "3772": {
      "jump": "i",
      "op": "JUMP"
    },
    "3773": {
      "op": "JUMPDEST"
    },
    "3774": {
      "op": "POP"
    },
    "3775": {
      "op": "ADD"
    },
    "3776": {
      "op": "SWAP1"
    },
    "3777": {
      "jump": "o",
      "op": "JUMP"
    },
    "3778": {
      "op": "JUMPDEST"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3783": {
      "op": "DUP3"
    },
    "3784": {
      "op": "ADD"
    },
    "3785": {
      "op": "PUSH2",
      "value": "0xED4"
    },
    "3788": {
      "op": "JUMPI"
    },
    "3789": {
      "op": "PUSH2",
      "value": "0xED4"
    },
    "3792": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "3795": {
      "jump": "i",
      "op": "JUMP"
    },
    "3796": {
      "op": "JUMPDEST"
    },
    "3797": {
      "op": "POP"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3800": {
      "op": "ADD"
    },
    "3801": {
      "op": "SWAP1"
    },
    "3802": {
      "jump": "o",
      "op": "JUMP"
    },
    "3803": {
      "op": "JUMPDEST"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3810": {
      "op": "SHL"
    },
    "3811": {
      "op": "SUB"
    },
    "3812": {
      "op": "DUP10"
    },
    "3813": {
      "op": "DUP2"
    },
    "3814": {
      "op": "AND"
    },
    "3815": {
      "op": "DUP3"
    },
    "3816": {
      "op": "MSTORE"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3819": {
      "op": "DUP3"
    },
    "3820": {
      "op": "ADD"
    },
    "3821": {
      "op": "DUP10"
    },
    "3822": {
      "op": "SWAP1"
    },
    "3823": {
      "op": "MSTORE"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3826": {
      "op": "DUP3"
    },
    "3827": {
      "op": "ADD"
    },
    "3828": {
      "op": "DUP9"
    },
    "3829": {
      "op": "SWAP1"
    },
    "3830": {
      "op": "MSTORE"
    },
    "3831": {
      "op": "DUP7"
    },
    "3832": {
      "op": "AND"
    },
    "3833": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3835": {
      "op": "DUP3"
    },
    "3836": {
      "op": "ADD"
    },
    "3837": {
      "op": "MSTORE"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3844": {
      "op": "SHL"
    },
    "3845": {
      "op": "SUB"
    },
    "3846": {
      "op": "NOT"
    },
    "3847": {
      "op": "DUP6"
    },
    "3848": {
      "op": "AND"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3851": {
      "op": "DUP3"
    },
    "3852": {
      "op": "ADD"
    },
    "3853": {
      "op": "MSTORE"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3856": {
      "op": "DUP2"
    },
    "3857": {
      "op": "ADD"
    },
    "3858": {
      "op": "DUP5"
    },
    "3859": {
      "op": "SWAP1"
    },
    "3860": {
      "op": "MSTORE"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3863": {
      "op": "DUP2"
    },
    "3864": {
      "op": "ADD"
    },
    "3865": {
      "op": "DUP4"
    },
    "3866": {
      "op": "SWAP1"
    },
    "3867": {
      "op": "MSTORE"
    },
    "3868": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3873": {
      "op": "DUP3"
    },
    "3874": {
      "op": "ADD"
    },
    "3875": {
      "op": "DUP2"
    },
    "3876": {
      "op": "SWAP1"
    },
    "3877": {
      "op": "MSTORE"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3880": {
      "op": "SWAP1"
    },
    "3881": {
      "op": "PUSH2",
      "value": "0xF34"
    },
    "3884": {
      "op": "DUP4"
    },
    "3885": {
      "op": "DUP3"
    },
    "3886": {
      "op": "ADD"
    },
    "3887": {
      "op": "DUP6"
    },
    "3888": {
      "op": "PUSH2",
      "value": "0xBEF"
    },
    "3891": {
      "jump": "i",
      "op": "JUMP"
    },
    "3892": {
      "op": "JUMPDEST"
    },
    "3893": {
      "op": "SWAP12"
    },
    "3894": {
      "op": "SWAP11"
    },
    "3895": {
      "op": "POP"
    },
    "3896": {
      "op": "POP"
    },
    "3897": {
      "op": "POP"
    },
    "3898": {
      "op": "POP"
    },
    "3899": {
      "op": "POP"
    },
    "3900": {
      "op": "POP"
    },
    "3901": {
      "op": "POP"
    },
    "3902": {
      "op": "POP"
    },
    "3903": {
      "op": "POP"
    },
    "3904": {
      "op": "POP"
    },
    "3905": {
      "op": "POP"
    },
    "3906": {
      "jump": "o",
      "op": "JUMP"
    },
    "3907": {
      "op": "JUMPDEST"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3910": {
      "op": "DUP1"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3913": {
      "op": "SHL"
    },
    "3914": {
      "op": "SUB"
    },
    "3915": {
      "op": "DUP5"
    },
    "3916": {
      "op": "AND"
    },
    "3917": {
      "op": "DUP2"
    },
    "3918": {
      "op": "MSTORE"
    },
    "3919": {
      "op": "DUP3"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3922": {
      "op": "DUP3"
    },
    "3923": {
      "op": "ADD"
    },
    "3924": {
      "op": "MSTORE"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3929": {
      "op": "DUP3"
    },
    "3930": {
      "op": "ADD"
    },
    "3931": {
      "op": "MSTORE"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3934": {
      "op": "PUSH2",
      "value": "0x4CD"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3939": {
      "op": "DUP4"
    },
    "3940": {
      "op": "ADD"
    },
    "3941": {
      "op": "DUP5"
    },
    "3942": {
      "op": "PUSH2",
      "value": "0xBEF"
    },
    "3945": {
      "jump": "i",
      "op": "JUMP"
    },
    "3946": {
      "op": "JUMPDEST"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3951": {
      "op": "DUP3"
    },
    "3952": {
      "op": "DUP5"
    },
    "3953": {
      "op": "SUB"
    },
    "3954": {
      "op": "SLT"
    },
    "3955": {
      "op": "ISZERO"
    },
    "3956": {
      "op": "PUSH2",
      "value": "0xF7C"
    },
    "3959": {
      "op": "JUMPI"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3962": {
      "op": "DUP1"
    },
    "3963": {
      "op": "REVERT"
    },
    "3964": {
      "op": "JUMPDEST"
    },
    "3965": {
      "op": "DUP2"
    },
    "3966": {
      "op": "MLOAD"
    },
    "3967": {
      "op": "DUP1"
    },
    "3968": {
      "op": "ISZERO"
    },
    "3969": {
      "op": "ISZERO"
    },
    "3970": {
      "op": "DUP2"
    },
    "3971": {
      "op": "EQ"
    },
    "3972": {
      "op": "PUSH2",
      "value": "0x3AB"
    },
    "3975": {
      "op": "JUMPI"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3978": {
      "op": "DUP1"
    },
    "3979": {
      "op": "REVERT"
    },
    "3980": {
      "op": "JUMPDEST"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3983": {
      "op": "DUP3"
    },
    "3984": {
      "op": "PUSH2",
      "value": "0xFA9"
    },
    "3987": {
      "op": "JUMPI"
    },
    "3988": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3995": {
      "op": "SHL"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3998": {
      "op": "MSTORE"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4003": {
      "op": "MSTORE"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4008": {
      "op": "REVERT"
    },
    "4009": {
      "op": "JUMPDEST"
    },
    "4010": {
      "op": "POP"
    },
    "4011": {
      "op": "MOD"
    },
    "4012": {
      "op": "SWAP1"
    },
    "4013": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "21c82c2e7f287690b2430d2f5511d576ac00a713",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@chainlink/contracts/src/v0.8/ChainlinkClient.sol\";\n\n/**\n * Request testnet LINK and ETH here: https://faucets.chain.link/\n * Find information on LINK Token Contracts and get the latest ETH and LINK faucets here: https://docs.chain.link/docs/link-token-contracts/\n */\n\n/**\n * THIS IS AN EXAMPLE CONTRACT WHICH USES HARDCODED VALUES FOR CLARITY.\n * PLEASE DO NOT USE THIS CODE IN PRODUCTION.\n */\ncontract APIConsumer is ChainlinkClient {\n    using Chainlink for Chainlink.Request;\n  \n    bytes32 public api_data;\n    address private oracle;\n    bytes32 private jobId;\n    uint256 private fee;\n    \n    /**\n     * Network: Kovan\n     * Oracle: 0xc57B33452b4F7BB189bB5AfaE9cc4aBa1f7a4FD8 (Chainlink Devrel   \n     * Node)\n     * Job ID: d5270d1c311941d0b08bead21fea7747\n     * Fee: 0.1 LINK\n     */\n    constructor() {\n        setPublicChainlinkToken();\n        oracle = 0x3A56aE4a2831C3d3514b5D7Af5578E45eBDb7a40; // LinkRiver Rinkeby\n        jobId = \"2e8c6b68ff064d32af9b1019d5d59bad\"; //HTTPGET > Bytes32!!!\n        fee = 0.1 * 10 ** 18; // (Varies by network and job)\n    }\n    \n    /**\n     * Create a Chainlink request to retrieve API response, find the target\n     * data, then multiply by 1000000000000000000 (to remove decimal places from data).\n     */\n    function requestData(address callBackContract, bytes4 functionSelector) public returns (bytes32 requestId) \n    {\n        Chainlink.Request memory request = buildChainlinkRequest(jobId, callBackContract, functionSelector);\n        \n        // Set the URL to perform the GET request on\n        request.add(\"get\", \"https://feh-resplendent.herokuapp.com/characters/latest?format=json\");\n        \n        // Set the path to find the desired data in the API response, where the response format is:\n        // {\"RAW\":\n        //   {\"ETH\":\n        //    {\"USD\":\n        //     {\n        //      \"VOLUME24HOUR\": xxx.xxx,\n        //     }\n        //    }\n        //   }\n        //  }\n\n        // old link: https://feh-resplendent-api.herokuapp.com/resplendents/latest\n        // with old link it would be: request.add(\"path\", \"theme.1\");\n\n\n        request.add(\"path\", \"realm_index\");\n        \n        // Multiply the result by 1000000000000000000 to remove decimals\n        //int timesAmount = 10**18;\n        //request.addInt(\"times\", timesAmount);\n        \n        // Sends the request\n        return sendChainlinkRequestTo(oracle, request, fee);\n    }\n    \n    /**\n     * Receive the response in the form of uint256\n     */ \n    function fulfill(bytes32 _requestId, bytes32 _api_data) public recordChainlinkFulfillment(_requestId)\n    {\n        api_data = _api_data;\n    }\n\n    function bytes32ToString(bytes32 _bytes32) public pure returns (string memory) {\n        uint8 i = 0;\n        while(i < 32 && _bytes32[i] != 0) {\n            i++;\n        }\n        bytes memory bytesArray = new bytes(i);\n        for (i = 0; i < 32 && _bytes32[i] != 0; i++) {\n            bytesArray[i] = _bytes32[i];\n        }\n        return string(bytesArray);\n    }\n\n    function strToUint(string memory _str) public pure returns(uint256 res, bool err) {\n    for (uint256 i = 0; i < bytes(_str).length; i++) {\n        if ((uint8(bytes(_str)[i]) - 48) < 0 || (uint8(bytes(_str)[i]) - 48) > 9) {\n            return (0, false);\n        }\n        res += (uint8(bytes(_str)[i]) - 48) * 10**(bytes(_str).length - i - 1);\n    }\n    return (res, true);\n}\n\n    // function withdrawLink() external {} - Implement a withdraw function to avoid locking your LINK in the contract\n}\n\n",
  "sourceMap": "460:3110:14:-:0;;;1291:1:3;1258:34;;865:274:14;;;;;;;;;-1:-1:-1;889:25:14;:23;:25::i;:::-;924:6;:51;;-1:-1:-1;;;;;;924:51:14;933:42;924:51;;;1006:42;:5;:42;1087:14;1081:3;:20;460:3110;;8856:123:3;8906:68;1077:42;-1:-1:-1;;;;;8924:47:3;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8688:6;:40;;-1:-1:-1;;;;;;8688:40:3;-1:-1:-1;;;;;8688:40:3;;;;;;;;;;8625:108;8906:68;8856:123::o;14:290:16:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:16;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:16:o;:::-;460:3110:14;;;;;;",
  "sourcePath": "contracts/APIConsumer.sol",
  "type": "contract"
}